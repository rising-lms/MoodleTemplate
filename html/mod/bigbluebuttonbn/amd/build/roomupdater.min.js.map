{"version":3,"file":"roomupdater.min.js","sources":["../src/roomupdater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS room updater.\n *\n * @module      mod_bigbluebuttonbn/roomupdater\n * @copyright   2021 Blindside Networks Inc\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Pending from 'core/pending';\nimport Templates from \"core/templates\";\nimport {exception as displayException} from 'core/notification';\nimport {getMeetingInfo} from './repository';\n\nconst timeout = 5000;\nconst maxFactor = 10;\n\nlet updateCount = 0;\nlet updateFactor = 1;\nlet timerReference = null;\nlet timerRunning = false;\n\nconst resetValues = () => {\n    updateCount = 0;\n    updateFactor = 1;\n};\n\n/**\n * Start the information poller.\n */\nexport const start = () => {\n    timerRunning = true;\n    timerReference = setTimeout(() => poll(), timeout);\n};\n\n/**\n * Stop the room updater.\n */\nexport const stop = () => {\n    timerRunning = false;\n    if (timerReference) {\n        clearInterval(timerReference);\n        timerReference = null;\n    }\n\n    resetValues();\n};\n\nconst poll = () => {\n    if (!timerRunning) {\n        // The poller has been stopped.\n        return;\n    }\n    if ((updateCount % updateFactor) === 0) {\n        updateRoom()\n        .then(() => {\n            if (updateFactor >= maxFactor) {\n                updateFactor = 1;\n            } else {\n                updateFactor++;\n            }\n\n            return;\n\n        })\n        .catch()\n        .then(() => {\n            timerReference = setTimeout(() => poll(), timeout);\n            return;\n        })\n        .catch();\n    }\n};\n\n/**\n * Update the room information.\n *\n * @param {boolean} [updatecache=false]\n * @returns {Promise}\n */\nexport const updateRoom = (updatecache = false) => {\n    const bbbRoomViewElement = document.getElementById('bbb-room-view');\n    if (bbbRoomViewElement === null) {\n        return Promise.resolve(false);\n    }\n\n    const bbbId = bbbRoomViewElement.dataset.bbbId;\n    const groupId = bbbRoomViewElement.dataset.groupId;\n\n    const pendingPromise = new Pending('mod_bigbluebuttonbn/roomupdater:updateRoom');\n\n    return getMeetingInfo(bbbId, groupId, updatecache)\n        .then(data => {\n            // Just make sure we have the right information for the template.\n            data.haspresentations = false;\n            if (data.presentations && data.presentations.length) {\n                data.haspresentations = true;\n            }\n            return Templates.renderForPromise('mod_bigbluebuttonbn/room_view', data);\n        })\n        .then(({html, js}) => Templates.replaceNodeContents(bbbRoomViewElement, html, js))\n        .then(() => pendingPromise.resolve())\n        .catch(displayException);\n};\n"],"names":["_interopRequireDefault","obj","__esModule","default","_pending","_templates","updateCount","updateFactor","timerReference","timerRunning","_exports","start","setTimeout","poll","stop","clearInterval","updateRoom","then","catch","updatecache","arguments","length","undefined","bbbRoomViewElement","document","getElementById","Promise","resolve","bbbId","dataset","groupId","pendingPromise","Pending","getMeetingInfo","data","haspresentations","presentations","Templates","renderForPromise","_ref","html","js","replaceNodeContents","displayException"],"mappings":"0LAwBuC,SAAAA,uBAAAC,KAAAA,OAAAA,KAAAA,IAAAC,WAAAD,IAAAE,CAAAA,QAAAF,IAAA;;;;;;;qHADvCG,SAAAJ,uBAAAI,UACAC,WAAAL,uBAAAK,YAOA,IAAIC,YAAc,EACdC,aAAe,EACfC,eAAiB,KACjBC,cAAe,EAajBC,SAAAC,MAHmBA,KACjBF,cAAe,EACfD,eAAiBI,YAAW,IAAMC,QAlBtB,IAkBsC,EAcpDH,SAAAI,KARkBA,KAChBL,cAAe,EACXD,iBACAO,cAAcP,gBACdA,eAAiB,MAnBrBF,YAAc,EACdC,aAAe,CAqBF,EAGjB,MAAMM,KAAOA,KACJJ,cAIAH,YAAcC,cAAkB,GACjCS,aACCC,MAAK,KACEV,cAzCE,GA0CFA,aAAe,EAEfA,cAGJ,IAGHW,QACAD,MAAK,KACFT,eAAiBI,YAAW,IAAMC,QArD9B,IAsDJ,IAEHK,OACL,EASSF,WAAa,WAAyB,IAAxBG,YAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClC,MAAMG,mBAAqBC,SAASC,eAAe,iBACnD,GAA2B,OAAvBF,mBACA,OAAOG,QAAQC,SAAQ,GAG3B,MAAMC,MAAQL,mBAAmBM,QAAQD,MACnCE,QAAUP,mBAAmBM,QAAQC,QAErCC,eAAiB,IAAIC,SAAO7B,QAAC,8CAEnC,OAAO,EAAA8B,YAAAA,gBAAeL,MAAOE,QAASX,aACjCF,MAAKiB,OAEFA,KAAKC,kBAAmB,EACpBD,KAAKE,eAAiBF,KAAKE,cAAcf,SACzCa,KAAKC,kBAAmB,GAErBE,mBAAUC,iBAAiB,gCAAiCJ,SAEtEjB,MAAKsB,OAAA,IAACC,KAACA,KAAIC,GAAEA,IAAGF,KAAA,OAAKF,WAAAA,QAAUK,oBAAoBnB,mBAAoBiB,KAAMC,GAAG,IAChFxB,MAAK,IAAMc,eAAeJ,YAC1BT,MAAMyB,0BACbjC,SAAAM,WAAAA,UAAA"}