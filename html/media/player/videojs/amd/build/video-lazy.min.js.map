{"version":3,"file":"video-lazy.min.js","sources":["../src/video-lazy.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.17.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n}(this, (function () { 'use strict';\n\n  var version$5 = \"7.17.0\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  var hooks_ = {};\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n\n  var hooks = function hooks(type, fn) {\n    hooks_[type] = hooks_[type] || [];\n\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n\n    return hooks_[type];\n  };\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hook = function hook(type, fn) {\n    hooks(type, fn);\n  };\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n\n\n  var removeHook = function removeHook(type, fn) {\n    var index = hooks(type).indexOf(fn);\n\n    if (index <= -1) {\n      return false;\n    }\n\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hookOnce = function hookOnce(type, fn) {\n    hooks(type, [].concat(fn).map(function (original) {\n      var wrapper = function wrapper() {\n        removeHook(type, wrapper);\n        return original.apply(void 0, arguments);\n      };\n\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   * @private\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  var FullscreenApi = {\n    prefixed: true\n  }; // browser API methods\n\n  var apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  var specApi = apiMap[0];\n  var browserApi; // determine the supported set of functions\n\n  for (var i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  } // map the browser API names to the spec API names\n\n\n  if (browserApi) {\n    for (var _i = 0; _i < browserApi.length; _i++) {\n      FullscreenApi[specApi[_i]] = browserApi[_i];\n    }\n\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n  // This is the private tracking variable for the logging history.\n  var history = [];\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n\n  var LogByTypeFactory = function LogByTypeFactory(name, log) {\n    return function (type, level, args) {\n      var lvl = log.levels[level];\n      var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n      if (type !== 'log') {\n        // Add the type to the front of the message when it's not \"log\".\n        args.unshift(type.toUpperCase() + ':');\n      } // Add console prefix after adding to history.\n\n\n      args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n      if (history) {\n        history.push([].concat(args)); // only store 1000 history entries\n\n        var splice = history.length - 1000;\n        history.splice(0, splice > 0 ? splice : 0);\n      } // If there's no console then don't try to output messages, but they will\n      // still be stored in history.\n\n\n      if (!window.console) {\n        return;\n      } // Was setting these once outside of this function, but containing them\n      // in the function makes it easier to test cases where console doesn't exist\n      // when the module is executed.\n\n\n      var fn = window.console[type];\n\n      if (!fn && type === 'debug') {\n        // Certain browsers don't have support for console.debug. For those, we\n        // should default to the closest comparable log.\n        fn = window.console.info || window.console.log;\n      } // Bail out if there's no console or if this type is not allowed by the\n      // current logging level.\n\n\n      if (!fn || !lvl || !lvlRegExp.test(type)) {\n        return;\n      }\n\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n  };\n\n  function createLogger$1(name) {\n    // This is the private tracking variable for logging level.\n    var level = 'info'; // the curried logByType bound to the specific log and history\n\n    var logByType;\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n\n    var log = function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logByType('log', level, args);\n    }; // This is the logByType helper that the logging methods below use\n\n\n    logByType = LogByTypeFactory(name, log);\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n\n    log.createLogger = function (subname) {\n      return createLogger$1(name + ': ' + subname);\n    };\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n\n\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n\n    log.level = function (lvl) {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n        }\n\n        level = lvl;\n      }\n\n      return level;\n    };\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n\n\n    log.history = function () {\n      return history ? [].concat(history) : [];\n    };\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n\n\n    log.history.filter = function (fname) {\n      return (history || []).filter(function (historyItem) {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n      });\n    };\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n\n\n    log.history.clear = function () {\n      if (history) {\n        history.length = 0;\n      }\n    };\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n\n\n    log.history.disable = function () {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n\n\n    log.history.enable = function () {\n      if (history === null) {\n        history = [];\n      }\n    };\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n\n\n    log.error = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return logByType('error', level, args);\n    };\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n\n\n    log.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return logByType('warn', level, args);\n    };\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n\n\n    log.debug = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return logByType('debug', level, args);\n    };\n\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  var log$1 = createLogger$1('VIDEOJS');\n  var createLogger = log$1.createLogger;\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      module.exports = _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    module.exports = _extends;\n  });\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  var toString$1 = Object.prototype.toString;\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n\n  var keys = function keys(object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n\n\n  function each(object, fn) {\n    keys(object).forEach(function (key) {\n      return fn(object[key], key);\n    });\n  }\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n\n  function reduce(object, fn, initial) {\n    if (initial === void 0) {\n      initial = 0;\n    }\n\n    return keys(object).reduce(function (accum, key) {\n      return fn(accum, object[key], key);\n    }, initial);\n  }\n  /**\n   * Object.assign-style object shallow merge/extend.\n   *\n   * @param  {Object} target\n   * @param  {Object} ...sources\n   * @return {Object}\n   */\n\n  function assign(target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    if (Object.assign) {\n      return _extends_1.apply(void 0, [target].concat(sources));\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @function\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyleValue;\n\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n  var USER_AGENT = window.navigator && window.navigator.userAgent || '';\n  var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n  var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPOD = /iPod/i.test(USER_AGENT);\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {string|null}\n   */\n\n  var IOS_VERSION = function () {\n    var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n    if (match && match[1]) {\n      return match[1];\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANDROID = /Android/i.test(USER_AGENT);\n  /**\n   * The detected Android version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|string|null}\n   */\n\n  var ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n    if (!match) {\n      return null;\n    }\n\n    var major = match[1] && parseFloat(match[1]);\n    var minor = match[2] && parseFloat(match[2]);\n\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is a native Android browser.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_EDGE = /Edg/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Google Chrome.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n  /**\n   * The detected Google Chrome version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var CHROME_VERSION = function () {\n    var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n\n    return null;\n  }();\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var IE_VERSION = function () {\n    var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    var version = result && parseFloat(result[1]);\n\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n\n    return version;\n  }();\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\n  var IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    IS_IPOD: IS_IPOD,\n    IOS_VERSION: IOS_VERSION,\n    IS_ANDROID: IS_ANDROID,\n    ANDROID_VERSION: ANDROID_VERSION,\n    IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n    IS_FIREFOX: IS_FIREFOX,\n    IS_EDGE: IS_EDGE,\n    IS_CHROME: IS_CHROME,\n    CHROME_VERSION: CHROME_VERSION,\n    IE_VERSION: IE_VERSION,\n    IS_SAFARI: IS_SAFARI,\n    IS_WINDOWS: IS_WINDOWS,\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IPAD: IS_IPAD,\n    IS_IPHONE: IS_IPHONE,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n\n\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n  /**\n   * Produce a regular expression for matching a className within an elements className.\n   *\n   * @private\n   * @param  {string} className\n   *         The className to generate the RegExp for.\n   *\n   * @return {RegExp}\n   *         The RegExp that will check for a specific `className` in an elements\n   *         className.\n   */\n\n\n  function classRegExp(className) {\n    return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n  }\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n\n\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n\n      var ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  function createEl(tagName, properties, attributes, content) {\n    if (tagName === void 0) {\n      tagName = 'div';\n    }\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      var val = properties[propName]; // See #2176\n      // We originally were accepting both properties and attributes in the\n      // same object, but that doesn't work so well.\n\n      if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n        log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n        el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n        // method for it.\n      } else if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n\n    if (content) {\n      appendContent(el, content);\n    }\n\n    return el;\n  }\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n\n    return el;\n  }\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n\n    if (element.classList) {\n      return element.classList.contains(classToCheck);\n    }\n\n    return classRegExp(classToCheck).test(element.className);\n  }\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {string} classToAdd\n   *         Class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n\n  function addClass(element, classToAdd) {\n    if (element.classList) {\n      element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n      // in the case of classList not being supported.\n    } else if (!hasClass(element, classToAdd)) {\n      element.className = (element.className + ' ' + classToAdd).trim();\n    }\n\n    return element;\n  }\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {string} classToRemove\n   *         Class name to remove\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n\n  function removeClass(element, classToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n\n    if (element.classList) {\n      element.classList.remove(classToRemove);\n    } else {\n      throwIfWhitespace(classToRemove);\n      element.className = element.className.split(/\\s+/).filter(function (c) {\n        return c !== classToRemove;\n      }).join(' ');\n    }\n\n    return element;\n  }\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n\n  function toggleClass(element, classToToggle, predicate) {\n    // This CANNOT use `classList` internally because IE11 does not support the\n    // second parameter to the `classList.toggle()` method! Which is fine because\n    // `classList` will be used by the add/remove functions.\n    var has = hasClass(element, classToToggle);\n\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n\n    if (typeof predicate !== 'boolean') {\n      predicate = !has;\n    } // If the necessary class operation matches the current state of the\n    // element, no action is required.\n\n\n    if (predicate === has) {\n      return;\n    }\n\n    if (predicate) {\n      addClass(element, classToToggle);\n    } else {\n      removeClass(element, classToToggle);\n    }\n\n    return element;\n  }\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      var attrValue = attributes[attrName];\n\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n\n  function getAttributes(tag) {\n    var obj = {}; // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n\n    var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      var attrs = tag.attributes;\n\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var attrName = attrs[i].name;\n        var attrVal = attrs[i].value; // check for known booleans\n        // the matching element property will return a value for typeof\n\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n\n        obj[attrName] = attrVal;\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n  /**\n   * Attempt to block the ability to select text.\n   */\n\n  function blockTextSelection() {\n    document.body.focus();\n\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n  /**\n   * Turn off text selection blocking.\n   */\n\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      var rect = el.getBoundingClientRect();\n      var result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n\n      return result;\n    }\n  }\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    var width = el.offsetWidth;\n    var height = el.offsetHeight;\n    var left = 0;\n    var top = 0;\n\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n\n  function getPointerPosition(el, event) {\n    var translated = {\n      x: 0,\n      y: 0\n    };\n\n    if (IS_IOS) {\n      var item = el;\n\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        var transform = computedStyle(item, 'transform');\n\n        if (/^matrix/.test(transform)) {\n          var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n          translated.x += _values[12];\n          translated.y += _values[13];\n        }\n\n        item = item.parentNode;\n      }\n    }\n\n    var position = {};\n    var boxTarget = findPosition(event.target);\n    var box = findPosition(el);\n    var boxW = box.width;\n    var boxH = box.height;\n    var offsetY = event.offsetY - (box.top - boxTarget.top);\n    var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n\n  function isTextNode(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    return el;\n  }\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    } // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n\n\n    return (Array.isArray(content) ? content : [content]).map(function (value) {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      if (isEl(value) || isTextNode(value)) {\n        return value;\n      }\n\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(function (value) {\n      return value;\n    });\n  }\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(function (node) {\n      return el.appendChild(node);\n    });\n    return el;\n  }\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n      return true;\n    }\n\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n      return true;\n    } // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n\n\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n\n  var $ = createQuerier('querySelector');\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n\n  var $$ = createQuerier('querySelectorAll');\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  var _windowLoaded = false;\n  var videojs$1;\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n\n  var autoSetup = function autoSetup() {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n\n    var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n    if (mediaEls && mediaEls.length > 0) {\n      for (var i = 0, e = mediaEls.length; i < e; i++) {\n        var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          } // If getAttribute isn't defined, we need to wait for the DOM.\n\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      } // No videos were found, so keep looping unless page is finished loading.\n\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n\n\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n\n    window.setTimeout(autoSetup, wait);\n  }\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n\n\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  var createStyleElement = function createStyleElement(className) {\n    var style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n\n  var setTextContent = function setTextContent(el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  var _initialGuid = 3;\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n\n  var _guid = _initialGuid;\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n  var FakeWeakMap;\n\n  if (!window.WeakMap) {\n    FakeWeakMap = /*#__PURE__*/function () {\n      function FakeWeakMap() {\n        this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n        this.data = {};\n      }\n\n      var _proto = FakeWeakMap.prototype;\n\n      _proto.set = function set(key, value) {\n        var access = key[this.vdata] || newGUID();\n\n        if (!key[this.vdata]) {\n          key[this.vdata] = access;\n        }\n\n        this.data[access] = value;\n        return this;\n      };\n\n      _proto.get = function get(key) {\n        var access = key[this.vdata]; // we have data, return it\n\n        if (access) {\n          return this.data[access];\n        } // we don't have data, return nothing.\n        // return undefined explicitly as that's the contract for this method\n\n\n        log$1('We have no data for this element', key);\n        return undefined;\n      };\n\n      _proto.has = function has(key) {\n        var access = key[this.vdata];\n        return access in this.data;\n      };\n\n      _proto[\"delete\"] = function _delete(key) {\n        var access = key[this.vdata];\n\n        if (access) {\n          delete this.data[access];\n          delete key[this.vdata];\n        }\n      };\n\n      return FakeWeakMap;\n    }();\n  }\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  var DomData = window.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type]; // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n      // Remove the meta-handler from the element\n\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    } // Remove the events object if there are no types left\n\n\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    } // Finally remove the element data if there is no data left\n\n\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData[\"delete\"](elem);\n    }\n  }\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n\n\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n\n\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n\n    function returnTrue() {\n      return true;\n    }\n\n    function returnFalse() {\n      return false;\n    } // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      var old = event || window.event;\n      event = {}; // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      } // The event occurred on this element\n\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      } // Handle which other element the event is related to\n\n\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      } // Stop the default browser action\n\n\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false; // Stop the event from bubbling\n\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = document.documentElement;\n        var body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } // Handle key presses\n\n\n      event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n\n    event.fixed_ = true; // Returns fixed-up instance\n\n    return event;\n  }\n  /**\n   * Whether passive event listeners are supported\n   */\n\n  var _supportsPassive;\n\n  var supportsPassive = function supportsPassive() {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {// disregard\n      }\n    }\n\n    return _supportsPassive;\n  };\n  /**\n   * Touch events Chrome expects to be passive\n   */\n\n\n  var passiveEvents = ['touchstart', 'touchmove'];\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n\n    var data = DomData.get(elem); // We need a place to store all our handler data\n\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n      data.disabled = false;\n\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n\n        event = fixEvent(event);\n        var handlers = data.handlers[event.type];\n\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          var handlersCopy = handlers.slice(0);\n\n          for (var m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        var options = false;\n\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n    if (!data.handlers) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    } // Utility function\n\n\n    var removeType = function removeType(el, t) {\n      data.handlers[t] = [];\n\n      _cleanUpEvents(el, t);\n    }; // Are we removing all bound events?\n\n\n    if (type === undefined) {\n      for (var t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n\n      return;\n    }\n\n    var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n    if (!handlers) {\n      return;\n    } // If no listener was provided, remove all listeners for type\n\n\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    } // We're only removing a single handler\n\n\n    if (fn.guid) {\n      for (var n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n\n    _cleanUpEvents(elem, type);\n  }\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n    // handler;\n    // If an event name was passed as a string, creates an event out of it\n\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    } // Normalizes the event properties.\n\n\n    event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n\n\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n\n      var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true; // Executes the default action.\n\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        } // Re-enables event dispatching.\n\n\n        targetData.disabled = false;\n      }\n    } // Inform the triggerer if the default was prevented by returning false\n\n\n    return !event.defaultPrevented;\n  }\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function any(elem, type, fn) {\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  var UPDATE_REFRESH_INTERVAL = 30;\n  /**\n   * Bind (a.k.a proxy or context). A simple method for changing the context of\n   * a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n\n  var bind = function bind(context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    } // Create the new function that changes the context\n\n\n    var bound = fn.bind(context); // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n\n  var throttle = function throttle(fn, wait) {\n    var last = window.performance.now();\n\n    var throttled = function throttled() {\n      var now = window.performance.now();\n\n      if (now - last >= wait) {\n        fn.apply(void 0, arguments);\n        last = now;\n      }\n    };\n\n    return throttled;\n  };\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n\n  var debounce = function debounce(func, wait, immediate, context) {\n    if (context === void 0) {\n      context = window;\n    }\n\n    var timeout;\n\n    var cancel = function cancel() {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n    /* eslint-disable consistent-this */\n\n\n    var debounced = function debounced() {\n      var self = this;\n      var args = arguments;\n\n      var _later = function later() {\n        timeout = null;\n        _later = null;\n\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(_later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  /**\n   * @file src/js/event-target.js\n   */\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n\n  var EventTarget$2 = function EventTarget() {};\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {Object} EventTarget~Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n\n\n  EventTarget$2.prototype.allowedEvents_ = {};\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  EventTarget$2.prototype.on = function (type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    on(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n\n\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n\n  EventTarget$2.prototype.off = function (type, fn) {\n    off(this, type, fn);\n  };\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n\n\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n\n  EventTarget$2.prototype.one = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    one(this, type, fn);\n    this.addEventListener = ael;\n  };\n\n  EventTarget$2.prototype.any = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    any(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n\n\n  EventTarget$2.prototype.trigger = function (event) {\n    var type = event.type || event; // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n\n    if (typeof event === 'string') {\n      event = {\n        type: type\n      };\n    }\n\n    event = fixEvent(event);\n\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n\n    trigger(this, event);\n  };\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n\n\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n  var EVENT_MAP;\n\n  EventTarget$2.prototype.queueTrigger = function (event) {\n    var _this = this;\n\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n\n    var type = event.type || event;\n    var map = EVENT_MAP.get(this);\n\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n\n    var oldTimeout = map.get(type);\n    map[\"delete\"](type);\n    window.clearTimeout(oldTimeout);\n    var timeout = window.setTimeout(function () {\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP[\"delete\"](_this);\n      }\n\n      _this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  };\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n\n  var objName = function objName(obj) {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n\n    if (obj.name_) {\n      return obj.name_;\n    }\n\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n\n    return typeof obj;\n  };\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n\n\n  var isEvented = function isEvented(object) {\n    return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n      return typeof object[k] === 'function';\n    });\n  };\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n\n\n  var addEventedCallback = function addEventedCallback(target, callback) {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n\n      target.eventedCallbacks.push(callback);\n    }\n  };\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n\n\n  var isValidEventType = function isValidEventType(type) {\n    return (// The regex here verifies that the `type` contains at least one non-\n      // whitespace character.\n      typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n    );\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateTarget = function validateTarget(target, obj, fnName) {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateEventType = function validateEventType(type, obj, fnName) {\n    if (!isValidEventType(type)) {\n      throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateListener = function validateListener(listener, obj, fnName) {\n    if (typeof listener !== 'function') {\n      throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n    }\n  };\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n\n\n  var normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    var target;\n    var type;\n    var listener;\n\n    if (isTargetingSelf) {\n      target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n\n      if (args.length >= 3) {\n        args.shift();\n      }\n\n      type = args[0];\n      listener = args[1];\n    } else {\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind(self, listener);\n    return {\n      isTargetingSelf: isTargetingSelf,\n      target: target,\n      type: type,\n      listener: listener\n    };\n  };\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n\n\n  var listen = function listen(target, method, type, listener) {\n    validateTarget(target, target, method);\n\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n\n\n  var EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on: function on() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n          isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n          target = _normalizeListenArgs.target,\n          type = _normalizeListenArgs.type,\n          listener = _normalizeListenArgs.listener;\n\n      listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        var removeListenerOnDispose = function removeListenerOnDispose() {\n          return _this.off(target, type, listener);\n        }; // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n\n\n        removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n\n        var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n          return _this.off('dispose', removeListenerOnDispose);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one: function one() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n          isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n          target = _normalizeListenArgs2.target,\n          type = _normalizeListenArgs2.type,\n          listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener); // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        var wrapper = function wrapper() {\n          _this2.off(target, type, wrapper);\n\n          for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            largs[_key3] = arguments[_key3];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any: function any() {\n      var _this3 = this;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n          isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n          target = _normalizeListenArgs3.target,\n          type = _normalizeListenArgs3.type,\n          listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener); // Targeting another evented object.\n      } else {\n        var wrapper = function wrapper() {\n          _this3.off(target, type, wrapper);\n\n          for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            largs[_key5] = arguments[_key5];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off: function off$1(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n      } else {\n        var target = targetOrType;\n        var type = typeOrListener; // Fail fast and in a meaningful way!\n\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n        listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n\n        this.off('dispose', listener);\n\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger: function trigger$1(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      var type = event && typeof event !== 'string' ? event.type : event;\n\n      if (!isValidEventType(type)) {\n        var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n        if (event) {\n          (this.log || log$1).error(error);\n        } else {\n          throw new Error(error);\n        }\n      }\n\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n\n  function evented(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n      }\n\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n\n    assign(target, EventedMixin);\n\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    } // When any evented object is disposed, it removes all its listeners.\n\n\n    target.on('dispose', function () {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData[\"delete\"](val);\n        }\n      });\n      window.setTimeout(function () {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n\n  var StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState: function setState(stateUpdates) {\n      var _this = this;\n\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n\n      var changes;\n      each(stateUpdates, function (value, key) {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (_this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: _this.state[key],\n            to: value\n          };\n        }\n\n        _this.state[key] = value;\n      }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes: changes,\n          type: 'statechanged'\n        });\n      }\n\n      return changes;\n    }\n  };\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n\n  function stateful(target, defaultState) {\n    assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n\n    target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n\n    return target;\n  }\n\n  /**\n   * @file string-cases.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  var toLowerCase = function toLowerCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toLowerCase();\n    });\n  };\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n\n  var toTitleCase$1 = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n\n  var titleCaseEquals = function titleCaseEquals(str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @static\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n\n  function mergeOptions$3() {\n    var result = {};\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n\n        result[key] = mergeOptions$3(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  var MapSham = /*#__PURE__*/function () {\n    function MapSham() {\n      this.map_ = {};\n    }\n\n    var _proto = MapSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.map_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.map_[key];\n      return has;\n    };\n\n    _proto.set = function set(key, value) {\n      this.map_[key] = value;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.map_) {\n        callback.call(thisArg, this.map_[key], key, this);\n      }\n    };\n\n    return MapSham;\n  }();\n\n  var Map$1 = window.Map ? window.Map : MapSham;\n\n  var SetSham = /*#__PURE__*/function () {\n    function SetSham() {\n      this.set_ = {};\n    }\n\n    var _proto = SetSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.set_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.set_[key];\n      return has;\n    };\n\n    _proto.add = function add(key) {\n      this.set_[key] = 1;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.set_) {\n        callback.call(thisArg, key, key, this);\n      }\n    };\n\n    return SetSham;\n  }();\n\n  var Set = window.Set ? window.Set : SetSham;\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n\n  var Component$1 = /*#__PURE__*/function () {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * paramters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    function Component(player, options, ready) {\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n\n      this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n      this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n      this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n      options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n      this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        var id = player && player.id && player.id() || 'no_player';\n        this.id_ = id + \"_component_\" + newGUID();\n      }\n\n      this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      } // if evented is anything except false, we want to mixin in evented\n\n\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set();\n      this.setIntervalIds_ = new Set();\n      this.rafIds_ = new Set();\n      this.namedRafs_ = new Map$1();\n      this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n      if (options.initChildren !== false) {\n        this.initChildren();\n      } // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n\n\n      this.ready(ready);\n\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.dispose = function dispose() {\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n\n\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true; // Dispose all children.\n\n      if (this.children_) {\n        for (var i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      } // Delete child references\n\n\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n\n        this.el_ = null;\n      } // remove reference to the player after disposing of the element\n\n\n      this.player_ = null;\n    }\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    ;\n\n    _proto.isDisposed = function isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    ;\n\n    _proto.player = function player() {\n      return this.player_;\n    }\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:mergeOptions}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    ;\n\n    _proto.options = function options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n\n      this.options_ = mergeOptions$3(this.options_, obj);\n      return this.options_;\n    }\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    ;\n\n    _proto.el = function el() {\n      return this.el_;\n    }\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    ;\n\n    _proto.localize = function localize(string, tokens, defaultValue) {\n      if (defaultValue === void 0) {\n        defaultValue = string;\n      }\n\n      var code = this.player_.language && this.player_.language();\n      var languages = this.player_.languages && this.player_.languages();\n      var language = languages && languages[code];\n      var primaryCode = code && code.split('-')[0];\n      var primaryLang = languages && languages[primaryCode];\n      var localizedString = defaultValue;\n\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          var value = tokens[index - 1];\n          var ret = value;\n\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n\n          return ret;\n        });\n      }\n\n      return localizedString;\n    }\n    /**\n     * Handles language change for the player in components. Should be overriden by sub-components.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {}\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    ;\n\n    _proto.contentEl = function contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    ;\n\n    _proto.id = function id() {\n      return this.id_;\n    }\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    ;\n\n    _proto.name = function name() {\n      return this.name_;\n    }\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    ;\n\n    _proto.children = function children() {\n      return this.children_;\n    }\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    ;\n\n    _proto.getChildById = function getChildById(id) {\n      return this.childIndex_[id];\n    }\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    ;\n\n    _proto.getChild = function getChild(name) {\n      if (!name) {\n        return;\n      }\n\n      return this.childNameIndex_[name];\n    }\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    ;\n\n    _proto.getDescendant = function getDescendant() {\n      for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n        names[_key] = arguments[_key];\n      }\n\n      // flatten array argument into the main array\n      names = names.reduce(function (acc, n) {\n        return acc.concat(n);\n      }, []);\n      var currentChild = this;\n\n      for (var i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n\n      return currentChild;\n    }\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options, index) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (index === void 0) {\n        index = this.children_.length;\n      }\n\n      var component;\n      var componentName; // If child is a string, create component with options\n\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        var componentClassName = options.componentClass || componentName; // Set name through options\n\n        options.name = componentName; // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n\n        var ComponentClass = Component.getComponent(componentClassName);\n\n        if (!ComponentClass) {\n          throw new Error(\"Component \" + componentClassName + \" does not exist\");\n        } // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n\n\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n\n        component = new ComponentClass(this.player_ || this, options); // child is a component instance\n      } else {\n        component = child;\n      }\n\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      } // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n\n\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      } // Add the UI object's element to the container div (box)\n      // Having an element is not required\n\n\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        var refNode = null;\n\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n\n        this.contentEl().insertBefore(component.el(), refNode);\n      } // Return so it can stored on parent object if desired.\n\n\n      return component;\n    }\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      if (!component || !this.children_) {\n        return;\n      }\n\n      var childFound = false;\n\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!childFound) {\n        return;\n      }\n\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      var compEl = component.el();\n\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    ;\n\n    _proto.initChildren = function initChildren() {\n      var _this = this;\n\n      var children = this.options_.children;\n\n      if (children) {\n        // `this` is `parent`\n        var parentOptions = this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts; // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          } // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n\n\n          if (opts === false) {\n            return;\n          } // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n\n\n          if (opts === true) {\n            opts = {};\n          } // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n\n\n          opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n\n          var newChild = _this.addChild(name, opts);\n\n          if (newChild) {\n            _this[name] = newChild;\n          }\n        }; // Allow for an array of children details to passed in the options\n\n\n        var workingChildren;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name;\n          var opts;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return {\n            name: name,\n            opts: opts\n          };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ;\n\n    _proto.ready = function ready(fn, sync) {\n      if (sync === void 0) {\n        sync = false;\n      }\n\n      if (!fn) {\n        return;\n      }\n\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    ;\n\n    _proto.triggerReady = function triggerReady() {\n      this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n      this.setTimeout(function () {\n        var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n        this.readyQueue_ = [];\n\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        } // Allow for using event listeners also\n\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('ready');\n      }, 1);\n    }\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$ = function $$1(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$$ = function $$$1(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    ;\n\n    _proto.hasClass = function hasClass$1(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {string} classToAdd\n     *        CSS class name to add\n     */\n    ;\n\n    _proto.addClass = function addClass$1(classToAdd) {\n      addClass(this.el_, classToAdd);\n    }\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {string} classToRemove\n     *        CSS class name to remove\n     */\n    ;\n\n    _proto.removeClass = function removeClass$1(classToRemove) {\n      removeClass(this.el_, classToRemove);\n    }\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    ;\n\n    _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    ;\n\n    _proto.show = function show() {\n      this.removeClass('vjs-hidden');\n    }\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    ;\n\n    _proto.hide = function hide() {\n      this.addClass('vjs-hidden');\n    }\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.lockShowing = function lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unlockShowing = function unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    ;\n\n    _proto.getAttribute = function getAttribute$1(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    ;\n\n    _proto.setAttribute = function setAttribute$1(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    ;\n\n    _proto.removeAttribute = function removeAttribute$1(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.width = function width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.height = function height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    ;\n\n    _proto.dimensions = function dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    ;\n\n    _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        } // Check if using css width/height (% or px) and adjust\n\n\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n\n        return;\n      } // Not setting a value, so getting it\n      // Make sure element exists\n\n\n      if (!this.el_) {\n        return 0;\n      } // Get dimension value from style\n\n\n      var val = this.el_.style[widthOrHeight];\n      var pxIndex = val.indexOf('px');\n\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      } // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n\n\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    ;\n\n    _proto.currentDimension = function currentDimension(widthOrHeight) {\n      var computedWidthOrHeight = 0;\n\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n        computedWidthOrHeight = this.el_[rule];\n      }\n\n      return computedWidthOrHeight;\n    }\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    ;\n\n    _proto.currentDimensions = function currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    ;\n\n    _proto.currentWidth = function currentWidth() {\n      return this.currentDimension('width');\n    }\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    ;\n\n    _proto.currentHeight = function currentHeight() {\n      return this.currentDimension('height');\n    }\n    /**\n     * Set the focus to this component\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.el_.focus();\n    }\n    /**\n     * Remove the focus from this component\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.el_.blur();\n    }\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser.\n        event.stopPropagation();\n        this.player_.handleKeyDown(event);\n      }\n    }\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    ;\n\n    _proto.emitTapEvents = function emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      var touchStart = 0;\n      var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n\n      var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n      var touchTimeThreshold = 200;\n      var couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n          touchStart = window.performance.now(); // Reset couldBeTap tracking\n\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          var xdiff = event.touches[0].pageX - firstTouch.pageX;\n          var ydiff = event.touches[0].pageY - firstTouch.pageY;\n          var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n\n      var noTap = function noTap() {\n        couldBeTap = false;\n      }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n\n      this.on('touchend', function (event) {\n        firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          var touchTime = window.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('tap'); // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    ;\n\n    _proto.enableTouchActivity = function enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      } // listener for reporting that the user is active\n\n\n      var report = bind(this.player(), this.player().reportUserActivity);\n      var touchHolding;\n      this.on('touchstart', function () {\n        report(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n        touchHolding = this.setInterval(report, 250);\n      });\n\n      var touchEnd = function touchEnd(event) {\n        report(); // stop the interval that maintains activity if the touch is holding\n\n        this.clearInterval(touchHolding);\n      };\n\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    ;\n\n    _proto.setTimeout = function setTimeout(fn, timeout) {\n      var _this2 = this;\n\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(function () {\n        if (_this2.setTimeoutIds_.has(timeoutId)) {\n          _this2.setTimeoutIds_[\"delete\"](timeoutId);\n        }\n\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    ;\n\n    _proto.clearTimeout = function clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_[\"delete\"](timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n\n      return timeoutId;\n    }\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    ;\n\n    _proto.setInterval = function setInterval(fn, interval) {\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      var intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    ;\n\n    _proto.clearInterval = function clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_[\"delete\"](intervalId);\n        window.clearInterval(intervalId);\n      }\n\n      return intervalId;\n    }\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    ;\n\n    _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n      var _this3 = this;\n\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.setTimeout(fn, 1000 / 60);\n      }\n\n      this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n\n      var id;\n      fn = bind(this, fn);\n      id = window.requestAnimationFrame(function () {\n        if (_this3.rafIds_.has(id)) {\n          _this3.rafIds_[\"delete\"](id);\n        }\n\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    ;\n\n    _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n      var _this4 = this;\n\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.clearTimersOnDispose_();\n      fn = bind(this, fn);\n      var id = this.requestAnimationFrame(function () {\n        fn();\n\n        if (_this4.namedRafs_.has(name)) {\n          _this4.namedRafs_[\"delete\"](name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    ;\n\n    _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_[\"delete\"](name);\n    }\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    ;\n\n    _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.clearTimeout(id);\n      }\n\n      if (this.rafIds_.has(id)) {\n        this.rafIds_[\"delete\"](id);\n        window.cancelAnimationFrame(id);\n      }\n\n      return id;\n    }\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    ;\n\n    _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n      var _this5 = this;\n\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', function () {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n          var idName = _ref[0],\n              cancelName = _ref[1];\n\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          _this5[idName].forEach(function (val, key) {\n            return _this5[cancelName](key);\n          });\n        });\n        _this5.clearingTimersOnDispose_ = false;\n      });\n    }\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    ;\n\n    Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n      }\n\n      var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n      var isTech = Tech && Tech.isTech(ComponentToRegister);\n      var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n      if (isTech || !isComp) {\n        var reason;\n\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n\n        throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n      }\n\n      name = toTitleCase$1(name);\n\n      if (!Component.components_) {\n        Component.components_ = {};\n      }\n\n      var Player = Component.getComponent('Player');\n\n      if (name === 'Player' && Player && Player.players) {\n        var players = Player.players;\n        var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n\n        if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n          return players[pname];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n\n      Component.components_[name] = ComponentToRegister;\n      Component.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     */\n    ;\n\n    Component.getComponent = function getComponent(name) {\n      if (!name || !Component.components_) {\n        return;\n      }\n\n      return Component.components_[name];\n    };\n\n    return Component;\n  }();\n  /**\n   * Whether or not this component supports `requestAnimationFrame`.\n   *\n   * This is exposed primarily for testing purposes.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\n  Component$1.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n  Component$1.registerComponent('Component', Component$1);\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  var assertThisInitialized = _assertThisInitialized;\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var inheritsLoose = _inheritsLoose;\n\n  /**\n   * @file time-ranges.js\n   * @module time-ranges\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n    }\n  }\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n\n\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n\n\n  function createTimeRangesObj(ranges) {\n    var timeRangesObj;\n\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start: function start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end: function end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = function () {\n        return (ranges || []).values();\n      };\n    }\n\n    return timeRangesObj;\n  }\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n\n\n  function createTimeRanges(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n\n  function bufferedPercent(buffered, duration) {\n    var bufferedDuration = 0;\n    var start;\n    var end;\n\n    if (!duration) {\n      return 0;\n    }\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    for (var i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      bufferedDuration += end - start;\n    }\n\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n\n      assign(this, value);\n    }\n\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n\n\n  MediaError.prototype.code = 0;\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n\n  MediaError.prototype.message = '';\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n\n  MediaError.prototype.status = null;\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  }; // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  } // jsdocs for instance/static members added above\n\n  var tuple = SafeParseTuple;\n\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, function (e) {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  var trackToJson_ = function trackToJson_(track) {\n    var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n\n\n  var textTracksToJson = function textTracksToJson(tech) {\n    var trackEls = tech.$$('track');\n    var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n      return t.track;\n    });\n    var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      var json = trackToJson_(trackEl.track);\n\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n\n\n  var jsonToTextTracks = function jsonToTextTracks(json, tech) {\n    json.forEach(function (track) {\n      var addedTrack = tech.addRemoteTextTrack(track).track;\n\n      if (!track.src && track.cues) {\n        track.cues.forEach(function (cue) {\n          return addedTrack.addCue(cue);\n        });\n      }\n    });\n    return tech.textTracks();\n  };\n\n  var textTrackConverter = {\n    textTracksToJson: textTracksToJson,\n    jsonToTextTracks: jsonToTextTracks,\n    trackToJson_: trackToJson_\n  };\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      } // Numbers\n\n\n      if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n      var search = String(searchInput); // check codes\n\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // check aliases\n\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // weird character?\n\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          } // check aliases\n\n\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n\n        return false;\n      }\n    };\n\n    exports = module.exports = keyCode;\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222\n    }; // Helper aliases\n\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n    };\n    /*!\n     * Programatically add the following\n     */\n    // lower case chars\n\n    for (i = 97; i < 123; i++) {\n      codes[String.fromCharCode(i)] = i - 32;\n    } // numbers\n\n\n    for (var i = 48; i < 58; i++) {\n      codes[i - 48] = i;\n    } // function keys\n\n\n    for (i = 1; i < 13; i++) {\n      codes['f' + i] = i + 111;\n    } // numpad keys\n\n\n    for (i = 0; i < 10; i++) {\n      codes['numpad ' + i] = i + 96;\n    }\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n    // Create reverse mapping\n\n    for (i in codes) {\n      names[codes[i]] = i;\n    } // Add aliases\n\n\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  keycode.code;\n  keycode.codes;\n  keycode.aliases;\n  keycode.names;\n  keycode.title;\n\n  var MODAL_CLASS_NAME = 'vjs-modal-dialog';\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n\n  var ModalDialog = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ModalDialog, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    function ModalDialog(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.close_ = function (e) {\n        return _this.close(e);\n      };\n\n      _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n      _this.closeable(!_this.options_.uncloseable);\n\n      _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n\n\n      _this.contentEl_ = createEl('div', {\n        className: MODAL_CLASS_NAME + \"-content\"\n      }, {\n        role: 'document'\n      });\n      _this.descEl_ = createEl('p', {\n        className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n        id: _this.el().getAttribute('aria-describedby')\n      });\n      textContent(_this.descEl_, _this.description());\n\n      _this.el_.appendChild(_this.descEl_);\n\n      _this.el_.appendChild(_this.contentEl_);\n\n      return _this;\n    }\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n\n\n    var _proto = ModalDialog.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': this.id() + \"_description\",\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    ;\n\n    _proto.label = function label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    ;\n\n    _proto.description = function description() {\n      var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n\n      return desc;\n    }\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    ;\n\n    _proto.open = function open() {\n      if (!this.opened_) {\n        var player = this.player();\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('beforemodalopen');\n        this.opened_ = true; // Fill content if the modal has never opened before and\n        // never been filled.\n\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        } // If the player was playing, pause it and take note of its previously\n        // playing state.\n\n\n        this.wasPlaying_ = !player.paused();\n\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n\n        this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    ;\n\n    _proto.opened = function opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n\n      return this.opened_;\n    }\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    ;\n\n    _proto.close = function close() {\n      if (!this.opened_) {\n        return;\n      }\n\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n\n      this.off('keydown', this.handleKeyDown_);\n\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    ;\n\n    _proto.closeable = function closeable(value) {\n      if (typeof value === 'boolean') {\n        var closeable = this.closeable_ = !!value;\n        var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          var temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        } // If this is being made uncloseable and has a close button, remove it.\n\n\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n\n      return this.closeable_;\n    }\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    ;\n\n    _proto.fill = function fill() {\n      this.fillWith(this.content());\n    }\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    ;\n\n    _proto.fillWith = function fillWith(content) {\n      var contentEl = this.contentEl();\n      var parentEl = contentEl.parentNode;\n      var nextSiblingEl = contentEl.nextSibling;\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      } // make sure that the close button is last in the dialog DOM\n\n\n      var closeButton = this.getChild('closeButton');\n\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    ;\n\n    _proto.empty = function empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('modalempty');\n    }\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    ;\n\n    _proto.content = function content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n\n      return this.content_;\n    }\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalFocus_ = function conditionalFocus_() {\n      var activeEl = document.activeElement;\n      var playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      } // exit early if it isn't a tab key\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n\n      var focusableEls = this.focusableEls_();\n      var activeEl = this.el_.querySelector(':focus');\n      var focusIndex;\n\n      for (var i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    ;\n\n    _proto.focusableEls_ = function focusableEls_() {\n      var allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, function (child) {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    };\n\n    return ModalDialog;\n  }(Component$1);\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n\n  var TrackList = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(TrackList, _EventTarget);\n\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    function TrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.tracks_ = [];\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'length', {\n        get: function get() {\n          return this.tracks_.length;\n        }\n      });\n\n      for (var i = 0; i < tracks.length; i++) {\n        _this.addTrack(tracks[i]);\n      }\n\n      return _this;\n    }\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = TrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      var index = this.tracks_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.tracks_[index];\n          }\n        });\n      } // Do not add duplicate tracks\n\n\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n\n        this.trigger({\n          track: track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n\n      track.labelchange_ = function () {\n        _this2.trigger({\n          track: track,\n          type: 'labelchange',\n          target: _this2\n        });\n      };\n\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    ;\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      var track;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n\n          if (track.off) {\n            track.off();\n          }\n\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!track) {\n        return;\n      }\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n\n\n      this.trigger({\n        track: track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    ;\n\n    _proto.getTrackById = function getTrackById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var track = this[i];\n\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TrackList;\n  }(EventTarget$2);\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n\n\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  }; // emulate attribute EventHandler support to allow for feature detection\n\n  for (var event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers$1 = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another audio track is enabled, disable it\n\n\n      list[i].enabled = false;\n    }\n  };\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n\n\n  var AudioTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(AudioTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    function AudioTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      return _this;\n    }\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = AudioTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.enabledChange_ = function () {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers$1(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('enabledchange', track.enabledChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    };\n\n    return AudioTrackList;\n  }(TrackList);\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another video track is enabled, disable it\n\n\n      list[i].selected = false;\n    }\n  };\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n\n\n  var VideoTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(VideoTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    function VideoTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selectedIndex', {\n        get: function get() {\n          for (var _i = 0; _i < this.length; _i++) {\n            if (this[_i].selected) {\n              return _i;\n            }\n          }\n\n          return -1;\n        },\n        set: function set() {}\n      });\n      return _this;\n    }\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = VideoTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.selectedChange_ = function () {\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('selectedchange', track.selectedChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    };\n\n    return VideoTrackList;\n  }(TrackList);\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n\n  var TextTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(TextTrackList, _TrackList);\n\n    function TextTrackList() {\n      return _TrackList.apply(this, arguments) || this;\n    }\n\n    var _proto = TextTrackList.prototype;\n\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    _proto.addTrack = function addTrack(track) {\n      var _this = this;\n\n      _TrackList.prototype.addTrack.call(this, track);\n\n      if (!this.queueChange_) {\n        this.queueChange_ = function () {\n          return _this.queueTrigger('change');\n        };\n      }\n\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = function () {\n          return _this.trigger('selectedlanguagechange');\n        };\n      }\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('modechange', this.queueChange_);\n      var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    };\n\n    return TextTrackList;\n  }(TrackList);\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  var HtmlTrackElementList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    function HtmlTrackElementList(trackElements) {\n      if (trackElements === void 0) {\n        trackElements = [];\n      }\n\n      this.trackElements_ = [];\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.trackElements_.length;\n        }\n      });\n\n      for (var i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n\n\n    var _proto = HtmlTrackElementList.prototype;\n\n    _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n      var index = this.trackElements_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.trackElements_[index];\n          }\n        });\n      } // Do not add duplicate elements\n\n\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    ;\n\n    _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n      var trackElement_;\n\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n\n      return trackElement_;\n    }\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return HtmlTrackElementList;\n  }();\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  var TextTrackCueList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    function TextTrackCueList(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.length_;\n        }\n      });\n    }\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n\n\n    var _proto = TextTrackCueList.prototype;\n\n    _proto.setCues_ = function setCues_(cues) {\n      var oldLength = this.length || 0;\n      var i = 0;\n      var l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n\n      var defineProp = function defineProp(index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get: function get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n\n      if (oldLength < l) {\n        i = oldLength;\n\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    ;\n\n    _proto.getCueById = function getCueById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var cue = this[i];\n\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TextTrackCueList;\n  }();\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  var VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n\n  var AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n\n  var TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n\n  var TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n\n  var Track = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(Track, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    function Track(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      var label = options.label || '';\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(assertThisInitialized(_this), key, {\n          get: function get() {\n            return trackProps[key];\n          },\n          set: function set() {}\n        });\n      };\n\n      for (var key in trackProps) {\n        _loop(key);\n      }\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n\n\n      Object.defineProperty(assertThisInitialized(_this), 'label', {\n        get: function get() {\n          return label;\n        },\n        set: function set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('labelchange');\n          }\n        }\n      });\n      return _this;\n    }\n\n    return Track;\n  }(EventTarget$2);\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n  var parseUrl = function parseUrl(url) {\n    // This entire method can be replace with URL once we are able to drop IE11\n    var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n    var a = document.createElement('a');\n    a.href = url; // Copy the specific URL properties to a new object\n    // This is also needed for IE because the anchor loses its\n    // properties when it's removed from the dom\n\n    var details = {};\n\n    for (var i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    } // IE adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n\n\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n\n    if (!details.protocol) {\n      details.protocol = window.location.protocol;\n    }\n    /* istanbul ignore if */\n\n\n    if (!details.host) {\n      details.host = window.location.host;\n    }\n\n    return details;\n  };\n  /**\n   * Get absolute version of relative URL. Used to tell Flash the correct URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n\n  var getAbsoluteURL = function getAbsoluteURL(url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n      // add the url to an anchor and let the browser parse the URL\n      var a = document.createElement('a');\n      a.href = url;\n      url = a.href;\n    }\n\n    return url;\n  };\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n\n  var getFileExtension = function getFileExtension(path) {\n    if (typeof path === 'string') {\n      var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      var pathParts = splitPathRe.exec(path);\n\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {Object} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @param    {string} [winLoc.protocol]\n   *           The window location protocol defaults to window.location.protocol\n   *\n   * @param    {string} [winLoc.host]\n   *           The window location host defaults to window.location.host\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n\n  var isCrossOrigin = function isCrossOrigin(url, winLoc) {\n    if (winLoc === void 0) {\n      winLoc = window.location;\n    }\n\n    var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n    var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n\n    var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n\n      callback(null, responseBody);\n    };\n  };\n\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n          type = _contentType$split[0],\n          value = _contentType$split[1];\n\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n\n      return charset;\n    }, 'utf-8');\n  }\n\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n\n    if (!headers) {\n      return result;\n    }\n\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n\n    return true;\n  }\n\n  function initParams(uri, options, callback) {\n    var params = uri;\n\n    if (isFunction_1(options)) {\n      callback = options;\n\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n\n    params.callback = callback;\n    return params;\n  }\n\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n\n    var called = false;\n\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n\n      return body;\n    }\n\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n\n      var response = failureResponse;\n      var err = null;\n\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n\n      return callback(err, response, response.body);\n    }\n\n    var xhr = options.xhr || null;\n\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n\n    xhr.onabort = function () {\n      aborted = true;\n    };\n\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n\n    xhr.send(body || null);\n    return xhr;\n  }\n\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  }\n\n  function noop$1() {}\n  lib[\"default\"] = default_1;\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n\n  var parseCues = function parseCues(srcContent, track) {\n    var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    var errors = [];\n\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n\n    parser.parse(srcContent);\n\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n      }\n\n      errors.forEach(function (error) {\n        return log$1.error(error);\n      });\n\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n\n    parser.flush();\n  };\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n\n\n  var loadTrack = function loadTrack(src, track) {\n    var opts = {\n      uri: src\n    };\n    var crossOrigin = isCrossOrigin(src);\n\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n\n    var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n\n    lib(opts, bind(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n\n      track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n            if (event.type === 'vttjserror') {\n              log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n              return;\n            }\n\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n\n\n  var TextTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(TextTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function TextTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      var mode = TextTrackMode[settings.mode] || 'disabled';\n      var default_ = settings[\"default\"];\n\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n\n      _this = _Track.call(this, settings) || this;\n      _this.tech_ = settings.tech;\n      _this.cues_ = [];\n      _this.activeCues_ = [];\n      _this.preload_ = _this.tech_.preloadTextTracks !== false;\n      var cues = new TextTrackCueList(_this.cues_);\n      var activeCues = new TextTrackCueList(_this.activeCues_);\n      var changed = false;\n      var timeupdateHandler = bind(assertThisInitialized(_this), function () {\n        if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n          return;\n        } // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n        this.activeCues = this.activeCues;\n\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n      });\n\n      var disposeHandler = function disposeHandler() {\n        _this.tech_.off('timeupdate', timeupdateHandler);\n      };\n\n      _this.tech_.one('dispose', disposeHandler);\n\n      if (mode !== 'disabled') {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }\n\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        \"default\": {\n          get: function get() {\n            return default_;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get: function get() {\n            return mode;\n          },\n          set: function set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n\n            if (mode === newMode) {\n              return;\n            }\n\n            mode = newMode;\n\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n\n            this.tech_.off('timeupdate', timeupdateHandler);\n\n            if (mode !== 'disabled') {\n              this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n\n\n            this.trigger('modechange');\n          }\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            return cues;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            } // nothing to do\n\n\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n\n            var ct = this.tech_.currentTime();\n            var active = [];\n\n            for (var i = 0, l = this.cues.length; i < l; i++) {\n              var cue = this.cues[i];\n\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                active.push(cue);\n              }\n            }\n\n            changed = false;\n\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (var _i = 0; _i < active.length; _i++) {\n                if (this.activeCues_.indexOf(active[_i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set: function set() {}\n        }\n      });\n\n      if (settings.src) {\n        _this.src = settings.src;\n\n        if (!_this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          _this.loaded_ = true;\n        }\n\n        if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(_this.src, assertThisInitialized(_this));\n        }\n      } else {\n        _this.loaded_ = true;\n      }\n\n      return _this;\n    }\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n\n\n    var _proto = TextTrack.prototype;\n\n    _proto.addCue = function addCue(originalCue) {\n      var cue = originalCue;\n\n      if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n        for (var prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        } // make sure that `id` is copied over\n\n\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n\n      var tracks = this.tech_.textTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    ;\n\n    _proto.removeCue = function removeCue(_removeCue) {\n      var i = this.cues_.length;\n\n      while (i--) {\n        var cue = this.cues_[i];\n\n        if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    };\n\n    return TextTrack;\n  }(Track);\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n\n\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n\n  var AudioTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(AudioTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    function AudioTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var enabled = false;\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'enabled', {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n\n          enabled = newEnabled;\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('enabledchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.enabled) {\n        _this.enabled = settings.enabled;\n      }\n\n      _this.loaded_ = true;\n      return _this;\n    }\n\n    return AudioTrack;\n  }(Track);\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n\n  var VideoTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(VideoTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    function VideoTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var selected = false;\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selected', {\n        get: function get() {\n          return selected;\n        },\n        set: function set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n\n          selected = newSelected;\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('selectedchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.selected) {\n        _this.selected = settings.selected;\n      }\n\n      return _this;\n    }\n\n    return VideoTrack;\n  }(Track);\n\n  /**\n   * @memberof HTMLTrackElement\n   * @typedef {HTMLTrackElement~ReadyState}\n   * @enum {number}\n   */\n\n  var NONE = 0;\n  var LOADING = 1;\n  var LOADED = 2;\n  var ERROR = 3;\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n\n  var HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(HTMLTrackElement, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function HTMLTrackElement(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var readyState;\n      var track = new TextTrack(options);\n      _this.kind = track.kind;\n      _this.src = track.src;\n      _this.srclang = track.language;\n      _this.label = track.label;\n      _this[\"default\"] = track[\"default\"];\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get: function get() {\n            return readyState;\n          }\n        },\n\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get: function get() {\n            return track;\n          }\n        }\n      });\n      readyState = NONE;\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n\n      track.addEventListener('loadeddata', function () {\n        readyState = LOADED;\n\n        _this.trigger({\n          type: 'load',\n          target: assertThisInitialized(_this)\n        });\n      });\n      return _this;\n    }\n\n    return HTMLTrackElement;\n  }(EventTarget$2);\n\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n  HTMLTrackElement.NONE = NONE;\n  HTMLTrackElement.LOADING = LOADING;\n  HTMLTrackElement.LOADED = LOADED;\n  HTMLTrackElement.ERROR = ERROR;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  var NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = type + \"Tracks\";\n    NORMAL[type].privateName = type + \"Tracks_\";\n  });\n  var REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n\n  var ALL = _extends_1({}, NORMAL, REMOTE);\n\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n\n      F.prototype = o;\n      return new F();\n    };\n  }(); // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n\n\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  }; // Try to parse input as a time stamp.\n\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  } // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n\n\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function set(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function get(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function has(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function alt(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function integer(k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function percent(k, v) {\n\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }; // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n\n      var kv = groups[i].split(keyValueDelim);\n\n      if (kv.length !== 2) {\n        continue;\n      }\n\n      var k = kv[0];\n      var v = kv[1];\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input; // 4.1 WebVTT timestamp\n\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      } // Remove time stamp from input.\n\n\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    } // 4.4.2 WebVTT cue settings\n\n\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n\n            break;\n\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n\n          case \"line\":\n            var vals = v.split(\",\"),\n                vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"size\":\n            settings.percent(k, v);\n            break;\n\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/); // Apply default values for any missing fields.\n\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100); // Safari still uses the old middle value and won't accept center\n\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    } // 4.1 WebVTT cue timings.\n\n\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n    skipWhitespace();\n\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n    // 4.1 WebVTT cue settings list.\n\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  } // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n\n\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  }; // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  }; // Parse content into a document fragment.\n\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      } // Consume 'n' characters from the input.\n\n\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n\n      return consume(m[1] ? m[1] : m[2]);\n    }\n\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    } // Create an element for this tag.\n\n\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n\n      if (!tagName) {\n        return null;\n      }\n\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          } // Otherwise just ignore the end tag.\n\n\n          continue;\n        }\n\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n        if (!m) {\n          continue;\n        } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n        node = createElement(m[1], m[3]);\n\n        if (!node) {\n          continue;\n        } // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n\n\n        if (!shouldAdd(current, node)) {\n          continue;\n        } // Set the class list (as a list of classes, separated by space).\n\n\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl); // slice out `bg_` if it's a background color\n\n            var colorName = bgColor ? cl.slice(3) : cl;\n\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        } // Append the node to the current node, and enter the scope of the new\n        // node.\n\n\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      } // Text nodes are leaf nodes.\n\n\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  } // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n\n        return text;\n      }\n\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n\n    return ++count * -1;\n  }\n\n  function StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n\n\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  }; // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n\n\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n\n    var textPos = 0;\n\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    } // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n\n\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      }); // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  } // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n\n\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  }; // Check if this box overlaps another box, b2.\n\n\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  }; // Check if this box overlaps any other boxes in boxes.\n\n\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Check if this box is within another box.\n\n\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  }; // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n\n\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n\n      case \"-x\":\n        return this.right > container.right;\n\n      case \"+y\":\n        return this.top < container.top;\n\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  }; // Find the percentage of the area that this box is overlapping with another\n  // box.\n\n\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  }; // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n\n\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  }; // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  }; // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n\n\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        } // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n\n\n        if (b.within(containerBox)) {\n          return b;\n        }\n\n        var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        } // Reset the box position to the specified position.\n\n\n        b = new BoxPosition(specifiedPosition);\n      }\n\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = []; // If we have a line number to align the cue to.\n\n    if (cue.snapToLines) {\n      var size;\n\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      } // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n\n\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      } // Move the box to the specified position. This may not be its best\n      // position.\n\n\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      } // Apply initial line position to the cue box.\n\n\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n      // to it.\n\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT$1() {// Nothing\n  } // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function decode(data) {\n        if (!data) {\n          return \"\";\n        }\n\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    } // Remove all previous children.\n\n\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n\n      return false;\n    } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function () {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function reportOrThrowError(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function parse(data) {\n      var self = this; // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n\n        var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n\n        self.buffer = buffer.substr(pos);\n        return line;\n      } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n\n            case \"width\":\n              settings.percent(k, v);\n              break;\n\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n\n              if (xy.length !== 2) {\n                break;\n              } // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n\n\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/); // Create the region, using default values for any values that were not\n        // specified.\n\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n          self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      } // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n\n\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      } // 3.2 WebVTT metadata header syntax\n\n\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      } // 5.1 WebVTT file parsing.\n\n\n      try {\n        var line;\n\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n              if (!line) {\n                continue;\n              }\n\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\"); // Safari still uses the old middle value and won't accept center\n\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n\n              self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n\n            // Process line as start of a cue.\n\n            /*falls through*/\n\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n\n              self.state = \"CUETEXT\";\n              continue;\n\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n\n        self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n\n      return this;\n    },\n    flush: function flush() {\n      var self = this;\n\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        } // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n\n\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function get() {\n          return _id;\n        },\n        set: function set(value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function get() {\n          return _pauseOnExit;\n        },\n        set: function set(value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function get() {\n          return _startTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function get() {\n          return _endTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function get() {\n          return _text;\n        },\n        set: function set(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function get() {\n          return _region;\n        },\n        set: function set(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function get() {\n          return _vertical;\n        },\n        set: function set(value) {\n          var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function get() {\n          return _snapToLines;\n        },\n        set: function set(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function get() {\n          return _line;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _lineAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function get() {\n          return _position;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _positionAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function get() {\n          return _size;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function get() {\n          return _align;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n    /**\n     * Other <track> spec defined properties\n     */\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n    this.displayState = undefined;\n  }\n  /**\n   * VTTCue methods\n   */\n\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  } // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function get() {\n          return _width;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function get() {\n          return _lines;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function get() {\n          return _scroll;\n        },\n        set: function set(value) {\n          var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n\n  function createTrackHelper(self, kind, label, language, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var tracks = self.textTracks();\n    options.kind = kind;\n\n    if (label) {\n      options.label = label;\n    }\n\n    if (language) {\n      options.language = language;\n    }\n\n    options.tech = self;\n    var track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n\n\n  var Tech = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Tech, _Component);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Tech(options, ready) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (ready === void 0) {\n        ready = function ready() {};\n      }\n\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      _this = _Component.call(this, null, options, ready) || this;\n\n      _this.onDurationChange_ = function (e) {\n        return _this.onDurationChange(e);\n      };\n\n      _this.trackProgress_ = function (e) {\n        return _this.trackProgress(e);\n      };\n\n      _this.trackCurrentTime_ = function (e) {\n        return _this.trackCurrentTime(e);\n      };\n\n      _this.stopTrackingCurrentTime_ = function (e) {\n        return _this.stopTrackingCurrentTime(e);\n      };\n\n      _this.disposeSourceHandler_ = function (e) {\n        return _this.disposeSourceHandler(e);\n      }; // keep track of whether the current source has played at all to\n      // implement a very limited played()\n\n\n      _this.hasStarted_ = false;\n\n      _this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n\n      _this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        if (options && options[props.getterName]) {\n          _this[props.privateName] = options[props.getterName];\n        }\n      }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n      if (!_this.featuresProgressEvents) {\n        _this.manualProgressOn();\n      } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n      if (!_this.featuresTimeupdateEvents) {\n        _this.manualTimeUpdatesOn();\n      }\n\n      ['Text', 'Audio', 'Video'].forEach(function (track) {\n        if (options[\"native\" + track + \"Tracks\"] === false) {\n          _this[\"featuresNative\" + track + \"Tracks\"] = false;\n        }\n      });\n\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        _this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        _this.featuresNativeTextTracks = true;\n      }\n\n      if (!_this.featuresNativeTextTracks) {\n        _this.emulateTextTracks();\n      }\n\n      _this.preloadTextTracks = options.preloadTextTracks !== false;\n      _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n      _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n      if (!options.nativeControlsForTouch) {\n        _this.emitTapEvents();\n      }\n\n      if (_this.constructor) {\n        _this.name_ = _this.constructor.name || 'Unknown Tech';\n      }\n\n      return _this;\n    }\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n\n\n    var _proto = Tech.prototype;\n\n    _proto.triggerSourceset = function triggerSourceset(src) {\n      var _this2 = this;\n\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', function () {\n          return _this2.setTimeout(function () {\n            return _this2.triggerSourceset(src);\n          }, 1);\n        });\n      }\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger({\n        src: src,\n        type: 'sourceset'\n      });\n    }\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    ;\n\n    _proto.manualProgressOn = function manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n      this.one('ready', this.trackProgress_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    ;\n\n    _proto.manualProgressOff = function manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    ;\n\n    _proto.trackProgress = function trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n        var numBufferedPercent = this.bufferedPercent();\n\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n\n        this.bufferedPercent_ = numBufferedPercent;\n\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    ;\n\n    _proto.onDurationChange = function onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      return createTimeRanges(0, 0);\n    }\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    ;\n\n    _proto.stopTrackingProgress = function stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    ;\n\n    _proto.trackCurrentTime = function trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    ;\n\n    _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    ;\n\n    _proto.clearTracks = function clearTracks(types) {\n      var _this3 = this;\n\n      types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n      types.forEach(function (type) {\n        var list = _this3[type + \"Tracks\"]() || [];\n        var i = list.length;\n\n        while (i--) {\n          var track = list[i];\n\n          if (type === 'text') {\n            _this3.removeRemoteTextTrack(track);\n          }\n\n          list.removeTrack(track);\n        }\n      });\n    }\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    ;\n\n    _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n      var list = this.autoRemoteTextTracks_ || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.reset = function reset() {}\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin() {}\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    ;\n\n    _proto.setCrossOrigin = function setCrossOrigin() {}\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n\n      return this.error_;\n    }\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    ;\n\n    _proto.played = function played() {\n      if (this.hasStarted_) {\n        return createTimeRanges(0, 0);\n      }\n\n      return createTimeRanges();\n    }\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    ;\n\n    _proto.play = function play() {}\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#setScrubbing}\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing() {}\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {}\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    ;\n\n    _proto.initTrackListeners = function initTrackListeners() {\n      var _this4 = this;\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(function (name) {\n        var props = NORMAL[name];\n\n        var trackListChanges = function trackListChanges() {\n          _this4.trigger(name + \"trackchange\");\n        };\n\n        var tracks = _this4[props.getterName]();\n\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n\n        _this4.on('dispose', function () {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    ;\n\n    _proto.addWebVttScript_ = function addWebVttScript_() {\n      var _this5 = this;\n\n      if (window.WebVTT) {\n        return;\n      } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n\n\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        } // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n\n\n        var script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjsloaded');\n        };\n\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjserror');\n        };\n\n        this.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        }); // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n    /**\n     * Emulate texttracks\n     *\n     */\n    ;\n\n    _proto.emulateTextTracks = function emulateTextTracks() {\n      var _this6 = this;\n\n      var tracks = this.textTracks();\n      var remoteTracks = this.remoteTextTracks();\n\n      var handleAddTrack = function handleAddTrack(e) {\n        return tracks.addTrack(e.track);\n      };\n\n      var handleRemoveTrack = function handleRemoveTrack(e) {\n        return tracks.removeTrack(e.track);\n      };\n\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n\n      var updateDisplay = function updateDisplay() {\n        return _this6.trigger('texttrackchange');\n      };\n\n      var textTracksChanges = function textTracksChanges() {\n        updateDisplay();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n\n      return createTrackHelper(this, kind, label, language);\n    }\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      var track = mergeOptions$3(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=true]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     * @deprecated The default functionality for this function will be equivalent\n     *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n     *             also be removed.\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var _this7 = this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var htmlTrackElement = this.createRemoteTextTrack(options);\n\n      if (manualCleanup !== true && manualCleanup !== false) {\n        // deprecation warning\n        log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n        manualCleanup = true;\n      } // store HTMLTrackElement and TextTrack to remote list\n\n\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n      if (manualCleanup !== true) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(function () {\n          return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n        });\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return {};\n    }\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return PromiseClass.reject();\n      }\n    }\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture() {\n      return true;\n    }\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPoster = function setPoster() {}\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.playsinline = function playsinline() {}\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPlaysinline = function setPlaysinline() {}\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    ;\n\n    Tech.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    Tech.canPlaySource = function canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    ;\n\n    Tech.isTech = function isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    ;\n\n    Tech.registerTech = function registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n\n      if (!Tech.isTech(tech)) {\n        throw new Error(\"Tech \" + name + \" must be a Tech\");\n      }\n\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n\n      return tech;\n    }\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    ;\n\n    Tech.getTech = function getTech(name) {\n      if (!name) {\n        return;\n      }\n\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n\n      name = toTitleCase$1(name);\n\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n        return window.videojs[name];\n      }\n    };\n\n    return Tech;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVolumeControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n\n  Tech.prototype.featuresMuteControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresFullscreenResize = false;\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresPlaybackRate = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresProgressEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresSourceset = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresTimeupdateEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresNativeTextTracks = false;\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      var handlers = _Tech.sourceHandlers;\n\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n\n      handlers.splice(index, 0, handler);\n    };\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlayType = function (type) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n\n      return '';\n    };\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n\n\n    _Tech.selectSourceHandler = function (source, options) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n\n        if (can) {\n          return handlers[i];\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlaySource = function (srcObj, options) {\n      var sh = _Tech.selectSourceHandler(srcObj, options);\n\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n\n      return '';\n    };\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n\n\n    var deferrable = ['seekable', 'seeking', 'duration'];\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      var originalFn = this[fnName];\n\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n\n    _Tech.prototype.setSource = function (source) {\n      var sh = _Tech.selectSourceHandler(source, this.options_);\n\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      } // Dispose any existing source handler\n\n\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n\n\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      } // always clean up auto-text tracks\n\n\n      this.cleanupAutoTextTracks();\n\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n\n        this.sourceHandler_ = null;\n      }\n    };\n  }; // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n\n\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  var middlewares = {};\n  var middlewareInstances = {};\n  var TERMINATOR = {};\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n\n  function setSource(player, src, next) {\n    player.setTimeout(function () {\n      return setSourceHelper(src, middlewares[src.type], next, player);\n    }, 1);\n  }\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n\n  function setTech(middleware, tech) {\n    middleware.forEach(function (mw) {\n      return mw.setTech && mw.setTech(tech);\n    });\n  }\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n\n  function mediate(middleware, tech, method, arg) {\n    if (arg === void 0) {\n      arg = null;\n    }\n\n    var callMethod = 'call' + toTitleCase$1(method);\n    var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n\n    var returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n\n  function middlewareIterator(method) {\n    return function (value, mw) {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n\n      if (mw[method]) {\n        return mw[method](value);\n      }\n\n      return value;\n    };\n  }\n\n  function executeRight(mws, method, value, terminated) {\n    for (var i = mws.length - 1; i >= 0; i--) {\n      var mw = mws[i];\n\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n\n\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n\n  function getOrCreateFactory(player, mwFactory) {\n    var mws = middlewareInstances[player.id()];\n    var mw = null;\n\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n\n    for (var i = 0; i < mws.length; i++) {\n      var _mws$i = mws[i],\n          mwf = _mws$i[0],\n          mwi = _mws$i[1];\n\n      if (mwf !== mwFactory) {\n        continue;\n      }\n\n      mw = mwi;\n    }\n\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n\n    return mw;\n  }\n\n  function setSourceHelper(src, middleware, next, player, acc, lastRun) {\n    if (src === void 0) {\n      src = {};\n    }\n\n    if (middleware === void 0) {\n      middleware = [];\n    }\n\n    if (acc === void 0) {\n      acc = [];\n    }\n\n    if (lastRun === void 0) {\n      lastRun = false;\n    }\n\n    var _middleware = middleware,\n        mwFactory = _middleware[0],\n        mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      mw.setSource(assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } // we've succeeded, now we need to go deeper\n\n\n        acc.push(mw); // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n\n  var MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n\n  var getMimetype = function getMimetype(src) {\n    if (src === void 0) {\n      src = '';\n    }\n\n    var ext = getFileExtension(src);\n    var mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n\n  var findMimetype = function findMimetype(player, src) {\n    if (!src) {\n      return '';\n    } // 1. check for the type in the `source` cache\n\n\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    } // 2. see if we have this source in our `currentSources` cache\n\n\n    var matchingSources = player.cache_.sources.filter(function (s) {\n      return s.src === src;\n    });\n\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    } // 3. look for the src url in source elements and use the type there\n\n\n    var sources = player.$$('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var s = sources[i];\n\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    } // 4. finally fallback to our list of mime types based on src url extension\n\n\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n\n  var filterSource = function filterSource(src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      var newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src: src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n\n    return src;\n  };\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n\n\n  function fixSource(src) {\n    if (!src.type) {\n      var mimetype = getMimetype(src.src);\n\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n\n    return src;\n  }\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n\n  var MediaLoader = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MediaLoader, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    function MediaLoader(player, options, ready) {\n      var _this;\n\n      // MediaLoader has no element\n      var options_ = mergeOptions$3({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          var techName = toTitleCase$1(j[i]);\n          var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          } // Check if the browser supports this technology\n\n\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n\n      return _this;\n    }\n\n    return MediaLoader;\n  }(Component$1);\n\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n\n  var ClickableComponent = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ClickableComponent, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     */\n    function ClickableComponent(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseOver_ = function (e) {\n        return _this.handleMouseOver(e);\n      };\n\n      _this.handleMouseOut_ = function (e) {\n        return _this.handleMouseOut(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.emitTapEvents();\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = ClickableComponent.prototype;\n\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      props = assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n\n      if (tag === 'button') {\n        log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n      } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n      attributes = assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      var el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    ;\n\n    _proto.createControlTextEl = function createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.el();\n      }\n\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n\n      var localizedText = this.localize(text);\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enable this `ClickableComponent`\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n    /**\n     * Disable this `ClickableComponent`\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return ClickableComponent;\n  }(Component$1);\n\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n\n  var PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(PosterImage, _ClickableComponent);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PosterImage(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n\n      _this.update();\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      };\n\n      player.on('posterchange', _this.update_);\n      return _this;\n    }\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n\n\n    var _proto = PosterImage.prototype;\n\n    _proto.dispose = function dispose() {\n      this.player().off('posterchange', this.update_);\n\n      _ClickableComponent.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = createEl('div', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      });\n      return el;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var url = this.player().poster();\n      this.setSrc(url); // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    ;\n\n    _proto.setSrc = function setSrc(url) {\n      var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n      // this will throw an extra error\n\n      if (url) {\n        backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    };\n\n    return PosterImage;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  var darkGray = '#222';\n  var lightGray = '#ccc';\n  var fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n\n  function constructColor(color, opacity) {\n    var hex;\n\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n\n\n  var TextTrackDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TextTrackDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    function TextTrackDisplay(player, options, ready) {\n      var _this;\n\n      _this = _Component.call(this, player, options, ready) || this;\n\n      var updateDisplayHandler = function updateDisplayHandler(e) {\n        return _this.updateDisplay(e);\n      };\n\n      player.on('loadstart', function (e) {\n        return _this.toggleDisplay(e);\n      });\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', function (e) {\n        return _this.preselectTrack(e);\n      }); // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n\n      player.ready(bind(assertThisInitialized(_this), function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        window.addEventListener('orientationchange', updateDisplayHandler);\n        player.on('dispose', function () {\n          return window.removeEventListener('orientationchange', updateDisplayHandler);\n        });\n        var tracks = this.options_.playerOptions.tracks || [];\n\n        for (var i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n\n        this.preselectTrack();\n      }));\n      return _this;\n    }\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n\n\n    var _proto = TextTrackDisplay.prototype;\n\n    _proto.preselectTrack = function preselectTrack() {\n      var modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      var trackList = this.player_.textTracks();\n      var userPref = this.player_.cache_.selectedLanguage;\n      var firstDesc;\n      var firstCaptions;\n      var preferredTrack;\n\n      for (var i = 0; i < trackList.length; i++) {\n        var track = trackList[i];\n\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track; // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          } // clear everything if offTextTrackMenuItem was clicked\n\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track[\"default\"]) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      } // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n\n\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.toggleDisplay = function toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    ;\n\n    _proto.clearDisplay = function clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var tracks = this.player_.textTracks();\n      var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n\n      if (allowMultipleShowingTracks) {\n        var showingTracks = [];\n\n        for (var _i = 0; _i < tracks.length; ++_i) {\n          var track = tracks[_i];\n\n          if (track.mode !== 'showing') {\n            continue;\n          }\n\n          showingTracks.push(track);\n        }\n\n        this.updateForTrack(showingTracks);\n        return;\n      } //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n      var descriptionsTrack = null;\n      var captionsSubtitlesTrack = null;\n      var i = tracks.length;\n\n      while (i--) {\n        var _track = tracks[i];\n\n        if (_track.mode === 'showing') {\n          if (_track.kind === 'descriptions') {\n            descriptionsTrack = _track;\n          } else {\n            captionsSubtitlesTrack = _track;\n          }\n        }\n      }\n\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    ;\n\n    _proto.updateDisplayState = function updateDisplayState(track) {\n      var overrides = this.player_.textTrackSettings.getValues();\n      var cues = track.activeCues;\n      var i = cues.length;\n\n      while (i--) {\n        var cue = cues[i];\n\n        if (!cue) {\n          continue;\n        }\n\n        var cueDiv = cue.displayState;\n\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n          }\n        }\n\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          var fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    ;\n\n    _proto.updateForTrack = function updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n\n      if (typeof window.WebVTT !== 'function' || tracks.every(function (track) {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n\n      var cues = []; // push all active track cues\n\n      for (var i = 0; i < tracks.length; ++i) {\n        var track = tracks[i];\n\n        for (var j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      } // removes all cues before it processes new ones\n\n\n      window.WebVTT.processCues(window, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n      for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n        var _track2 = tracks[_i2];\n\n        for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n          var cueEl = _track2.activeCues[_j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue');\n          addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n          if (_track2.language) {\n            setAttribute(cueEl, 'lang', _track2.language);\n          }\n        }\n\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(_track2);\n        }\n      }\n    };\n\n    return TextTrackDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n\n  var LoadingSpinner = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadingSpinner, _Component);\n\n    function LoadingSpinner() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = LoadingSpinner.prototype;\n\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    _proto.createEl = function createEl$1() {\n      var isAudio = this.player_.isAudio();\n      var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      var controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n\n      el.appendChild(controlText);\n      return el;\n    };\n\n    return LoadingSpinner;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n\n  var Button = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(Button, _ClickableComponent);\n\n    function Button() {\n      return _ClickableComponent.apply(this, arguments) || this;\n    }\n\n    var _proto = Button.prototype;\n\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      tag = 'button';\n      props = assign({\n        className: this.buildCSSClass()\n      }, props); // Add attributes for button element\n\n      attributes = assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n\n      var el = createEl(tag, props, attributes);\n\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var className = this.constructor.name;\n      log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      _ClickableComponent.prototype.enable.call(this);\n\n      this.el_.removeAttribute('disabled');\n    }\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      _ClickableComponent.prototype.disable.call(this);\n\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      } // Pass keypress handling up for unsupported keys\n\n\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    };\n\n    return Button;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n\n  var BigPlayButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(BigPlayButton, _Button);\n\n    function BigPlayButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n      _this.mouseused_ = false;\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n\n\n    var _proto = BigPlayButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n        silencePromise(playPromise);\n\n        if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n        // calling .focus() on the video element causes the video to go black,\n        // so we avoid it in that specific case\n        !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n          this.player_.tech(true).focus();\n        }\n\n        return;\n      }\n\n      var cb = this.player_.getChild('controlBar');\n      var playToggle = cb && cb.getChild('playToggle');\n\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var playFocus = function playFocus() {\n        return playToggle.focus();\n      };\n\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, function () {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      this.mouseused_ = false;\n\n      _Button.prototype.handleKeyDown.call(this, event);\n    };\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      this.mouseused_ = true;\n    };\n\n    return BigPlayButton;\n  }(Button);\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n\n  var CloseButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(CloseButton, _Button);\n\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    function CloseButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.controlText(options && options.controlText || _this.localize('Close'));\n\n      return _this;\n    }\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n\n\n    var _proto = CloseButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (keycode.isEventKey(event, 'Esc')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Button.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return CloseButton;\n  }(Button);\n\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n\n  var PlayToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PlayToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function PlayToggle(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n      options.replay = options.replay === undefined || options.replay;\n\n      _this.on(player, 'play', function (e) {\n        return _this.handlePlay(e);\n      });\n\n      _this.on(player, 'pause', function (e) {\n        return _this.handlePause(e);\n      });\n\n      if (options.replay) {\n        _this.on(player, 'ended', function (e) {\n          return _this.handleEnded(e);\n        });\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PlayToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked(event) {\n      this.removeClass('vjs-ended');\n\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay(event) {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n      this.controlText('Pause');\n    }\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    ;\n\n    _proto.handlePause = function handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n      this.controlText('Play');\n    }\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      var _this2 = this;\n\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n      this.controlText('Replay'); // on the next seek remove the replay button\n\n      this.one(this.player_, 'seeked', function (e) {\n        return _this2.handleSeeked(e);\n      });\n    };\n\n    return PlayToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file format-time.js\n   * @module format-time\n   */\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  var defaultImplementation = function defaultImplementation(seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    var s = Math.floor(seconds % 60);\n    var m = Math.floor(seconds / 60 % 60);\n    var h = Math.floor(seconds / 3600);\n    var gm = Math.floor(guide / 60 % 60);\n    var gh = Math.floor(guide / 3600); // handle invalid times\n\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    } // Check if we need to show hours\n\n\n    h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  }; // Internal pointer to the current implementation.\n\n\n  var implementation = defaultImplementation;\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n  /**\n   * Resets formatTime to the default implementation.\n   */\n\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @static\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n\n  function formatTime(seconds, guide) {\n    if (guide === void 0) {\n      guide = seconds;\n    }\n\n    return implementation(seconds, guide);\n  }\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n\n  var TimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.on(player, ['timeupdate', 'ended'], function (e) {\n        return _this.updateContent(e);\n      });\n\n      _this.updateTextNode_();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var className = this.buildCSSClass();\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: className + \" vjs-time-control vjs-control\"\n      });\n\n      var span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize(this.labelText_) + \"\\xA0\"\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: className + \"-display\"\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateTextNode_ = function updateTextNode_(time) {\n      var _this2 = this;\n\n      if (time === void 0) {\n        time = 0;\n      }\n\n      time = formatTime(time);\n\n      if (this.formattedTime_ === time) {\n        return;\n      }\n\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n        if (!_this2.contentEl_) {\n          return;\n        }\n\n        var oldNode = _this2.textNode_;\n\n        if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n\n        _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n        if (!_this2.textNode_) {\n          return;\n        }\n\n        if (oldNode) {\n          _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n        } else {\n          _this2.contentEl_.appendChild(_this2.textNode_);\n        }\n      });\n    }\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {};\n\n    return TimeDisplay;\n  }(Component$1);\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  TimeDisplay.prototype.labelText_ = 'Time';\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n\n  var CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n    function CurrentTimeDisplay() {\n      return _TimeDisplay.apply(this, arguments) || this;\n    }\n\n    var _proto = CurrentTimeDisplay.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-current-time';\n    }\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      var time;\n\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return CurrentTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n\n  var DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(DurationDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function DurationDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      var updateContent = function updateContent(e) {\n        return _this.updateContent(e);\n      }; // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n\n\n      _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n      _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n\n\n      _this.on(player, 'loadedmetadata', updateContent);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = DurationDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-duration';\n    }\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      var duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    };\n\n    return DurationDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DurationDisplay.prototype.labelText_ = 'Duration';\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n\n  var TimeDivider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDivider, _Component);\n\n    function TimeDivider() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeDivider.prototype;\n\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n\n      var div = _Component.prototype.createEl.call(this, 'div');\n\n      var span = _Component.prototype.createEl.call(this, 'span', {\n        textContent: '/'\n      });\n\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    };\n\n    return TimeDivider;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n\n  var RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function RemainingTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'durationchange', function (e) {\n        return _this.updateContent(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = RemainingTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = _TimeDisplay.prototype.createEl.call(this);\n\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n      return el;\n    }\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n\n      var time; // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return RemainingTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var LiveDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LiveDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.updateShowing();\n\n      _this.on(_this.player(), 'durationchange', function (e) {\n        return _this.updateShowing(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LiveDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-live-control vjs-control'\n      });\n\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('Stream Type') + \"\\xA0\"\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateShowing = function updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    return LiveDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var SeekToLive = /*#__PURE__*/function (_Button) {\n    inheritsLoose(SeekToLive, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekToLive(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.updateLiveEdgeStatus();\n\n      if (_this.player_.liveTracker) {\n        _this.updateLiveEdgeStatusHandler_ = function (e) {\n          return _this.updateLiveEdgeStatus(e);\n        };\n\n        _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = SeekToLive.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Button.prototype.createEl.call(this, 'button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    ;\n\n    _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    ;\n\n    _proto.handleClick = function handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n    /**\n     * Dispose of the element and stop tracking\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n\n      this.textEl_ = null;\n\n      _Button.prototype.dispose.call(this);\n    };\n\n    return SeekToLive;\n  }(Button);\n\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  var clamp = function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  };\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n\n  var Slider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Slider, _Component);\n\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    function Slider(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseDown_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.handleMouseUp_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMouseMove_ = function (e) {\n        return _this.handleMouseMove(e);\n      };\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      }; // Set property names to bar to match with the child Slider class is looking for\n\n\n      _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n      _this.vertical(!!_this.options_.vertical);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n\n\n    var _proto = Slider.prototype;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n      this.on(this.player_, 'controlsvisible', this.update);\n\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    ;\n\n    _proto.disable = function disable() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      var doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n\n      this.enabled_ = false;\n    }\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl(type, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = assign({\n        tabIndex: 0\n      }, props);\n      attributes = assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'tabIndex': 0\n      }, attributes);\n      return _Component.prototype.createEl.call(this, type, props, attributes);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.bar.el_.ownerDocument;\n\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      } // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event);\n    }\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {}\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp() {\n      var doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    ;\n\n    _proto.update = function update() {\n      var _this2 = this;\n\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      } // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n\n\n      var progress = this.getProgress();\n\n      if (progress === this.progress_) {\n        return progress;\n      }\n\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', function () {\n        // Set the new bar width or height\n        var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n        _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    ;\n\n    _proto.getProgress = function getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    ;\n\n    _proto.calculateDistance = function calculateDistance(event) {\n      var position = getPointerPosition(this.el_, event);\n\n      if (this.vertical()) {\n        return position.y;\n      }\n\n      return position.x;\n    }\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    ;\n\n    _proto.vertical = function vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n\n      this.vertical_ = !!bool;\n\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    };\n\n    return Slider;\n  }(Component$1);\n\n  Component$1.registerComponent('Slider', Slider);\n\n  var percentify = function percentify(time, end) {\n    return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n  };\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n\n\n  var LoadProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LoadProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.partEls_ = [];\n\n      _this.on(player, 'progress', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LoadProgressBar.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-load-progress'\n      });\n\n      var wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      var loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      var separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n        var liveTracker = _this2.player_.liveTracker;\n\n        var buffered = _this2.player_.buffered();\n\n        var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n        var bufferedEnd = _this2.player_.bufferedEnd();\n\n        var children = _this2.partEls_;\n        var percent = percentify(bufferedEnd, duration);\n\n        if (_this2.percent_ !== percent) {\n          // update the width of the progress bar\n          _this2.el_.style.width = percent; // update the control-text\n\n          textContent(_this2.percentageEl_, percent);\n          _this2.percent_ = percent;\n        } // add child elements to represent the individual buffered time ranges\n\n\n        for (var i = 0; i < buffered.length; i++) {\n          var start = buffered.start(i);\n          var end = buffered.end(i);\n          var part = children[i];\n\n          if (!part) {\n            part = _this2.el_.appendChild(createEl());\n            children[i] = part;\n          } //  only update if changed\n\n\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n\n          part.dataset.start = start;\n          part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        } // remove unused buffered range elements\n\n\n        for (var _i = children.length; _i > buffered.length; _i--) {\n          _this2.el_.removeChild(children[_i - 1]);\n        }\n\n        children.length = buffered.length;\n      });\n    };\n\n    return LoadProgressBar;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n\n  var TimeTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint, content) {\n      var tooltipRect = findPosition(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      } // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n\n\n      var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n\n      var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n\n      var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      } // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      } // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n\n\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      this.write(content);\n    }\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n        var content;\n\n        var duration = _this2.player_.duration();\n\n        if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n          var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n          var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n\n        _this2.update(seekBarRect, seekBarPoint, content);\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return TimeTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var PlayProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(PlayProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlayProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlayProgressBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var timeTooltip = this.getChild('timeTooltip');\n\n      if (!timeTooltip) {\n        return;\n      }\n\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    };\n\n    return PlayProgressBar;\n  }(Component$1);\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  }; // Time tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseTimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseTimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseTimeDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var _this2 = this;\n\n      var time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n        _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n      });\n    };\n\n    return MouseTimeDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  var STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\n  var PAGE_KEY_MULTIPLIER = 12;\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n\n  var SeekBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(SeekBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.setEventHandlers_();\n\n      return _this;\n    }\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n\n\n    var _proto = SeekBar.prototype;\n\n    _proto.setEventHandlers_ = function setEventHandlers_() {\n      var _this2 = this;\n\n      this.update_ = bind(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      } // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n\n\n      this.updateInterval = null;\n\n      this.enableIntervalHandler_ = function (e) {\n        return _this2.enableInterval_(e);\n      };\n\n      this.disableIntervalHandler_ = function (e) {\n        return _this2.disableInterval_(e);\n      };\n\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    };\n\n    _proto.toggleVisibility_ = function toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n        this.update();\n      }\n    };\n\n    _proto.enableInterval_ = function enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    };\n\n    _proto.disableInterval_ = function disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n\n      if (!this.updateInterval) {\n        return;\n      }\n\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this3 = this;\n\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n\n      var percent = _Slider.prototype.update.call(this);\n\n      this.requestNamedAnimationFrame('SeekBar#update', function () {\n        var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n        var liveTracker = _this3.player_.liveTracker;\n\n        var duration = _this3.player_.duration();\n\n        if (liveTracker && liveTracker.isLive()) {\n          duration = _this3.player_.liveTracker.liveCurrentTime();\n        }\n\n        if (_this3.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n          _this3.percent_ = percent;\n        }\n\n        if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n          _this3.currentTime_ = currentTime;\n          _this3.duration_ = duration;\n        } // update the progress bar time tooltip with the current time\n\n\n        if (_this3.bar) {\n          _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n        }\n      });\n      return percent;\n    }\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    ;\n\n    _proto.userSeek_ = function userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n\n      this.player_.currentTime(ct);\n    }\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    ;\n\n    _proto.getCurrentTime_ = function getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      var currentTime = this.getCurrentTime_();\n      var percent;\n      var liveTracker = this.player_.liveTracker;\n\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n\n      return percent;\n    }\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // Stop event propagation to prevent double fire in progress-control.js\n\n\n      event.stopPropagation();\n      this.player_.scrubbing(true);\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      var newTime;\n      var distance = this.calculateDistance(event);\n      var liveTracker = this.player_.liveTracker;\n\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n\n        var seekableStart = liveTracker.seekableStart();\n        var seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        } // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n\n\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        } // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n\n\n        if (newTime === Infinity) {\n          return;\n        }\n      } // Set new time (tell player to seek to new time)\n\n\n      this.userSeek_(newTime);\n    };\n\n    _proto.enable = function enable() {\n      _Slider.prototype.enable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.show();\n    };\n\n    _proto.disable = function disable() {\n      _Slider.prototype.disable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.hide();\n    }\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.player_.scrubbing(false);\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    ;\n\n    _proto.handleAction = function handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var liveTracker = this.player_.liveTracker;\n\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Slider.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n\n      _Slider.prototype.dispose.call(this);\n    };\n\n    return SeekBar;\n  }(Slider);\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  }; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n\n  var ProgressControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ProgressControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ProgressControl(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.handleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      _this.throttledHandleMouseSeek = throttle(bind(assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleMouseDownHandler_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = ProgressControl.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (!seekBar) {\n        return;\n      }\n\n      var playProgressBar = seekBar.getChild('playProgressBar');\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n\n      var seekBarEl = seekBar.el();\n      var seekBarRect = findPosition(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseSeek = function handleMouseSeek(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    ;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.children().forEach(function (child) {\n        return child.disable && child.disable();\n      });\n\n      if (!this.enabled()) {\n        return;\n      }\n\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n      if (this.player_.scrubbing()) {\n        var seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.children().forEach(function (child) {\n        return child.enable && child.enable();\n      });\n\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    ;\n\n    _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    };\n\n    return ProgressControl;\n  }(Component$1);\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n\n  var PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PictureInPictureToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    function PictureInPictureToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n        return _this.handlePictureInPictureChange(e);\n      });\n\n      _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n        return _this.handlePictureInPictureEnabledChange(e);\n      }); // TODO: Deactivate button on player emptied event.\n\n\n      _this.disable();\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PictureInPictureToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enables or disables button based on document.pictureInPictureEnabled property value\n     * or on value returned by player.disablePictureInPicture() method.\n     */\n    ;\n\n    _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    ;\n\n    _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.controlText('Picture-in-Picture');\n      }\n\n      this.handlePictureInPictureEnabledChange();\n    }\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    };\n\n    return PictureInPictureToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n\n  var FullscreenToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(FullscreenToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function FullscreenToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, 'fullscreenchange', function (e) {\n        return _this.handleFullscreenChange(e);\n      });\n\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        _this.disable();\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = FullscreenToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Non-Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    };\n\n    return FullscreenToggle;\n  }(Button);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkVolumeSupport = function checkVolumeSupport(self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeLevel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevel, _Component);\n\n    function VolumeLevel() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = VolumeLevel.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-level'\n      });\n\n      el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    };\n\n    return VolumeLevel;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n\n  var VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevelTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeLevelTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeLevelTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        var tooltipRect = getBoundingClientRect(this.el_);\n        var playerRect = getBoundingClientRect(this.player_.el());\n        var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n\n        var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        var pullTooltipBy = tooltipRect.width / 2;\n\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n\n        this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      }\n\n      this.write(content + \"%\");\n    }\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n        _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return VolumeLevelTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n\n  var MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseVolumeLevelDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseVolumeLevelDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n      var _this2 = this;\n\n      var volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n        if (vertical) {\n          _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n        } else {\n          _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n        }\n      });\n    };\n\n    return MouseVolumeLevelDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n\n  var VolumeBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(VolumeBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.on('slideractive', function (e) {\n        return _this.updateLastVolume_(e);\n      });\n\n      _this.on(player, 'volumechange', function (e) {\n        return _this.updateARIAAttributes(e);\n      });\n\n      player.ready(function () {\n        return _this.updateARIAAttributes();\n      });\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n      if (mouseVolumeLevelDisplay) {\n        var volumeBarEl = this.el();\n        var volumeBarRect = getBoundingClientRect(volumeBarEl);\n        var vertical = this.vertical();\n        var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n    /**\n     * If the player is muted unmute it.\n     */\n    ;\n\n    _proto.checkMuted = function checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n\n      return this.player_.volume();\n    }\n    /**\n     * Increase volume level for keyboard users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n    /**\n     * Decrease volume level for keyboard users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n      var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    ;\n\n    _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    ;\n\n    _proto.updateLastVolume_ = function updateLastVolume_() {\n      var _this2 = this;\n\n      var volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', function () {\n        if (_this2.player_.volume() === 0) {\n          _this2.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    };\n\n    return VolumeBar;\n  }(Slider);\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  }; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n\n\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumeControl(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n\n      _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkVolumeSupport(assertThisInitialized(_this), player);\n      _this.throttledHandleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('touchstart', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('mousemove', function (e) {\n        return _this.handleMouseMove(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n        _this.volumeBar.addClass('vjs-slider-active');\n\n        _this.addClass('vjs-slider-active');\n\n        _this.trigger('slideractive');\n      });\n\n      _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n        _this.volumeBar.removeClass('vjs-slider-active');\n\n        _this.removeClass('vjs-slider-active');\n\n        _this.trigger('sliderinactive');\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeControl.prototype;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-horizontal';\n\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-control vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    };\n\n    return VolumeControl;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkMuteSupport = function checkMuteSupport(self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n\n  var MuteToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(MuteToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MuteToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkMuteSupport(assertThisInitialized(_this), player);\n\n      _this.on(player, ['loadstart', 'volumechange'], function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = MuteToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var vol = this.player_.volume();\n      var lastVolume = this.player_.lastVolume_();\n\n      if (vol === 0) {\n        var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateIcon_ = function updateIcon_() {\n      var vol = this.player_.volume();\n      var level = 3; // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      } // TODO improve muted icon classes\n\n\n      for (var i = 0; i < 4; i++) {\n        removeClass(this.el_, \"vjs-vol-\" + i);\n      }\n\n      addClass(this.el_, \"vjs-vol-\" + level);\n    }\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateControlText_ = function updateControlText_() {\n      var soundOff = this.player_.muted() || this.player_.volume() === 0;\n      var text = soundOff ? 'Unmute' : 'Mute';\n\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    };\n\n    return MuteToggle;\n  }(Button);\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n\n  var VolumePanel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumePanel, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumePanel(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      } // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n\n\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n\n      _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n      _this.handleKeyPressHandler_ = function (e) {\n        return _this.handleKeyPress(e);\n      };\n\n      _this.on(player, ['loadstart'], function (e) {\n        return _this.volumePanelState_(e);\n      });\n\n      _this.on(_this.muteToggle, 'keyup', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on(_this.volumeControl, 'keyup', function (e) {\n        return _this.handleVolumeControlKeyUp(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on('mouseover', function (e) {\n        return _this.handleMouseOver(e);\n      });\n\n      _this.on('mouseout', function (e) {\n        return _this.handleMouseOut(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n      _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n      return _this;\n    }\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n\n\n    var _proto = VolumePanel.prototype;\n\n    _proto.sliderActive_ = function sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    ;\n\n    _proto.sliderInactive_ = function sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    ;\n\n    _proto.volumePanelState_ = function volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      } // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n\n\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-panel-horizontal';\n\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-panel vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseOut();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.muteToggle.focus();\n      }\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    ;\n\n    _proto.handleMouseOver = function handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    ;\n\n    _proto.handleMouseOut = function handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.handleMouseOut();\n      }\n    };\n\n    return VolumePanel;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n\n  var Menu = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Menu, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    function Menu(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (options) {\n        _this.menuButton_ = options.menuButton;\n      }\n\n      _this.focusedChild_ = -1;\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n      _this.boundHandleBlur_ = function (e) {\n        return _this.handleBlur(e);\n      };\n\n      _this.boundHandleTapClick_ = function (e) {\n        return _this.handleTapClick(e);\n      };\n\n      return _this;\n    }\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n\n\n    var _proto = Menu.prototype;\n\n    _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    ;\n\n    _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      this.removeEventListenerForItem(component);\n\n      _Component.prototype.removeChild.call(this, component);\n    }\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    ;\n\n    _proto.addItem = function addItem(component) {\n      var childComponent = this.addChild(component);\n\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n\n      el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    ;\n\n    _proto.handleBlur = function handleBlur(event) {\n      var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n      if (!this.children().some(function (element) {\n        return element.el() === relatedTarget;\n      })) {\n        var btn = this.menuButton_;\n\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    ;\n\n    _proto.handleTapClick = function handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        var childComponents = this.children();\n\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n\n        var foundComponent = childComponents.filter(function (component) {\n          return component.el() === event.target;\n        })[0];\n\n        if (!foundComponent) {\n          return;\n        } // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    ;\n\n    _proto.focus = function focus(item) {\n      if (item === void 0) {\n        item = 0;\n      }\n\n      var children = this.children().slice();\n      var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n      if (haveTitle) {\n        children.shift();\n      }\n\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    };\n\n    return Menu;\n  }(Component$1);\n\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n\n  var MenuButton = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MenuButton, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function MenuButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Component.call(this, player, options) || this;\n      _this.menuButton_ = new Button(player, options);\n\n      _this.menuButton_.controlText(_this.controlText_);\n\n      _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n      _this.menuButton_.removeClass('vjs-control');\n\n      _this.addChild(_this.menuButton_);\n\n      _this.update();\n\n      _this.enabled_ = true;\n\n      var handleClick = function handleClick(e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMenuKeyUp_ = function (e) {\n        return _this.handleMenuKeyUp(e);\n      };\n\n      _this.on(_this.menuButton_, 'tap', handleClick);\n\n      _this.on(_this.menuButton_, 'click', handleClick);\n\n      _this.on(_this.menuButton_, 'keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on(_this.menuButton_, 'mouseenter', function () {\n        _this.addClass('vjs-hover');\n\n        _this.menu.show();\n\n        on(document, 'keyup', _this.handleMenuKeyUp_);\n      });\n\n      _this.on('mouseleave', function (e) {\n        return _this.handleMouseLeave(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleSubmenuKeyDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     */\n\n\n    var _proto = MenuButton.prototype;\n\n    _proto.update = function update() {\n      var menu = this.createMenu();\n\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n\n      this.menu = menu;\n      this.addChild(menu);\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player_, {\n        menuButton: this\n      });\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n\n      this.hideThreshold_ = 0; // Add a title list item to the top\n\n      if (this.options_.title) {\n        var titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        var titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n\n      this.items = this.createItems();\n\n      if (this.items) {\n        // Add menu items to the menu\n        for (var i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.createItems = function createItems() {}\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    ;\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      } // TODO: Fix the CSS so that this isn't necessary\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.menuButton_.el();\n      }\n\n      return this.menuButton_.controlText(text, el);\n    }\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseLeave();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    ;\n\n    _proto.handleMouseLeave = function handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.menuButton_.focus();\n    }\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.menuButton_.blur();\n    }\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        this.removeClass('vjs-hover');\n      }\n    }\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    ;\n\n    _proto.pressButton = function pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n\n        this.menu.focus();\n      }\n    }\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    ;\n\n    _proto.unpressButton = function unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    };\n\n    return MenuButton;\n  }(Component$1);\n\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n\n  var TrackButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(TrackButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TrackButton(player, options) {\n      var _this;\n\n      var tracks = options.tracks;\n      _this = _MenuButton.call(this, player, options) || this;\n\n      if (_this.items.length <= 1) {\n        _this.hide();\n      }\n\n      if (!tracks) {\n        return assertThisInitialized(_this);\n      }\n\n      var updateHandler = bind(assertThisInitialized(_this), _this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n\n      _this.player_.on('ready', updateHandler);\n\n      _this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n\n      return _this;\n    }\n\n    return TrackButton;\n  }(MenuButton);\n\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n    * @typedef MenuKeys\n    * @array\n    */\n  var MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n\n  var MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(MenuItem, _ClickableComponent);\n\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    function MenuItem(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n      _this.selectable = options.selectable;\n      _this.isSelected_ = options.selected || false;\n      _this.multiSelectable = options.multiSelectable;\n\n      _this.selected(_this.isSelected_);\n\n      if (_this.selectable) {\n        if (_this.multiSelectable) {\n          _this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          _this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        _this.el_.setAttribute('role', 'menuitem');\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = MenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n\n      var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs); // swap icon with menu item text.\n\n\n      el.replaceChild(createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      }), el.querySelector('.vjs-icon-placeholder'));\n      return el;\n    }\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (!MenuKeys.some(function (key) {\n        return keycode.isEventKey(event, key);\n      })) {\n        // Pass keydown handling up for unused keys\n        _ClickableComponent.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      this.selected(true);\n    }\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    ;\n\n    _proto.selected = function selected(_selected) {\n      if (this.selectable) {\n        if (_selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    };\n\n    return MenuItem;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n\n  var TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TextTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n\n      _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this.handleSelectedLanguageChange.apply(assertThisInitialized(_this), args);\n      };\n\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n      _this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n\n\n      if (tracks.onchange === undefined) {\n        var event;\n\n        _this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {// continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      } // set the default state based on current tracks\n\n\n      _this.handleTracksChange();\n\n      return _this;\n    }\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = TextTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      var referenceTrack = this.track;\n      var tracks = this.player_.textTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      if (!tracks) {\n        return;\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        } // If this text track is the component's track and it is not showing,\n        // set it to showing.\n\n\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          } // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n\n      _MenuItem.prototype.dispose.call(this);\n    };\n\n    return TextTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function OffTextTrackMenuItem(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player: player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        \"default\": false,\n        mode: 'disabled'\n      };\n\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      } // MenuItem is selectable\n\n\n      options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n      options.multiSelectable = false;\n      return _TextTrackMenuItem.call(this, player, options) || this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n\n\n    var _proto = OffTextTrackMenuItem.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var shouldBeSelected = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      } // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      var tracks = this.player().textTracks();\n      var allHidden = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    };\n\n    return OffTextTrackMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n\n  var TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(TextTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function TextTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.textTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n\n\n    var _proto = TextTrackButton.prototype;\n\n    _proto.createItems = function createItems(items, TrackMenuItem) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (TrackMenuItem === void 0) {\n        TrackMenuItem = TextTrackMenuItem;\n      }\n\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      var label;\n\n      if (this.label_) {\n        label = this.label_ + \" off\";\n      } // Add an OFF menu item to turn all tracks off\n\n\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label: label\n      }));\n      this.hideThreshold_ += 1;\n      var tracks = this.player_.textTracks();\n\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          var item = new TrackMenuItem(this.player_, {\n            track: track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n          items.push(item);\n        }\n      }\n\n      return items;\n    };\n\n    return TextTrackButton;\n  }(TrackButton);\n\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n\n  var ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ChaptersTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var cue = options.cue;\n      var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n      _this.cue = cue;\n      track.addEventListener('cuechange', bind(assertThisInitialized(_this), _this.update));\n      return _this;\n    }\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = ChaptersTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player_.currentTime(this.cue.startTime);\n      this.update(this.cue.startTime);\n    }\n    /**\n     * Update chapter menu item\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `cuechange` event that caused this function to run.\n     *\n     * @listens TextTrack#cuechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var cue = this.cue;\n      var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n      this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n    };\n\n    return ChaptersTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n\n  var ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(ChaptersButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    function ChaptersButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = ChaptersButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.update = function update(event) {\n      if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n        this.setTrack(this.findChaptersTrack());\n      }\n\n      _TextTrackButton.prototype.update.call(this);\n    }\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    ;\n\n    _proto.setTrack = function setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      } // here this.track_ refers to the old track instance\n\n\n      if (this.track_) {\n        var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n\n        this.track_ = null;\n      }\n\n      this.track_ = track; // here this.track_ refers to the new track instance\n\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n\n        var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (_remoteTextTrackEl) {\n          _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n      }\n    }\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    ;\n\n    _proto.findChaptersTrack = function findChaptersTrack() {\n      var tracks = this.player_.textTracks() || [];\n\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        var track = tracks[i];\n\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    ;\n\n    _proto.getMenuCaption = function getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return _TextTrackButton.prototype.createMenu.call(this);\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!this.track_) {\n        return items;\n      }\n\n      var cues = this.track_.cues;\n\n      if (!cues) {\n        return items;\n      }\n\n      for (var i = 0, l = cues.length; i < l; i++) {\n        var cue = cues[i];\n        var mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue: cue\n        });\n        items.push(mi);\n      }\n\n      return items;\n    };\n\n    return ChaptersButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  ChaptersButton.prototype.kind_ = 'chapters';\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n\n  var DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function DescriptionsButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n      var tracks = player.textTracks();\n      var changeHandler = bind(assertThisInitialized(_this), _this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n\n\n    var _proto = DescriptionsButton.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var disabled = false; // Check whether a track of a different kind is showing\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      } // If another track is showing, disable this menu button\n\n\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return DescriptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function SubtitlesButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubtitlesButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return SubtitlesButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CaptionSettingsMenuItem(player, options) {\n      var _this;\n\n      options.track = {\n        player: player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        \"default\": false,\n        mode: 'disabled'\n      }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n      _this.addClass('vjs-texttrack-settings');\n\n      _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n      return _this;\n    }\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = CaptionSettingsMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    };\n\n    return CaptionSettingsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n\n  var CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(CaptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function CaptionsButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CaptionsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      return _TextTrackButton.prototype.createItems.call(this, items);\n    };\n\n    return CaptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CaptionsButton.prototype.kind_ = 'captions';\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n    function SubsCapsMenuItem() {\n      return _TextTrackMenuItem.apply(this, arguments) || this;\n    }\n\n    var _proto = SubsCapsMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'captions') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: \" \" + this.localize('Captions')\n        }));\n      }\n\n      return el;\n    };\n\n    return SubsCapsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n    function SubsCapsButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n\n      _this.label_ = 'subtitles';\n\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n        _this.label_ = 'captions';\n      }\n\n      _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubsCapsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n      return items;\n    };\n\n    return SubsCapsButton;\n  }(TextTrackButton);\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n\n\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n\n  var AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function AudioTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n\n      _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n\n    var _proto = AudioTrackMenuItem.prototype;\n\n    _proto.createEl = function createEl(type, props, attrs) {\n      var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'main-desc') {\n        parentSpan.appendChild(_MenuItem.prototype.createEl.call(this, 'span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(_MenuItem.prototype.createEl.call(this, 'span', {\n          className: 'vjs-control-text',\n          textContent: this.localize('Descriptions')\n        }));\n      }\n\n      return el;\n    }\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n      // off for us.\n\n\n      this.track.enabled = true;\n    }\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    };\n\n    return AudioTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n\n  var AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(AudioTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function AudioTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.audioTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = AudioTrackButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems(items) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n\n      return items;\n    };\n\n    return AudioTrackButton;\n  }(TrackButton);\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n\n  var PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuItem(player, options) {\n      var _this;\n\n      var label = options.rate;\n      var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.label = label;\n      _this.rate = rate;\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = PlaybackRateMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player().playbackRate(this.rate);\n    }\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    };\n\n    return PlaybackRateMenuItem;\n  }(MenuItem);\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n\n  var PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuButton(player, options) {\n      var _this;\n\n      _this = _MenuButton.call(this, player, options) || this;\n\n      _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n      _this.updateVisibility();\n\n      _this.updateLabel();\n\n      _this.on(player, 'loadstart', function (e) {\n        return _this.updateVisibility(e);\n      });\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.updateLabel(e);\n      });\n\n      _this.on(player, 'playbackrateschange', function (e) {\n        return _this.handlePlaybackRateschange(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlaybackRateMenuButton.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _MenuButton.prototype.createEl.call(this);\n\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.labelEl_ = null;\n\n      _MenuButton.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var rates = this.playbackRates();\n      var items = [];\n\n      for (var i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n\n      return items;\n    }\n    /**\n     * Updates ARIA accessibility attributes\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes() {\n      // Current playback rate\n      this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // select next rate option\n      var currentRate = this.player().playbackRate();\n      var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n      var newRate = rates[0];\n\n      for (var i = 0; i < rates.length; i++) {\n        if (rates[i] > currentRate) {\n          newRate = rates[i];\n          break;\n        }\n      }\n\n      this.player().playbackRate(newRate);\n    }\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    ;\n\n    _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n      this.update();\n    }\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates() {\n      var player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    ;\n\n    _proto.playbackRateSupported = function playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.updateVisibility = function updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.updateLabel = function updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    };\n\n    return PlaybackRateMenuButton;\n  }(MenuButton);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n\n  var Spacer = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Spacer, _Component);\n\n    function Spacer() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Spacer.prototype;\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n\n      return _Component.prototype.createEl.call(this, tag, props, attributes);\n    };\n\n    return Spacer;\n  }(Component$1);\n\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n\n  var CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n    inheritsLoose(CustomControlSpacer, _Spacer);\n\n    function CustomControlSpacer() {\n      return _Spacer.apply(this, arguments) || this;\n    }\n\n    var _proto = CustomControlSpacer.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Spacer.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: \"\\xA0\"\n      });\n    };\n\n    return CustomControlSpacer;\n  }(Spacer);\n\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n\n  var ControlBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ControlBar, _Component);\n\n    function ControlBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ControlBar.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    };\n\n    return ControlBar;\n  }(Component$1);\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n\n  if ('exitPictureInPicture' in document) {\n    ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n  }\n\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n\n  var ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(ErrorDisplay, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ErrorDisplay(player, options) {\n      var _this;\n\n      _this = _ModalDialog.call(this, player, options) || this;\n\n      _this.on(player, 'error', function (e) {\n        return _this.open(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n\n\n    var _proto = ErrorDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    ;\n\n    _proto.content = function content() {\n      var error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    };\n\n    return ErrorDisplay;\n  }(ModalDialog);\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n\n\n  ErrorDisplay.prototype.options_ = _extends_1({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  var LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  var COLOR_BLACK = ['#000', 'Black'];\n  var COLOR_BLUE = ['#00F', 'Blue'];\n  var COLOR_CYAN = ['#0FF', 'Cyan'];\n  var COLOR_GREEN = ['#0F0', 'Green'];\n  var COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  var COLOR_RED = ['#F00', 'Red'];\n  var COLOR_WHITE = ['#FFF', 'White'];\n  var COLOR_YELLOW = ['#FF0', 'Yellow'];\n  var OPACITY_OPAQUE = ['1', 'Opaque'];\n  var OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  var OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n\n  var selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      \"default\": 2,\n      parser: function parser(v) {\n        return v === '1.00' ? null : Number(v);\n      }\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n\n  function getSelectedOptionValue(el, parser) {\n    var value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n\n\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n\n    for (var i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n\n\n  var TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(TextTrackSettings, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    function TextTrackSettings(player, options) {\n      var _this;\n\n      options.temporary = false;\n      _this = _ModalDialog.call(this, player, options) || this;\n      _this.updateDisplay = _this.updateDisplay.bind(assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n      _this.fill();\n\n      _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n      _this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: _this.localize('End of dialog window.')\n      });\n\n      _this.el().appendChild(_this.endDialog);\n\n      _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n      if (options.persistTextTrackSettings === undefined) {\n        _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n      }\n\n      _this.on(_this.$('.vjs-done-button'), 'click', function () {\n        _this.saveSettings();\n\n        _this.close();\n      });\n\n      _this.on(_this.$('.vjs-default-button'), 'click', function () {\n        _this.setDefaults();\n\n        _this.updateDisplay();\n      });\n\n      each(selectConfigs, function (config) {\n        _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n      });\n\n      if (_this.options_.persistTextTrackSettings) {\n        _this.restoreSettings();\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrackSettings.prototype;\n\n    _proto.dispose = function dispose() {\n      this.endDialog = null;\n\n      _ModalDialog.prototype.dispose.call(this);\n    }\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n      var _this2 = this;\n\n      if (legendId === void 0) {\n        legendId = '';\n      }\n\n      if (type === void 0) {\n        type = 'label';\n      }\n\n      var config = selectConfigs[key];\n      var id = config.id.replace('%s', this.id_);\n      var selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n        var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFgColor_ = function createElFgColor_() {\n      var legendId = \"captions-text-legend-\" + this.id_;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElBgColor_ = function createElBgColor_() {\n      var legendId = \"captions-background-\" + this.id_;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElWinColor_ = function createElWinColor_() {\n      var legendId = \"captions-window-\" + this.id_;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElColors_ = function createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFont_ = function createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElControls_ = function createElControls_() {\n      var defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n      });\n    };\n\n    _proto.content = function content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    };\n\n    _proto.label = function label() {\n      return this.localize('Caption Settings Dialog');\n    };\n\n    _proto.description = function description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    };\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n    }\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.getValues = function getValues() {\n      var _this3 = this;\n\n      return reduce(selectConfigs, function (accum, config, key) {\n        var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n\n        return accum;\n      }, {});\n    }\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.setValues = function setValues(values) {\n      var _this4 = this;\n\n      each(selectConfigs, function (config, key) {\n        setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n      });\n    }\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    ;\n\n    _proto.setDefaults = function setDefaults() {\n      var _this5 = this;\n\n      each(selectConfigs, function (config) {\n        var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n        _this5.$(config.selector).selectedIndex = index;\n      });\n    }\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    ;\n\n    _proto.restoreSettings = function restoreSettings() {\n      var values;\n\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n\n      if (values) {\n        this.setValues(values);\n      }\n    }\n    /**\n     * Save text track settings to localStorage\n     */\n    ;\n\n    _proto.saveSettings = function saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n\n      var values = this.getValues();\n\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n    /**\n     * Update display of text track settings\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      var cb = this.player_.controlBar;\n      var subsCapsBtn = cb && cb.subsCapsButton;\n      var ccBtn = cb && cb.captionsButton;\n\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    };\n\n    return TextTrackSettings;\n  }(ModalDialog);\n\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n\n  var ResizeManager = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ResizeManager, _Component);\n\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    function ResizeManager(player, options) {\n      var _this;\n\n      var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      } // Only create an element when ResizeObserver isn't available\n\n\n      var options_ = mergeOptions$3({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n      _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      _this.loadListener_ = null;\n      _this.resizeObserver_ = null;\n      _this.debouncedHandler_ = debounce(function () {\n        _this.resizeHandler();\n      }, 100, false, assertThisInitialized(_this));\n\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n        _this.resizeObserver_.observe(player.el());\n      } else {\n        _this.loadListener_ = function () {\n          if (!_this.el_ || !_this.el_.contentWindow) {\n            return;\n          }\n\n          var debouncedHandler_ = _this.debouncedHandler_;\n\n          var unloadListener_ = _this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          }; // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n\n\n          on(_this.el_.contentWindow, 'unload', unloadListener_);\n          on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n\n        _this.one('load', _this.loadListener_);\n      }\n\n      return _this;\n    }\n\n    var _proto = ResizeManager.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    ;\n\n    _proto.resizeHandler = function resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n\n      this.player_.trigger('playerresize');\n    };\n\n    _proto.dispose = function dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n\n        this.resizeObserver_.disconnect();\n      }\n\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return ResizeManager;\n  }(Component$1);\n\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  var defaults = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n\n  var LiveTracker = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveTracker, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect wether we are live or not.\n     */\n    function LiveTracker(player, options) {\n      var _this;\n\n      // LiveTracker does not need an element\n      var options_ = mergeOptions$3(defaults, options, {\n        createEl: false\n      });\n      _this = _Component.call(this, player, options_) || this;\n\n      _this.handleVisibilityChange_ = function (e) {\n        return _this.handleVisibilityChange(e);\n      };\n\n      _this.trackLiveHandler_ = function () {\n        return _this.trackLive_();\n      };\n\n      _this.handlePlay_ = function (e) {\n        return _this.handlePlay(e);\n      };\n\n      _this.handleFirstTimeupdate_ = function (e) {\n        return _this.handleFirstTimeupdate(e);\n      };\n\n      _this.handleSeeked_ = function (e) {\n        return _this.handleSeeked(e);\n      };\n\n      _this.seekToLiveEdge_ = function (e) {\n        return _this.seekToLiveEdge(e);\n      };\n\n      _this.reset_();\n\n      _this.on(_this.player_, 'durationchange', function (e) {\n        return _this.handleDurationchange(e);\n      }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n\n\n      _this.one(_this.player_, 'canplay', function () {\n        return _this.toggleTracking();\n      }); // we don't need to track live playback if the document is hidden,\n      // also, tracking when the document is hidden can\n      // cause the CPU to spike and eventually crash the page on IE11.\n\n\n      if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n        _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n      }\n\n      return _this;\n    }\n    /**\n     * toggle tracking based on document visiblility\n     */\n\n\n    var _proto = LiveTracker.prototype;\n\n    _proto.handleVisibilityChange = function handleVisibilityChange() {\n      if (this.player_.duration() !== Infinity) {\n        return;\n      }\n\n      if (document.hidden) {\n        this.stopTracking();\n      } else {\n        this.startTracking();\n      }\n    }\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    ;\n\n    _proto.trackLive_ = function trackLive_() {\n      var seekable = this.player_.seekable(); // skip undefined seekable\n\n      if (!seekable || !seekable.length) {\n        return;\n      }\n\n      var newTime = Number(window.performance.now().toFixed(4));\n      var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      var liveCurrentTime = this.liveCurrentTime();\n      var currentTime = this.player_.currentTime(); // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n\n      var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    ;\n\n    _proto.handleDurationchange = function handleDurationchange() {\n      this.toggleTracking();\n    }\n    /**\n     * start/stop tracking\n     */\n    ;\n\n    _proto.toggleTracking = function toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n    /**\n     * start tracking live playback\n     */\n    ;\n\n    _proto.startTracking = function startTracking() {\n      if (this.isTracking()) {\n        return;\n      } // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n\n\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    ;\n\n    _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked() {\n      var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    ;\n\n    _proto.reset_ = function reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    ;\n\n    _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n    /**\n     * stop tracking live playback\n     */\n    ;\n\n    _proto.stopTracking = function stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    ;\n\n    _proto.seekableEnd = function seekableEnd() {\n      var seekable = this.player_.seekable();\n      var seekableEnds = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      } // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n\n\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    ;\n\n    _proto.seekableStart = function seekableStart() {\n      var seekable = this.player_.seekable();\n      var seekableStarts = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      } // grab the first seekable start after sorting, or if there are none\n      // default to 0\n\n\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    ;\n\n    _proto.liveWindow = function liveWindow() {\n      var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n\n      return liveCurrentTime - this.seekableStart();\n    }\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Wether liveTracker is tracking\n     */\n    ;\n\n    _proto.isLive = function isLive() {\n      return this.isTracking();\n    }\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Wether playback is at the live edge\n     */\n    ;\n\n    _proto.atLiveEdge = function atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    ;\n\n    _proto.liveCurrentTime = function liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n    /**\n     * The number of seconds that have occured after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    ;\n\n    _proto.pastSeekEnd = function pastSeekEnd() {\n      var seekableEnd = this.seekableEnd();\n\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    ;\n\n    _proto.behindLiveEdge = function behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n    /**\n     * Wether live tracker is currently tracking or not.\n     */\n    ;\n\n    _proto.isTracking = function isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    ;\n\n    _proto.seekToLiveEdge = function seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n\n      if (this.atLiveEdge()) {\n        return;\n      }\n\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n    /**\n     * Dispose of liveTracker\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n      this.stopTracking();\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return LiveTracker;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n\n  var sourcesetLoad = function sourcesetLoad(tech) {\n    var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n\n\n    var sources = tech.$$('source');\n    var srcUrls = [];\n    var src = ''; // if there are no sources, do not fire sourceset\n\n    if (!sources.length) {\n      return false;\n    } // only count valid/non-duplicate source elements\n\n\n    for (var i = 0; i < sources.length; i++) {\n      var url = sources[i].src;\n\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    } // there were no valid sources\n\n\n    if (!srcUrls.length) {\n      return false;\n    } // there is only one valid source element url\n    // use that\n\n\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n\n    tech.triggerSourceset(src);\n    return true;\n  };\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n      dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n      var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      } // remove content\n\n\n      this.innerText = ''; // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n\n      window.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n      return this.innerHTML;\n    }\n  });\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n\n  var getDescriptor = function getDescriptor(priority, prop) {\n    var descriptor = {};\n\n    for (var i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n\n  var getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n  };\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n\n\n  var firstSourceWatch = function firstSourceWatch(tech) {\n    var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n    if (el.resetSourceWatch_) {\n      return;\n    }\n\n    var old = {};\n    var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n    var appendWrapper = function appendWrapper(appendFn) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var retval = appendFn.apply(el, args);\n        sourcesetLoad(tech);\n        return retval;\n      };\n    };\n\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n      if (!el[k]) {\n        return;\n      } // store the old function\n\n\n      old[k] = el[k]; // call the old function with a sourceset if a source\n      // was loaded\n\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n\n    el.resetSourceWatch_ = function () {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(function (k) {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    }; // on the first sourceset, we need to revert our changes\n\n\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n\n  var getSrcDescriptor = function getSrcDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n  };\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n\n\n  var setupSourceset = function setupSourceset(tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n\n    var el = tech.el(); // make sure sourceset isn't setup twice.\n\n    if (el.resetSourceset_) {\n      return;\n    }\n\n    var srcDescriptor = getSrcDescriptor(tech);\n    var oldSetAttribute = el.setAttribute;\n    var oldLoad = el.load;\n    Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n      set: function set(v) {\n        var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n\n      return retval;\n    };\n\n    el.load = function () {\n      var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n\n      return retval;\n    };\n\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n\n    el.resetSourceset_ = function () {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter wether a setter shoould be allowed or not\n   */\n  var defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n    if (setter === void 0) {\n      setter = true;\n    }\n\n    var set = function set(value) {\n      return Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        writable: true\n      });\n    };\n\n    var options = {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        var value = getValue();\n        set(value);\n        return value;\n      }\n    };\n\n    if (setter) {\n      options.set = set;\n    }\n\n    return Object.defineProperty(obj, key, options);\n  };\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n\n  var Html5 = /*#__PURE__*/function (_Tech) {\n    inheritsLoose(Html5, _Tech);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Html5(options, ready) {\n      var _this;\n\n      _this = _Tech.call(this, options, ready) || this;\n      var source = options.source;\n      var crossoriginTracks = false; // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n\n      if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        _this.setSource(source);\n      } else {\n        _this.handleLateInit_(_this.el_);\n      } // setup sourceset after late sourceset/init\n\n\n      if (options.enableSourceset) {\n        _this.setupSourcesetHandling_();\n      }\n\n      _this.isScrubbing_ = false;\n\n      if (_this.el_.hasChildNodes()) {\n        var nodes = _this.el_.childNodes;\n        var nodesLength = nodes.length;\n        var removeNodes = [];\n\n        while (nodesLength--) {\n          var node = nodes[nodesLength];\n          var nodeName = node.nodeName.toLowerCase();\n\n          if (nodeName === 'track') {\n            if (!_this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              _this.remoteTextTrackEls().addTrackElement_(node);\n\n              _this.remoteTextTracks().addTrack(node.track);\n\n              _this.textTracks().addTrack(node.track);\n\n              if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < removeNodes.length; i++) {\n          _this.el_.removeChild(removeNodes[i]);\n        }\n      }\n\n      _this.proxyNativeTracks_();\n\n      if (_this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n      _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n\n\n      if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n        _this.setControls(true);\n      } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n\n\n      _this.proxyWebkitFullscreen_();\n\n      _this.triggerReady();\n\n      return _this;\n    }\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n\n\n    var _proto = Html5.prototype;\n\n    _proto.dispose = function dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null; // tech will handle clearing of the emulated track list\n\n      _Tech.prototype.dispose.call(this);\n    }\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    ;\n\n    _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    ;\n\n    _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n      var textTracks = this.textTracks();\n      var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n      var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n        metadataTracksPreFullscreenState = [];\n\n        for (var i = 0; i < textTracks.length; i++) {\n          var track = textTracks[i];\n\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track: track,\n              storedMode: track.mode\n            });\n          }\n        }\n      }; // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n\n\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', function () {\n        return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      });\n\n      var restoreTrackMode = function restoreTrackMode() {\n        for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          var storedTrack = metadataTracksPreFullscreenState[i];\n\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        } // we only want this handler to be executed on the first 'change' event\n\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      }; // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n\n\n      this.on('webkitbeginfullscreen', function () {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      }); // start updating the snapshot again after leaving fullscreen\n\n      this.on('webkitendfullscreen', function () {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    ;\n\n    _proto.overrideNative_ = function overrideNative_(type, override) {\n      var _this2 = this;\n\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n        return;\n      }\n\n      var lowerCaseType = type.toLowerCase();\n\n      if (this[lowerCaseType + \"TracksListeners_\"]) {\n        Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n          var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n          elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n        });\n      }\n\n      this[\"featuresNative\" + type + \"Tracks\"] = !override;\n      this[lowerCaseType + \"TracksListeners_\"] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n      var _this3 = this;\n\n      var props = NORMAL[name];\n      var elTracks = this.el()[props.getterName];\n      var techTracks = this[props.getterName]();\n\n      if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      var listeners = {\n        change: function change(e) {\n          var event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event); // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n\n          if (name === 'text') {\n            _this3[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      }); // Remove (native) tracks that are not used anymore\n\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    }\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n      var _this4 = this;\n\n      NORMAL.names.forEach(function (name) {\n        _this4.proxyNativeTracksForType_(name);\n      });\n    }\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          var clone = el.cloneNode(true);\n\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video'); // determine if native controls should be used\n\n          var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          var attributes = mergeOptions$3({}, tagAttributes);\n\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n\n          setAttributes(el, assign(attributes, {\n            id: this.options_.techId,\n            \"class\": 'vjs-tech'\n          }));\n        }\n\n        el.playerId = this.options_.playerId;\n      }\n\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      } // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n\n\n      var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n      for (var i = 0; i < settingsAttrs.length; i++) {\n        var attr = settingsAttrs[i];\n        var value = this.options_[attr];\n\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n\n          el[attr] = value;\n        }\n      }\n\n      return el;\n    }\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    ;\n\n    _proto.handleLateInit_ = function handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        this.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      } // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n\n\n      var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n      eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      } // We still need to give the player time to add event listeners\n\n\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {\n      return this.isScrubbing_;\n    }\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    ;\n\n    _proto.duration = function duration() {\n      var _this5 = this;\n\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        var checkProgress = function checkProgress() {\n          if (_this5.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (_this5.el_.duration === Infinity) {\n              _this5.trigger('durationchange');\n            }\n\n            _this5.off('timeupdate', checkProgress);\n          }\n        };\n\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n\n      return this.el_.duration || NaN;\n    }\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    ;\n\n    _proto.width = function width() {\n      return this.el_.offsetWidth;\n    }\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    ;\n\n    _proto.height = function height() {\n      return this.el_.offsetHeight;\n    }\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    ;\n\n    _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n      var _this6 = this;\n\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n\n      var endFn = function endFn() {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        });\n      };\n\n      var beginFn = function beginFn() {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', function () {\n        _this6.off('webkitbeginfullscreen', beginFn);\n\n        _this6.off('webkitendfullscreen', endFn);\n      });\n    }\n    /**\n     * Check if fullscreen is supported on the current playback device.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      if (typeof this.el_.webkitEnterFullScreen === 'function') {\n        var userAgent = window.navigator && window.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n        if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    ;\n\n    _proto.enterFullScreen = function enterFullScreen() {\n      var video = this.el_;\n\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n\n        this.setTimeout(function () {\n          video.pause();\n\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    ;\n\n    _proto.exitFullScreen = function exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n\n      this.el_.webkitExitFullScreen();\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    ;\n\n    _proto.src = function src(_src) {\n      if (_src === undefined) {\n        return this.el_.src;\n      } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n      this.setSrc(_src);\n    }\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n\n      return this.el_.currentSrc;\n    }\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    ;\n\n    _proto.setControls = function setControls(val) {\n      this.el_.controls = !!val;\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n      }\n\n      return this.el_.addTextTrack(kind, label, language);\n    }\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.createRemoteTextTrack.call(this, options);\n      }\n\n      var htmlTrackElement = document.createElement('track');\n\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n\n      if (options[\"default\"]) {\n        htmlTrackElement[\"default\"] = options[\"default\"];\n      }\n\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     * automatically removed from the video element whenever the source changes\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     * to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n      if (this.featuresNativeTextTracks) {\n        var tracks = this.$$('track');\n        var i = tracks.length;\n\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n\n      var videoPlaybackQuality = {};\n\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n\n      if (window.performance && typeof window.performance.now === 'function') {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n        videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n      }\n\n      return videoPlaybackQuality;\n    };\n\n    return Html5;\n  }(Tech);\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n\n\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n\n    var video = document.createElement('video');\n    var track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      var volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      return volume !== Html5.TEST_VID.volume;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n\n\n  Html5.canMuteVolume = function () {\n    try {\n      var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n\n      Html5.TEST_VID.muted = !muted;\n\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    } // IE will error if Windows Media Player not installed #3315\n\n\n    try {\n      var playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n\n\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      var noop = function noop() {};\n\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n\n\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n\n\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n\n  [['featuresVolumeControl', 'canControlVolume'], ['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n    var key = _ref[0],\n        fn = _ref[1];\n    defineLazyProperty(Html5.prototype, key, function () {\n      return Html5[fn]();\n    }, true);\n  });\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresFullscreenResize = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresProgressEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n\n  Html5.prototype.featuresTimeupdateEvents = true; // HTML5 Feature detection and Device Fixes --------------------------------- //\n\n  var canPlayType;\n\n  Html5.patchCanPlayType = function () {\n    // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n    // Firefox and Chrome report correctly\n    if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n      canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n      Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n        var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n        if (type && mpegurlRE.test(type)) {\n          return 'maybe';\n        }\n\n        return canPlayType.call(this, type);\n      };\n    }\n  };\n\n  Html5.unpatchCanPlayType = function () {\n    var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    if (canPlayType) {\n      Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n    }\n\n    return r;\n  }; // by default, patch the media element\n\n\n  Html5.patchCanPlayType();\n\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    } // remove any child track or source nodes to prevent their loading\n\n\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    } // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n\n\n    el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// not supported\n        }\n      })();\n    }\n  };\n\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    var sources = el.querySelectorAll('source');\n    var i = sources.length;\n\n    while (i--) {\n      el.removeChild(sources[i]);\n    } // remove any src reference.\n    // not setting `src=''` because that throws an error\n\n\n    el.removeAttribute('src');\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// satisfy linter\n        }\n      })();\n    }\n  };\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  }); // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  }); // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  }); // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  }); // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n\n  Html5.nativeSourceHandler = {};\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n\n\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      var ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n    }\n\n    return '';\n  };\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n\n\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n\n\n  Html5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  // on the player when they happen\n\n  var TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange']; // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n\n  var TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  var BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  var BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n\n  BREAKPOINT_ORDER.forEach(function (k) {\n    var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n    BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n  });\n  var DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n\n  var Player = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Player, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    function Player(tag, options, ready) {\n      var _this;\n\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n\n      options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n\n      options.initChildren = false; // Same with creating the element\n\n      options.createEl = false; // don't auto mixin the evented mixin\n\n      options.evented = false; // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n\n      options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n      if (!options.language) {\n        if (typeof tag.closest === 'function') {\n          var closest = tag.closest('[lang]');\n\n          if (closest && closest.getAttribute) {\n            options.language = closest.getAttribute('lang');\n          }\n        } else {\n          var element = tag;\n\n          while (element && element.nodeType === 1) {\n            if (getAttributes(element).hasOwnProperty('lang')) {\n              options.language = element.getAttribute('lang');\n              break;\n            }\n\n            element = element.parentNode;\n          }\n        }\n      } // Run base component initializing with new options\n\n\n      _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n      _this.boundDocumentFullscreenChange_ = function (e) {\n        return _this.documentFullscreenChange_(e);\n      };\n\n      _this.boundFullWindowOnEscKey_ = function (e) {\n        return _this.fullWindowOnEscKey(e);\n      };\n\n      _this.boundUpdateStyleEl_ = function (e) {\n        return _this.updateStyleEl_(e);\n      };\n\n      _this.boundApplyInitTime_ = function (e) {\n        return _this.applyInitTime_(e);\n      };\n\n      _this.boundUpdateCurrentBreakpoint_ = function (e) {\n        return _this.updateCurrentBreakpoint_(e);\n      };\n\n      _this.boundHandleTechClick_ = function (e) {\n        return _this.handleTechClick_(e);\n      };\n\n      _this.boundHandleTechDoubleClick_ = function (e) {\n        return _this.handleTechDoubleClick_(e);\n      };\n\n      _this.boundHandleTechTouchStart_ = function (e) {\n        return _this.handleTechTouchStart_(e);\n      };\n\n      _this.boundHandleTechTouchMove_ = function (e) {\n        return _this.handleTechTouchMove_(e);\n      };\n\n      _this.boundHandleTechTouchEnd_ = function (e) {\n        return _this.handleTechTouchEnd_(e);\n      };\n\n      _this.boundHandleTechTap_ = function (e) {\n        return _this.handleTechTap_(e);\n      }; // default isFullscreen_ to false\n\n\n      _this.isFullscreen_ = false; // create logger\n\n      _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n      _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n      _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n\n      _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      _this.isReady_ = false; // Init state hasStarted_\n\n      _this.hasStarted_ = false; // Init state userActive_\n\n      _this.userActive_ = false; // Init debugEnabled_\n\n      _this.debugEnabled_ = false; // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n\n      if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      } // Store the original tag used to set options\n\n\n      _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n      _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n      _this.language(_this.options_.language); // Update Supported Languages\n\n\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        _this.languages_ = languagesToLower;\n      } else {\n        _this.languages_ = Player.prototype.options_.languages;\n      }\n\n      _this.resetCache_(); // Set poster\n\n\n      _this.poster_ = options.poster || ''; // Set controls\n\n      _this.controls_ = !!options.controls; // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      _this.changingSrc_ = false;\n      _this.playCallbacks_ = [];\n      _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n      if (tag.hasAttribute('autoplay')) {\n        _this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        _this.autoplay(_this.options_.autoplay);\n      } // check plugins\n\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          if (typeof _this[name] !== 'function') {\n            throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n          }\n        });\n      }\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n\n\n      _this.scrubbing_ = false;\n      _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n      evented(assertThisInitialized(_this), {\n        eventBusKey: 'el_'\n      }); // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n\n      if (_this.fsApi_.requestFullscreen) {\n        on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n        _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n      }\n\n      if (_this.fluid_) {\n        _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n      } // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n\n\n      var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          _this[name](options.plugins[name]);\n        });\n      } // Enable debug mode to fire debugon event for all plugins.\n\n\n      if (options.debug) {\n        _this.debug(true);\n      }\n\n      _this.options_.playerOptions = playerOptionsCopy;\n      _this.middleware_ = [];\n\n      _this.playbackRates(options.playbackRates);\n\n      _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n      _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n\n\n      if (_this.controls()) {\n        _this.addClass('vjs-controls-enabled');\n      } else {\n        _this.addClass('vjs-controls-disabled');\n      } // Set ARIA label and region role depending on player type\n\n\n      _this.el_.setAttribute('role', 'region');\n\n      if (_this.isAudio()) {\n        _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n      } else {\n        _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n      }\n\n      if (_this.isAudio()) {\n        _this.addClass('vjs-audio');\n      }\n\n      if (_this.flexNotSupported_()) {\n        _this.addClass('vjs-no-flex');\n      } // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n\n\n      if (TOUCH_ENABLED) {\n        _this.addClass('vjs-touch-enabled');\n      } // iOS Safari has broken hover handling\n\n\n      if (!IS_IOS) {\n        _this.addClass('vjs-workinghover');\n      } // Make player easily findable by ID\n\n\n      Player.players[_this.id_] = assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n      var majorVersion = version$5.split('.')[0];\n\n      _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n\n\n      _this.userActive(true);\n\n      _this.reportUserActivity();\n\n      _this.one('play', function (e) {\n        return _this.listenForUserActivity_(e);\n      });\n\n      _this.on('stageclick', function (e) {\n        return _this.handleStageClick_(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on('languagechange', function (e) {\n        return _this.handleLanguagechange(e);\n      });\n\n      _this.breakpoints(_this.options_.breakpoints);\n\n      _this.responsive(_this.options_.responsive);\n\n      return _this;\n    }\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n\n\n    var _proto = Player.prototype;\n\n    _proto.dispose = function dispose() {\n      var _this2 = this;\n\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose'); // prevent dispose from being called twice\n\n      this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      } // Kill reference to this player\n\n\n      Player.players[this.id_] = null;\n\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n\n      if (this.tag) {\n        this.tag = null;\n      }\n\n      clearCacheForPlayer(this); // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        var list = _this2[props.getterName](); // if it is not a native list\n        // we have to manually remove event listeners\n\n\n        if (list && list.off) {\n          list.off();\n        }\n      }); // the actual .el_ is removed here\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var tag = this.tag;\n      var el;\n      var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n      } // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n\n\n      var attrs = getAttributes(tag);\n\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n\n        Object.keys(el).forEach(function (k) {\n          try {\n            tag[k] = el[k];\n          } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      } // set tabindex to -1 to remove the video element from the focus order\n\n\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n      // for the same issue with Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n      if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }); // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech'; // Make player findable on elements\n\n      tag.player = el.player = this; // Default state of video is paused\n\n      this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        var defaultsStyleEl = $('.vjs-styles-defaults');\n        var head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n\n      this.fill_ = false;\n      this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n\n      var links = tag.getElementsByTagName('a');\n\n      for (var i = 0; i < links.length; i++) {\n        var linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n\n\n      tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      } // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n\n\n      prependTo(tag, el);\n      this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `anonymous` or `use-credentials`.\n     *\n     * @return {string|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin(value) {\n      if (!value) {\n        return this.techGet_('crossOrigin');\n      }\n\n      if (value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n        return;\n      }\n\n      this.techCall_('setCrossOrigin', value);\n      return;\n    }\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    ;\n\n    _proto.width = function width(value) {\n      return this.dimension('width', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    ;\n\n    _proto.height = function height(value) {\n      return this.dimension('height', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    ;\n\n    _proto.dimension = function dimension(_dimension, value) {\n      var privDimension = _dimension + '_';\n\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n        return;\n      }\n\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fluid = function fluid(bool) {\n      var _this3 = this;\n\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n\n      this.fluid_ = !!bool;\n\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, function () {\n          _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fill = function fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n\n      this.fill_ = !!bool;\n\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.aspectRatio = function aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      } // Check for width:height format\n\n\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n\n      this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    ;\n\n    _proto.updateStyleEl_ = function updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n        var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n        var techEl = this.tech_ && this.tech_.el();\n\n        if (techEl) {\n          if (_width >= 0) {\n            techEl.width = _width;\n          }\n\n          if (_height >= 0) {\n            techEl.height = _height;\n          }\n        }\n\n        return;\n      }\n\n      var width;\n      var height;\n      var aspectRatio;\n      var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      } // Ensure the CSS class is valid by starting with an alpha character\n\n\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      } // Ensure the right class is still on the player for the style element\n\n\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n    }\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadTech_ = function loadTech_(techName, source) {\n      var _this4 = this;\n\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n\n      var titleTechName = toTitleCase$1(techName);\n      var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n\n      this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      this.isReady_ = false;\n      var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n      var techOptions = {\n        source: source,\n        autoplay: autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': this.id() + \"_\" + camelTechName + \"_api\",\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset,\n        'Promise': this.options_.Promise\n      };\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        techOptions[props.getterName] = _this4[props.privateName];\n      });\n      assign(techOptions, this.options_[titleTechName]);\n      assign(techOptions, this.options_[camelTechName]);\n      assign(techOptions, this.options_[techName.toLowerCase()]);\n\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      } // Initialize tech instance\n\n\n      var TechClass = Tech.getTech(techName);\n\n      if (!TechClass) {\n        throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n      }\n\n      this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n      this.tech_.ready(bind(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n      TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (e) {\n          return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n        });\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (eventObj) {\n          if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n            _this4.queuedCallbacks_.push({\n              callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n              event: eventObj\n            });\n\n            return;\n          }\n\n          _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', function (e) {\n        return _this4.handleTechLoadStart_(e);\n      });\n      this.on(this.tech_, 'sourceset', function (e) {\n        return _this4.handleTechSourceset_(e);\n      });\n      this.on(this.tech_, 'waiting', function (e) {\n        return _this4.handleTechWaiting_(e);\n      });\n      this.on(this.tech_, 'ended', function (e) {\n        return _this4.handleTechEnded_(e);\n      });\n      this.on(this.tech_, 'seeking', function (e) {\n        return _this4.handleTechSeeking_(e);\n      });\n      this.on(this.tech_, 'play', function (e) {\n        return _this4.handleTechPlay_(e);\n      });\n      this.on(this.tech_, 'firstplay', function (e) {\n        return _this4.handleTechFirstPlay_(e);\n      });\n      this.on(this.tech_, 'pause', function (e) {\n        return _this4.handleTechPause_(e);\n      });\n      this.on(this.tech_, 'durationchange', function (e) {\n        return _this4.handleTechDurationChange_(e);\n      });\n      this.on(this.tech_, 'fullscreenchange', function (e, data) {\n        return _this4.handleTechFullscreenChange_(e, data);\n      });\n      this.on(this.tech_, 'fullscreenerror', function (e, err) {\n        return _this4.handleTechFullscreenError_(e, err);\n      });\n      this.on(this.tech_, 'enterpictureinpicture', function (e) {\n        return _this4.handleTechEnterPictureInPicture_(e);\n      });\n      this.on(this.tech_, 'leavepictureinpicture', function (e) {\n        return _this4.handleTechLeavePictureInPicture_(e);\n      });\n      this.on(this.tech_, 'error', function (e) {\n        return _this4.handleTechError_(e);\n      });\n      this.on(this.tech_, 'posterchange', function (e) {\n        return _this4.handleTechPosterChange_(e);\n      });\n      this.on(this.tech_, 'textdata', function (e) {\n        return _this4.handleTechTextData_(e);\n      });\n      this.on(this.tech_, 'ratechange', function (e) {\n        return _this4.handleTechRateChange_(e);\n      });\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      } // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n\n\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      } // Get rid of the original video tag reference after the first tech is loaded\n\n\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unloadTech_ = function unloadTech_() {\n      var _this5 = this;\n\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        _this5[props.privateName] = _this5[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n\n      this.isPosterFromTech_ = false;\n    }\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    ;\n\n    _proto.tech = function tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n\n      return this.tech_;\n    }\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    ;\n\n    _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleTechReady_ = function handleTechReady_() {\n      this.triggerReady(); // Keep the same volume as before\n\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      } // Look if the tech found a higher resolution poster while loading\n\n\n      this.handleTechPosterChange_(); // Update the duration if available\n\n      this.handleTechDurationChange_();\n    }\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n     * function will also trigger {@link Player#firstplay} if it is the first loadstart\n     * for a video.\n     *\n     * @fires Player#loadstart\n     * @fires Player#firstplay\n     * @listens Tech#loadstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-seeking'); // reset the error state\n\n      this.error(null); // Update the duration\n\n      this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n      // The firstplay event relies on both the play and loadstart events\n      // which can happen in any order for a new source\n\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n        this.trigger('firstplay');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      } // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n\n\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    ;\n\n    _proto.manualAutoplay_ = function manualAutoplay_(type) {\n      var _this6 = this;\n\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      } // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n\n\n      var resolveMuted = function resolveMuted() {\n        var previouslyMuted = _this6.muted();\n\n        _this6.muted(true);\n\n        var restoreMuted = function restoreMuted() {\n          _this6.muted(previouslyMuted);\n        }; // restore muted on play terminatation\n\n\n        _this6.playTerminatedQueue_.push(restoreMuted);\n\n        var mutedPromise = _this6.play();\n\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n\n        return mutedPromise[\"catch\"](function (err) {\n          restoreMuted();\n          throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n        });\n      };\n\n      var promise; // if muted defaults to true\n      // the only thing we can do is call play\n\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n\n        if (isPromise(promise)) {\n          promise = promise[\"catch\"](resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n\n      if (!isPromise(promise)) {\n        return;\n      }\n\n      return promise.then(function () {\n        _this6.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      })[\"catch\"](function () {\n        _this6.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    ;\n\n    _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n      if (srcObj === void 0) {\n        srcObj = '';\n      }\n\n      var src = srcObj;\n      var type = '';\n\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      } // make sure all the caches are set to default values\n      // to prevent null checking\n\n\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n      if (src && !type) {\n        type = findMimetype(this, src);\n      } // update `currentSource` cache always\n\n\n      this.cache_.source = mergeOptions$3({}, srcObj, {\n        src: src,\n        type: type\n      });\n      var matchingSources = this.cache_.sources.filter(function (s) {\n        return s.src && s.src === src;\n      });\n      var sourceElSources = [];\n      var sourceEls = this.$$('source');\n      var matchingSourceEls = [];\n\n      for (var i = 0; i < sourceEls.length; i++) {\n        var sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      } // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n\n\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      } // update the tech `src` cache\n\n\n      this.cache_.src = src;\n    }\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    ;\n\n    _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n      var _this7 = this;\n\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        var updateSourceCaches = function updateSourceCaches(src) {\n          return _this7.updateSourceCaches_(src);\n        };\n\n        var playerSrc = this.currentSource().src;\n        var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = function updateSourceCaches() {};\n          }\n        } // update the source to the initial source right away\n        // in some cases this will be empty string\n\n\n        updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], function (e) {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n\n            var techSrc = _this7.techGet('currentSrc');\n\n            _this7.lastSource_.tech = techSrc;\n\n            _this7.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     * @fires Player#firstplay\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    ;\n\n    _proto.hasStarted = function hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n\n      if (request === this.hasStarted_) {\n        return;\n      }\n\n      this.hasStarted_ = request;\n\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n        this.trigger('firstplay');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlay_ = function handleTechPlay_() {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('play');\n    }\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    ;\n\n    _proto.handleTechRateChange_ = function handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(function (queued) {\n          return queued.callback(queued.event);\n        });\n        this.queuedCallbacks_ = [];\n      }\n\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n\n      this.trigger('ratechange');\n    }\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    ;\n\n    _proto.handleTechWaiting_ = function handleTechWaiting_() {\n      var _this8 = this;\n\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n\n      var timeWhenWaiting = this.currentTime();\n\n      var timeUpdateListener = function timeUpdateListener() {\n        if (timeWhenWaiting !== _this8.currentTime()) {\n          _this8.removeClass('vjs-waiting');\n\n          _this8.off('timeupdate', timeUpdateListener);\n        }\n      };\n\n      this.on('timeupdate', timeUpdateListener);\n    }\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplay');\n    }\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplaythrough');\n    }\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlaying_ = function handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('playing');\n    }\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeking_ = function handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeking');\n    }\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeked_ = function handleTechSeeked_() {\n      this.removeClass('vjs-seeking');\n      this.removeClass('vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeked');\n    }\n    /**\n     * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#firstplay\n     * @listens Tech#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n     * @private\n     */\n    ;\n\n    _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n      // If the first starttime attribute is specified\n      // then we will start at the given offset in seconds\n      if (this.options_.starttime) {\n        log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n        this.currentTime(this.options_.starttime);\n      }\n\n      this.addClass('vjs-has-started');\n      /**\n       * Fired the first time a video is played. Not part of the HLS spec, and this is\n       * probably not the best implementation yet, so use sparingly. If you don't have a\n       * reason to prevent playback, use `myPlayer.one('play');` instead.\n       *\n       * @event Player#firstplay\n       * @deprecated As of 6.0 firstplay event is deprecated.\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('firstplay');\n    }\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    ;\n\n    _proto.handleTechPause_ = function handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('pause');\n    }\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    ;\n\n    _proto.handleTechEnded_ = function handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ended');\n    }\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    ;\n\n    _proto.handleTechClick_ = function handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    ;\n\n    _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      } // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n\n\n      var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n        return el.contains(event.target);\n      });\n\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    ;\n\n    _proto.handleTechTap_ = function handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * native click events on the SWF aren't triggered on IE11, Win8.1RT\n     * use stageclick events triggered from inside the SWF instead\n     *\n     * @private\n     * @listens stageclick\n     */\n    ;\n\n    _proto.handleStageClick_ = function handleStageClick_() {\n      this.reportUserActivity();\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    ;\n\n    _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n      var targetPlayer = e.target.player; // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n\n      var el = this.el();\n      var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n      }\n\n      this.isFullscreen(isFs);\n    }\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.toggleClass('vjs-ios-native-fs');\n        }\n\n        this.isFullscreen(data.isFullscreen);\n      }\n    };\n\n    _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    ;\n\n    _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    ;\n\n    _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    ;\n\n    _proto.handleTechError_ = function handleTechError_() {\n      var error = this.tech_.error();\n      this.error(error);\n    }\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    ;\n\n    _proto.handleTechTextData_ = function handleTechTextData_() {\n      var data = null;\n\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('textdata', data);\n    }\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    ;\n\n    _proto.getCache = function getCache() {\n      return this.cache_;\n    }\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetCache_ = function resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    ;\n\n    _proto.techCall_ = function techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n    /**\n     * Get calls can't wait for the tech, and sometimes don't need to.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {Function|undefined}\n     *         the method or undefined\n     *\n     * @private\n     */\n    ;\n\n    _proto.techGet_ = function techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      } // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // TODO: Is this needed for techs other than Flash?\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n          throw e;\n        } // When a method isn't available on the object it throws a TypeError\n\n\n        if (e.name === 'TypeError') {\n          log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n          this.tech_.isReady_ = false;\n          throw e;\n        } // If error unknown, just log and throw\n\n\n        log$1(e);\n        throw e;\n      }\n    }\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    ;\n\n    _proto.play = function play() {\n      var _this9 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return new PromiseClass(function (resolve) {\n          _this9.play_(resolve);\n        });\n      }\n\n      return this.play_();\n    }\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    ;\n\n    _proto.play_ = function play_(callback) {\n      var _this10 = this;\n\n      if (callback === void 0) {\n        callback = silencePromise;\n      }\n\n      this.playCallbacks_.push(callback);\n      var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      } // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n\n\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = function (e) {\n          _this10.play_();\n        };\n\n        this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n\n        return;\n      } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n      var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    ;\n\n    _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n      var queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    ;\n\n    _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n      var callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    ;\n\n    _proto.pause = function pause() {\n      this.techCall_('pause');\n    }\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    ;\n\n    _proto.paused = function paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    ;\n\n    _proto.played = function played() {\n      return this.techGet_('played') || createTimeRanges(0, 0);\n    }\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    ;\n\n    _proto.currentTime = function currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n\n        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n          this.cache_.initTime = seconds;\n          this.off('canplay', this.boundApplyInitTime_);\n          this.one('canplay', this.boundApplyInitTime_);\n          return;\n        }\n\n        this.techCall_('setCurrentTime', seconds);\n        this.cache_.initTime = 0;\n        return;\n      } // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n\n\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    ;\n\n    _proto.applyInitTime_ = function applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    ;\n\n    _proto.duration = function duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n\n      seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing (esp. Flash)\n        // TODO: Required for techs other than Flash?\n        this.cache_.duration = seconds;\n\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTime = function remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    } //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var buffered = this.techGet_('buffered');\n\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges(0, 0);\n      }\n\n      return buffered;\n    }\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    ;\n\n    _proto.bufferedEnd = function bufferedEnd() {\n      var buffered = this.buffered();\n      var duration = this.duration();\n      var end = buffered.end(buffered.length - 1);\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      return end;\n    }\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    ;\n\n    _proto.volume = function volume(percentAsDecimal) {\n      var vol;\n\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n\n        return;\n      } // Default to 1 when returning current volume.\n\n\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    ;\n\n    _proto.muted = function muted(_muted) {\n      if (_muted !== undefined) {\n        this.techCall_('setMuted', _muted);\n        return;\n      }\n\n      return this.techGet_('muted') || false;\n    }\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    ;\n\n    _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n      if (_defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', _defaultMuted);\n      }\n\n      return this.techGet_('defaultMuted') || false;\n    }\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    ;\n\n    _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n\n      return this.cache_.lastVolume;\n    }\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    ;\n\n    _proto.isFullscreen = function isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        var oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {EventTarget~Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n\n        this.toggleFullscreenClass_();\n        return;\n      }\n\n      return this.isFullscreen_;\n    }\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n          if (promise) {\n            promise.then(offHandler, offHandler);\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.requestFullscreenHelper_();\n    };\n\n    _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n      var _this11 = this;\n\n      var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      } // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        if (promise) {\n          promise.then(function () {\n            return _this11.isFullscreen(true);\n          }, function () {\n            return _this11.isFullscreen(false);\n          });\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.exitFullscreen = function exitFullscreen() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.exitFullscreenHelper_();\n\n          if (promise) {\n            promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.exitFullscreenHelper_();\n    };\n\n    _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n      var _this12 = this;\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = document[this.fsApi_.exitFullscreen]();\n\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(function () {\n            return _this12.isFullscreen(false);\n          }));\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    ;\n\n    _proto.enterFullWindow = function enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n      this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n      on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n      document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n      addClass(document.body, 'vjs-full-window');\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('enterFullWindow');\n    }\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    ;\n\n    _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    ;\n\n    _proto.exitFullWindow = function exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n      document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n      removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('exitFullWindow');\n    }\n    /**\n     * Disable Picture-in-Picture mode.\n     *\n     * @param {boolean} value\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     */\n    ;\n\n    _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n\n      return !!this.isInPictureInPicture_;\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n    }\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    ;\n\n    _proto.exitPictureInPicture = function exitPictureInPicture() {\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      } // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n\n\n      var excludeElement = function excludeElement(el) {\n        var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n        if (el.isContentEditable) {\n          return true;\n        } // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n\n\n        var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        } // The final test is by tag name. These tags will be excluded entirely.\n\n\n        var excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      }; // Bail out if the user is focused on an interactive form element.\n\n\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleHotkeys = function handleHotkeys(event) {\n      var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n      var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n          fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'f');\n      } : _hotkeys$fullscreenKe,\n          _hotkeys$muteKey = hotkeys.muteKey,\n          muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'm');\n      } : _hotkeys$muteKey,\n          _hotkeys$playPauseKey = hotkeys.playPauseKey,\n          playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n      } : _hotkeys$playPauseKey;\n\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType(type) {\n      var can; // Loop through each playback technology in the options order\n\n      for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        var techName = j[i];\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the current tech is defined before continuing\n\n\n        if (!tech) {\n          log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n          continue;\n        } // Check if the browser supports this technology\n\n\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n\n          if (can) {\n            return can;\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    ;\n\n    _proto.selectSource = function selectSource(sources) {\n      var _this13 = this;\n\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      var techs = this.options_.techOrder.map(function (techName) {\n        return [techName, Tech.getTech(techName)];\n      }).filter(function (_ref) {\n        var techName = _ref[0],\n            tech = _ref[1];\n\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        return false;\n      }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n\n      var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n        var found;\n        outerArray.some(function (outerChoice) {\n          return innerArray.some(function (innerChoice) {\n            found = tester(outerChoice, innerChoice);\n\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n\n      var foundSourceAndTech;\n\n      var flip = function flip(fn) {\n        return function (a, b) {\n          return fn(b, a);\n        };\n      };\n\n      var finder = function finder(_ref2, source) {\n        var techName = _ref2[0],\n            tech = _ref2[1];\n\n        if (tech.canPlaySource(source, _this13.options_[techName.toLowerCase()])) {\n          return {\n            source: source,\n            tech: techName\n          };\n        }\n      }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n\n\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n\n      return foundSourceAndTech || false;\n    }\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} isRetry\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n      var _this14 = this;\n\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      } // Reset retry behavior for new source\n\n\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      } // filter out invalid sources and turn our source into\n      // an array of source objects\n\n\n      var sources = filterSource(source); // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0);\n        return;\n      } // initial sources\n\n\n      this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n\n      this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n      setSource(this, sources[0], function (middlewareSource, mws) {\n        _this14.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n\n        if (!isRetry) {\n          _this14.cache_.sources = sources;\n        }\n\n        _this14.updateSourceCaches_(middlewareSource);\n\n        var err = _this14.src_(middlewareSource);\n\n        if (err) {\n          if (sources.length > 1) {\n            return _this14.handleSrc_(sources.slice(1));\n          }\n\n          _this14.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n          _this14.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.localize(this.options_.notSupportedMessage)\n            });\n          }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n\n\n          _this14.triggerReady();\n\n          return;\n        }\n\n        setTech(mws, _this14.tech_);\n      }); // Try another available source if this one fails before playback.\n\n      if (this.options_.retryOnError && sources.length > 1) {\n        var retry = function retry() {\n          // Remove the error modal\n          _this14.error(null);\n\n          _this14.handleSrc_(sources.slice(1), true);\n        };\n\n        var stopListeningForErrors = function stopListeningForErrors() {\n          _this14.off('error', retry);\n        };\n\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n\n        this.resetRetryOnError_ = function () {\n          _this14.off('error', retry);\n\n          _this14.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.src = function src(source) {\n      return this.handleSrc_(source, false);\n    }\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    ;\n\n    _proto.src_ = function src_(source) {\n      var _this15 = this;\n\n      var sourceTech = this.selectSource([source]);\n\n      if (!sourceTech) {\n        return true;\n      }\n\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true; // load this technology with the chosen source\n\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(function () {\n          _this15.changingSrc_ = false;\n        });\n        return false;\n      } // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n\n\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n    /**\n     * Begin loading the src data.\n     */\n    ;\n\n    _proto.load = function load() {\n      this.techCall_('load');\n    }\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      var _this16 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (this.paused() || !PromiseClass) {\n        this.doReset_();\n      } else {\n        var playPromise = this.play();\n        silencePromise(playPromise.then(function () {\n          return _this16.doReset_();\n        }));\n      }\n    };\n\n    _proto.doReset_ = function doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    ;\n\n    _proto.resetControlBarUI_ = function resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    ;\n\n    _proto.resetProgressBar_ = function resetProgressBar_() {\n      this.currentTime(0);\n      var _this$controlBar = this.controlBar,\n          durationDisplay = _this$controlBar.durationDisplay,\n          remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n    /**\n     * Reset Playback ratio\n     */\n    ;\n\n    _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n    /**\n     * Reset Volume bar\n     */\n    ;\n\n    _proto.resetVolumeBar_ = function resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    ;\n\n    _proto.currentSources = function currentSources() {\n      var source = this.currentSource();\n      var sources = []; // assume `{}` or `{ src }`\n\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n\n      return this.cache_.sources || sources;\n    }\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    ;\n\n    _proto.currentSource = function currentSource() {\n      return this.cache_.source || {};\n    }\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    ;\n\n    _proto.currentType = function currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    ;\n\n    _proto.preload = function preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n\n      return this.techGet_('preload');\n    }\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    ;\n\n    _proto.autoplay = function autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n\n      var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    ;\n\n    _proto.playsinline = function playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n\n      return this.techGet_('playsinline');\n    }\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    ;\n\n    _proto.loop = function loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n\n      return this.techGet_('loop');\n    }\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    ;\n\n    _proto.poster = function poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      } // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n\n\n      if (!src) {\n        src = '';\n      }\n\n      if (src === this.poster_) {\n        return;\n      } // update the internal poster variable\n\n\n      this.poster_ = src; // update the tech's poster\n\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('posterchange');\n    }\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        var newPoster = this.tech_.poster() || '';\n\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n          this.trigger('posterchange');\n        }\n      }\n    }\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    ;\n\n    _proto.controls = function controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.controls_ === bool) {\n        return;\n      }\n\n      this.controls_ = bool;\n\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsenabled');\n\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsdisabled');\n\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    ;\n\n    _proto.usingNativeControls = function usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n\n      this.usingNativeControls_ = bool;\n\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingcustomcontrols');\n      }\n    }\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    ;\n\n    _proto.error = function error(err) {\n      var _this17 = this;\n\n      if (err === undefined) {\n        return this.error_ || null;\n      } // allow hooks to modify error object\n\n\n      hooks('beforeerror').forEach(function (hookFunction) {\n        var newErr = hookFunction(_this17, err);\n\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          _this17.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n          return;\n        }\n\n        err = newErr;\n      }); // Suppress the first error message for no compatible source until\n      // user interaction\n\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        var triggerSuppressedError = function triggerSuppressedError() {\n          this.error(err);\n        };\n\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      } // restoring to default\n\n\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n\n        return;\n      }\n\n      this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n      this.addClass('vjs-error'); // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n      log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('error'); // notify hooks of the per player error\n\n      hooks('error').forEach(function (hookFunction) {\n        return hookFunction(_this17, _this17.error_);\n      });\n      return;\n    }\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    ;\n\n    _proto.reportUserActivity = function reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    ;\n\n    _proto.userActive = function userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n\n      bool = !!bool;\n\n      if (bool === this.userActive_) {\n        return;\n      }\n\n      this.userActive_ = bool;\n\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('useractive');\n        return;\n      } // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('userinactive');\n    }\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    ;\n\n    _proto.listenForUserActivity_ = function listenForUserActivity_() {\n      var mouseInProgress;\n      var lastMoveX;\n      var lastMoveY;\n      var handleActivity = bind(this, this.reportUserActivity);\n\n      var handleMouseMove = function handleMouseMove(e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n\n      var handleMouseDown = function handleMouseDown() {\n        handleActivity(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n\n      var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n        handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n        this.clearInterval(mouseInProgress);\n      }; // Any mouse movement will be considered user activity\n\n\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      } // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n\n\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n\n      var inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        } // Reset the activity tracker\n\n\n        this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n        this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n        this.clearTimeout(inactivityTimeout);\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout <= 0) {\n          return;\n        } // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n\n\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    ;\n\n    _proto.playbackRate = function playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    ;\n\n    _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    ;\n\n    _proto.isAudio = function isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n\n      return !!this.isAudio_;\n    }\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     * When manualCleanup is set to false, the track will be automatically removed\n     * on source changes.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     *                                       removed on a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     *             to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n\n      var _obj = obj,\n          track = _obj.track;\n\n      if (!track) {\n        track = obj;\n      } // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    ;\n\n    _proto.videoWidth = function videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    ;\n\n    _proto.videoHeight = function videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n    /**\n     * The player's language code.\n     *\n     * Changing the langauge will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    ;\n\n    _proto.language = function language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {EventTarget~Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    ;\n\n    _proto.languages = function languages() {\n      return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n    }\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      var options = mergeOptions$3(this.options_);\n      var tracks = options.tracks;\n      options.tracks = [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n        track = mergeOptions$3(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n\n      return options;\n    }\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    ;\n\n    _proto.createModal = function createModal(content, options) {\n      var _this18 = this;\n\n      options = options || {};\n      options.content = content || '';\n      var modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', function () {\n        _this18.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n\n      var currentBreakpoint = this.currentBreakpoint();\n      var currentWidth = this.currentWidth();\n\n      for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        var candidateBreakpoint = BREAKPOINT_ORDER[i];\n        var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          } // Only remove a class if there is a current breakpoint.\n\n\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n      var className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    ;\n\n    _proto.breakpoints = function breakpoints(_breakpoints) {\n      // Used as a getter.\n      if (_breakpoints === undefined) {\n        return assign(this.breakpoints_);\n      }\n\n      this.breakpoint_ = '';\n      this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n\n      this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n      return assign(this.breakpoints_);\n    }\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    ;\n\n    _proto.responsive = function responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n\n      value = Boolean(value);\n      var current = this.responsive_; // Nothing changed.\n\n      if (value === current) {\n        return;\n      } // The value actually changed, set it.\n\n\n      this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n\n      return value;\n    }\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    ;\n\n    _proto.currentBreakpoint = function currentBreakpoint() {\n      return this.breakpoint_;\n    }\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    ;\n\n    _proto.currentBreakpointClass = function currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    ;\n\n    _proto.loadMedia = function loadMedia(media, ready) {\n      var _this19 = this;\n\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n\n      this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n      this.cache_.media = mergeOptions$3(media);\n      var _this$cache_$media = this.cache_.media,\n          artwork = _this$cache_$media.artwork,\n          poster = _this$cache_$media.poster,\n          src = _this$cache_$media.src,\n          textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n\n      if (src) {\n        this.src(src);\n      }\n\n      if (poster) {\n        this.poster(poster);\n      }\n\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(function (tt) {\n          return _this19.addRemoteTextTrack(tt, false);\n        });\n      }\n\n      this.ready(ready);\n    }\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    ;\n\n    _proto.getMedia = function getMedia() {\n      if (!this.cache_.media) {\n        var poster = this.poster();\n        var src = this.currentSources();\n        var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n          return {\n            kind: tt.kind,\n            label: tt.label,\n            language: tt.language,\n            src: tt.src\n          };\n        });\n        var media = {\n          src: src,\n          textTracks: textTracks\n        };\n\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n\n        return media;\n      }\n\n      return mergeOptions$3(this.cache_.media);\n    }\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    ;\n\n    Player.getTagSettings = function getTagSettings(tag) {\n      var baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      var tagOptions = getAttributes(tag);\n      var dataSetup = tagOptions['data-setup'];\n\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      } // Check if data-setup attr exists.\n\n\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        var _safeParseTuple = tuple(dataSetup || '{}'),\n            err = _safeParseTuple[0],\n            data = _safeParseTuple[1];\n\n        if (err) {\n          log$1.error(err);\n        }\n\n        assign(tagOptions, data);\n      }\n\n      assign(baseOptions, tagOptions); // Get tag children settings\n\n      if (tag.hasChildNodes()) {\n        var children = tag.childNodes;\n\n        for (var i = 0, j = children.length; i < j; i++) {\n          var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n          var childName = child.nodeName.toLowerCase();\n\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n\n      return baseOptions;\n    }\n    /**\n     * Determine whether or not flexbox is supported\n     *\n     * @return {boolean}\n     *         - true if flexbox is supported\n     *         - false if flexbox is not supported\n     */\n    ;\n\n    _proto.flexNotSupported_ = function flexNotSupported_() {\n      var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n      // common flex features that we can rely on when checking for flex support.\n\n      return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n      'msFlexOrder' in elem.style);\n    }\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     */\n    ;\n\n    _proto.debug = function debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} newRates\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      } // ignore any value that isn't an array\n\n\n      if (!Array.isArray(newRates)) {\n        return;\n      } // ignore any arrays that don't only contain numbers\n\n\n      if (!newRates.every(function (rate) {\n        return typeof rate === 'number';\n      })) {\n        return;\n      }\n\n      this.cache_.playbackRates = newRates;\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('playbackrateschange');\n    };\n\n    return Player;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n\n\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n\n  Player.players = {};\n  var navigator = window.navigator;\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n      return this.trigger(event);\n    };\n  });\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n  });\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  var isNativeReflectConstruct = _isNativeReflectConstruct;\n\n  var construct = createCommonjsModule(function (module) {\n    function _construct(Parent, args, Class) {\n      if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct;\n      } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n          var a = [null];\n          a.push.apply(a, args);\n          var Constructor = Function.bind.apply(Parent, a);\n          var instance = new Constructor();\n          if (Class) setPrototypeOf(instance, Class.prototype);\n          return instance;\n        };\n      }\n\n      return _construct.apply(null, arguments);\n    }\n\n    module.exports = _construct;\n  });\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n\n  var BASE_PLUGIN_NAME = 'plugin';\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n\n  var PLUGIN_CACHE_KEY = 'activePlugins_';\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n\n  var pluginStorage = {};\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n\n  var pluginExists = function pluginExists(name) {\n    return pluginStorage.hasOwnProperty(name);\n  };\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {Function|undefined}\n   *          The plugin (or undefined).\n   */\n\n\n  var getPlugin = function getPlugin(name) {\n    return pluginExists(name) ? pluginStorage[name] : undefined;\n  };\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n\n\n  var markPluginAsActive = function markPluginAsActive(player, name) {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n\n\n  var triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n    var eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n\n\n  var createBasicPlugin = function createBasicPlugin(name, plugin) {\n    var basicPluginWrapper = function basicPluginWrapper() {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: null\n      }, true);\n      var instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: instance\n      });\n      return instance;\n    };\n\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n\n\n  var createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function () {\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var instance = construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n      this[name] = function () {\n        return instance;\n      };\n\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n\n\n  var Plugin = /*#__PURE__*/function () {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    function Plugin(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n\n      this.player = player;\n\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      } // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n\n\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n\n      this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n      player.on('dispose', this.dispose);\n    }\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n\n\n    var _proto = Plugin.prototype;\n\n    _proto.version = function version() {\n      return this.constructor.VERSION;\n    }\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    ;\n\n    _proto.getEventHash = function getEventHash(hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    ;\n\n    _proto.trigger = function trigger$1(event, hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    ;\n\n    _proto.handleStateChanged = function handleStateChanged(e) {}\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var name = this.name,\n          player = this.player;\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    ;\n\n    Plugin.isBasic = function isBasic(plugin) {\n      var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    ;\n\n    Plugin.registerPlugin = function registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n      }\n\n      if (pluginExists(name)) {\n        log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n      }\n\n      if (typeof plugin !== 'function') {\n        throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n      }\n\n      pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n\n      return plugin;\n    }\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    ;\n\n    Plugin.deregisterPlugin = function deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    ;\n\n    Plugin.getPlugins = function getPlugins(names) {\n      if (names === void 0) {\n        names = Object.keys(pluginStorage);\n      }\n\n      var result;\n      names.forEach(function (name) {\n        var plugin = getPlugin(name);\n\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    ;\n\n    Plugin.getPluginVersion = function getPluginVersion(name) {\n      var plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    };\n\n    return Plugin;\n  }();\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n\n\n  Plugin.getPlugin = getPlugin;\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n\n  var inherits = _inherits;\n\n  /**\n   * @file extend.js\n   * @module extend\n   */\n  /**\n   * Used to subclass an existing class by emulating ES subclassing using the\n   * `extends` keyword.\n   *\n   * @function\n   * @example\n   * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n   *   myCustomMethod: function() {\n   *     // Do things in my method.\n   *   }\n   * });\n   *\n   * @param    {Function} superClass\n   *           The class to inherit from\n   *\n   * @param    {Object}   [subClassMethods={}]\n   *           Methods of the new class\n   *\n   * @return   {Function}\n   *           The new class with subClassMethods that inherited superClass.\n   */\n\n  var extend = function extend(superClass, subClassMethods) {\n    if (subClassMethods === void 0) {\n      subClassMethods = {};\n    }\n\n    var subClass = function subClass() {\n      superClass.apply(this, arguments);\n    };\n\n    var methods = {};\n\n    if (typeof subClassMethods === 'object') {\n      if (subClassMethods.constructor !== Object.prototype.constructor) {\n        subClass = subClassMethods.constructor;\n      }\n\n      methods = subClassMethods;\n    } else if (typeof subClassMethods === 'function') {\n      subClass = subClassMethods;\n    }\n\n    inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n    if (superClass) {\n      subClass.super_ = superClass;\n    } // Extend subObj's prototype with functions and other properties from props\n\n\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        subClass.prototype[name] = methods[name];\n      }\n    }\n\n    return subClass;\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n\n  var normalizeId = function normalizeId(id) {\n    return id.indexOf('#') === 0 ? id.slice(1) : id;\n  };\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:computed-style~computedStyle as computedStyle\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:extend~extend as extend\n   * @borrows module:fn.bind as bind\n   * @borrows module:format-time.formatTime as formatTime\n   * @borrows module:format-time.resetFormatTime as resetFormatTime\n   * @borrows module:format-time.setFormatTime as setFormatTime\n   * @borrows module:merge-options.mergeOptions as mergeOptions\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows module:time-ranges.createTimeRanges as createTimeRange\n   * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n   * @borrows module:url.isCrossOrigin as isCrossOrigin\n   * @borrows module:url.parseUrl as parseUrl\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {Component~ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n\n\n  function videojs(id, options, ready) {\n    var player = videojs.getPlayer(id);\n\n    if (player) {\n      if (options) {\n        log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n      }\n\n      if (ready) {\n        player.ready(ready);\n      }\n\n      return player;\n    }\n\n    var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    } // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n\n    options = options || {};\n    hooks('beforesetup').forEach(function (hookFunction) {\n      var opts = hookFunction(el, mergeOptions$3(options));\n\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n\n      options = mergeOptions$3(options, opts);\n    }); // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n\n    var PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(function (hookFunction) {\n      return hookFunction(player);\n    });\n    return player;\n  }\n\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook; // Add default styles\n\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    var style = $('.vjs-styles-defaults');\n\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      var head = $('head');\n\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n\n      setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n    }\n  } // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n\n\n  autoSetupTimeout(1, videojs);\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n\n  videojs.VERSION = version$5;\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n\n  videojs.options = Player.prototype.options_;\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n\n  videojs.getPlayers = function () {\n    return Player.players;\n  };\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n\n\n  videojs.getPlayer = function (id) {\n    var players = Player.players;\n    var tag;\n\n    if (typeof id === 'string') {\n      var nId = normalizeId(id);\n      var player = players[nId];\n\n      if (player) {\n        return player;\n      }\n\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n\n    if (isEl(tag)) {\n      var _tag = tag,\n          _player = _tag.player,\n          playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n\n      if (_player || players[playerId]) {\n        return _player || players[playerId];\n      }\n    }\n  };\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n\n\n  videojs.getAllPlayers = function () {\n    return (// Disposed players leave a key with a `null` value, so we need to make sure\n      // we filter those out.\n      Object.keys(Player.players).map(function (k) {\n        return Player.players[k];\n      }).filter(Boolean)\n    );\n  };\n\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n\n  videojs.registerComponent = function (name, comp) {\n    if (Tech.isTech(comp)) {\n      log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n    }\n\n    Component$1.registerComponent.call(Component$1, name, comp);\n  };\n\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n\n  videojs.browser = browser;\n  /**\n   * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n   * included for backward-compatibility with 4.x.\n   *\n   * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n   * @type {boolean}\n   */\n\n  videojs.TOUCH_ENABLED = TOUCH_ENABLED;\n  videojs.extend = extend;\n  videojs.mergeOptions = mergeOptions$3;\n  videojs.bind = bind;\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n\n  videojs.plugin = function (name, plugin) {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n\n  videojs.addLanguage = function (code, data) {\n    var _mergeOptions;\n\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n    return videojs.options.languages[code];\n  };\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n\n\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n  videojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n  videojs.formatTime = formatTime;\n  videojs.setFormatTime = setFormatTime;\n  videojs.resetFormatTime = resetFormatTime;\n  videojs.parseUrl = parseUrl;\n  videojs.isCrossOrigin = isCrossOrigin;\n  videojs.EventTarget = EventTarget$2;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n    videojs[k] = function () {\n      log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = computedStyle;\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:dom|dom}\n   */\n\n  videojs.dom = Dom;\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:url|url}\n   */\n\n  videojs.url = Url;\n  videojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n  // In a major update this could become the default text and key.\n\n  videojs.addLanguage('en', {\n    'Non-Fullscreen': 'Exit Fullscreen'\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n    (function (root) {\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/?#]*\\/)*[^;?#]*)?(;[^?#]*)?(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION$1 = 'http://example.com';\n\n  var resolveUrl$2 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION$1);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION$1.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 4.7.0 @license Apache-2.0 */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  var LineStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(LineStream, _Stream);\n\n    function LineStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.buffer = '';\n      return _this;\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n\n    var _proto = LineStream.prototype;\n\n    _proto.push = function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    };\n\n    return LineStream;\n  }(Stream);\n\n  var TAB = String.fromCharCode(0x09);\n\n  var parseByterange = function parseByterange(byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    var result = {};\n\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n\n  var attributeSeparator = function attributeSeparator() {\n    var key = '[^=]*';\n    var value = '\"[^\"]*\"|[^,]*';\n    var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n\n  var parseAttributes$1 = function parseAttributes(attributes) {\n    // split the string using attributes as the separator\n    var attrs = attributes.split(attributeSeparator());\n    var result = {};\n    var i = attrs.length;\n    var attr;\n\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n\n  var ParseStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(ParseStream, _Stream);\n\n    function ParseStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.customParsers = [];\n      _this.tagMappers = [];\n      return _this;\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n\n    var _proto = ParseStream.prototype;\n\n    _proto.push = function push(line) {\n      var _this2 = this;\n\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this2.customParsers.length; i++) {\n          if (_this2.customParsers[i].call(_this2, newLine)) {\n            return;\n          }\n        } // Comments\n\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this2.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n\n          return;\n        }\n\n        match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n\n          if (match[2]) {\n            event.title = match[2];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = _extends_1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n\n          if (match[1]) {\n            var attributes = parseAttributes$1(match[1]);\n\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n\n              event.attributes.RESOLUTION = resolution;\n            }\n\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        } // unknown tag type\n\n\n        _this2.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(_ref) {\n      var _this3 = this;\n\n      var expression = _ref.expression,\n          customType = _ref.customType,\n          dataParser = _ref.dataParser,\n          segment = _ref.segment;\n\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n\n        if (match) {\n          _this3.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n          map = _ref2.map;\n\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n\n        return line;\n      };\n\n      this.tagMappers.push(mapFn);\n    };\n\n    return ParseStream;\n  }(Stream);\n\n  var camelCase = function camelCase(str) {\n    return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n      return a[1].toUpperCase();\n    });\n  };\n\n  var camelCaseKeys = function camelCaseKeys(attributes) {\n    var result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n\n  var setHoldBack = function setHoldBack(manifest) {\n    var serverControl = manifest.serverControl,\n        targetDuration = manifest.targetDuration,\n        partTargetDuration = manifest.partTargetDuration;\n\n    if (!serverControl) {\n      return;\n    }\n\n    var tag = '#EXT-X-SERVER-CONTROL';\n    var hb = 'holdBack';\n    var phb = 'partHoldBack';\n    var minTargetDuration = targetDuration && targetDuration * 3;\n    var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n      });\n    }\n\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n\n  var Parser = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(Parser, _Stream);\n\n    function Parser() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.lineStream = new LineStream();\n      _this.parseStream = new ParseStream();\n\n      _this.lineStream.pipe(_this.parseStream);\n      /* eslint-disable consistent-this */\n\n\n      var self = assertThisInitialized(_this);\n      /* eslint-enable consistent-this */\n\n\n      var uris = [];\n      var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      var currentMap; // if specified, the active decryption key\n\n      var _key;\n\n      var hasParts = false;\n\n      var noop = function noop() {};\n\n      var defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      _this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      var lastPartByterangeEnd = 0;\n\n      _this.on('end', function () {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n\n        if (!currentUri.key && _key) {\n          currentUri.key = _key;\n        }\n\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n\n        _this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n\n      _this.parseStream.on('data', function (entry) {\n        var mediaGroup;\n        var rendition;\n        ({\n          tag: function tag() {\n            // switch based on the tag type\n            (({\n              version: function version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache': function allowCache() {\n                this.manifest.allowCache = entry.allowed;\n\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange: function byterange() {\n                var byterange = {};\n\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist: function endlist() {\n                this.manifest.endList = true;\n              },\n              inf: function inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n\n                this.manifest.segments = uris;\n              },\n              key: function key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  _key = null;\n                  return;\n                }\n\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n\n                _key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  _key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence': function mediaSequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence': function discontinuitySequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type': function playlistType() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map: function map() {\n                currentMap = {};\n\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n\n                if (_key) {\n                  currentMap.key = _key;\n                }\n              },\n              'stream-inf': function streamInf() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n\n                _extends_1(currentUri.attributes, entry.attributes);\n              },\n              media: function media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n\n                var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  \"default\": /yes/i.test(entry.attributes.DEFAULT)\n                };\n\n                if (rendition[\"default\"]) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity: function discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time': function programDateTime() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration: function targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start: function start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out': function cueOut() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont': function cueOutCont() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in': function cueIn() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip': function skip() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part': function part() {\n                var _this2 = this;\n\n                hasParts = true; // parts are always specifed before a segment\n\n                var segmentIndex = this.manifest.segments.length;\n                var part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n\n                var partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach(function (r, i) {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      _this2.trigger('warn', {\n                        message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control': function serverControl() {\n                var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n\n                setHoldBack.call(this, this.manifest);\n\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint': function preloadHint() {\n                // parts are always specifed before a segment\n                var segmentIndex = this.manifest.segments.length;\n                var hint = camelCaseKeys(entry.attributes);\n                var isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n\n                var index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n\n                for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  var otherHint = currentUri.preloadHints[i];\n\n                  if (!otherHint.type) {\n                    continue;\n                  }\n\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                    });\n                  }\n                }\n              },\n              'rendition-report': function renditionReport() {\n                var report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                var index = this.manifest.renditionReports.length - 1;\n                var required = ['LAST-MSN', 'URI'];\n\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n\n                this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n              },\n              'part-inf': function partInf() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n\n                setHoldBack.call(this, this.manifest);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri: function uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n\n            if (_key) {\n              currentUri.key = _key;\n            }\n\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n\n            lastPartByterangeEnd = 0; // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment: function comment() {// comments are not important for playback\n          },\n          custom: function custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n\n      return _this;\n    }\n\n    var _proto = Parser.prototype;\n\n    _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n      var missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n\n      if (missing.length) {\n        this.trigger('warn', {\n          message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n    ;\n\n    _proto.push = function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n    ;\n\n    _proto.end = function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    };\n\n    return Parser;\n  }(Stream);\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n\n        if (!match || match.length <= 1) {\n          return;\n        }\n\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n    if (!audioGroup) {\n      return null;\n    }\n\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n\n      if (audioType[\"default\"] && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n\n    return null;\n  };\n\n  var DEFAULT_LOCATION = 'http://example.com';\n\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n\n\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function isHTML(value) {\n      return value === MIME_TYPE.HTML;\n    },\n\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function isHTML(uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var NAMESPACE$2 = conventions.NAMESPACE;\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n\n\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n\n\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n\n    return current;\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n\n\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n\n\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n\n  function copy(src, dest) {\n    for (var p in src) {\n      dest[p] = src[p];\n    }\n  }\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n\n\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n\n    if (!(pt instanceof Super)) {\n      var t = function t() {};\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n\n      pt.constructor = Class;\n    }\n  } // Node Types\n\n\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12; // ExceptionCode\n\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10); //level2\n\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long\n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n     */\n    item: function item(index) {\n      return this[index] || null;\n    },\n    toString: function toString(isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n\n      return buf.join('');\n    }\n  };\n\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n\n    _updateLiveList(this);\n  }\n\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n\n    if (list._inc != inc) {\n      var ls = list._refresh(list._node); //console.log(ls.length)\n\n\n      __set__(list, 'length', ls.length);\n\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n\n    return this[i];\n  };\n\n  _extends(LiveNodeList, NodeList);\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities\n   */\n\n\n  function NamedNodeMap() {}\n\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n\n      list.length = lastIndex;\n\n      if (el) {\n        var doc = el.ownerDocument;\n\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function getNamedItem(key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n\n      while (i--) {\n        var attr = this[i]; //console.log(attr.nodeName,key)\n\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function setNamedItem(attr) {\n      var el = attr.ownerElement;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      var oldAttr = this.getNamedItem(attr.nodeName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    setNamedItemNS: function setNamedItemNS(attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n          oldAttr;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    removeNamedItem: function removeNamedItem(key) {\n      var attr = this.getNamedItem(key);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n    //for level2\n    removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {\n      var i = this.length;\n\n      while (i--) {\n        var node = this[i];\n\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n\n      return null;\n    }\n  };\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n\n  function DOMImplementation$1() {}\n\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function hasFeature(feature, version) {\n      return true;\n    },\n\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n\n      return doc;\n    },\n\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function replaceChild(newChild, oldChild) {\n      //raises\n      this.insertBefore(newChild, oldChild);\n\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function removeChild(oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function appendChild(newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.firstChild != null;\n    },\n    cloneNode: function cloneNode(deep) {\n      return _cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function normalize() {\n      var child = this.firstChild;\n\n      while (child) {\n        var next = child.nextSibling;\n\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function isSupported(feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function hasAttributes() {\n      return this.attributes.length > 0;\n    },\n\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function lookupPrefix(namespaceURI) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          for (var n in map) {\n            if (map[n] == namespaceURI) {\n              return n;\n            }\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          if (prefix in map) {\n            return map[prefix];\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function isDefaultNamespace(namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n\n  function Document() {}\n\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++; //update childNodes\n\n      var cs = el.childNodes;\n\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        //console.log(1)\n        var child = el.firstChild;\n        var i = 0;\n\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n\n        cs.length = i;\n      }\n    }\n  }\n  /**\n   * attributes;\n   * children;\n   *\n   * writeable properties:\n   * nodeValue,Attr:value,CharacterData:data\n   * prefix\n   */\n\n\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n\n    return child;\n  }\n  /**\n   * preformance key(refChild == null)\n   */\n\n\n  function _insertBefore(parentNode, newChild, nextChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      cp.removeChild(newChild); //remove and update\n    }\n\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = newChild.firstChild;\n\n      if (newFirst == null) {\n        return newChild;\n      }\n\n      var newLast = newChild.lastChild;\n    } else {\n      newFirst = newLast = newChild;\n    }\n\n    var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = nextChild;\n\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parentNode.firstChild = newFirst;\n    }\n\n    if (nextChild == null) {\n      parentNode.lastChild = newLast;\n    } else {\n      nextChild.previousSibling = newLast;\n    }\n\n    do {\n      newFirst.parentNode = parentNode;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\n    _onUpdateChild(parentNode.ownerDocument || parentNode, parentNode); //console.log(parentNode.lastChild.nextSibling == null)\n\n\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      newChild.firstChild = newChild.lastChild = null;\n    }\n\n    return newChild;\n  }\n\n  function _appendSingleChild(parentNode, newChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      var pre = parentNode.lastChild;\n      cp.removeChild(newChild); //remove and update\n\n      var pre = parentNode.lastChild;\n    }\n\n    var pre = parentNode.lastChild;\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = pre;\n    newChild.nextSibling = null;\n\n    if (pre) {\n      pre.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n\n    parentNode.lastChild = newChild;\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\n    return newChild; //console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n  }\n\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n\n        return newChild;\n      }\n\n      if (this.documentElement == null && newChild.nodeType == ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n\n      return _insertBefore(this, newChild, refChild), newChild.ownerDocument = this, newChild;\n    },\n    removeChild: function removeChild(oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n\n      return _removeChild(this, oldChild);\n    },\n    // Introduced in DOM Level 2:\n    importNode: function importNode(importedNode, deep) {\n      return _importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function getElementById(id) {\n      var rtv = null;\n\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n\n      return rtv;\n    },\n\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function getElementsByClassName(classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class'); // can be null if the attribute does not exist\n\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function createElement(tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function createDocumentFragment() {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function createTextNode(data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function createComment(data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function createCDATASection(data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function createProcessingInstruction(target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function createAttribute(name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function createEntityReference(name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function createElementNS(namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      return node;\n    }\n  };\n\n  _extends(Document, Node);\n\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function hasAttribute(name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function getAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function getAttributeNode(name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function setAttribute(name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function removeAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function appendChild(newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function setAttributeNode(newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function setAttributeNodeNS(newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function removeAttributeNode(oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function getAttributeNS(namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function getElementsByTagName(tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n  _extends(Element, Node);\n\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n\n  _extends(Attr, Node);\n\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function substringData(offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function appendData(text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function insertData(offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function appendChild(newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function deleteData(offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function replaceData(offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n\n  _extends(CharacterData, Node);\n\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function splitText(offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n\n      return newNode;\n    }\n  };\n\n  _extends(Text, CharacterData);\n\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n\n  _extends(Comment, CharacterData);\n\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n\n  _extends(CDATASection, CharacterData);\n\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\n  _extends(DocumentType, Node);\n\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n\n  _extends(Notation, Node);\n\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n\n  _extends(Entity, Node);\n\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\n  _extends(EntityReference, Node);\n\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n\n  _extends(DocumentFragment, Node);\n\n  function ProcessingInstruction() {}\n\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\n  _extends(ProcessingInstruction, Node);\n\n  function XMLSerializer$1() {}\n\n  XMLSerializer$1.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n\n  Node.prototype.toString = nodeSerializeToString;\n\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        } //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces); //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\n    return buf.join('');\n  }\n\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI; // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\n    if (!uri) {\n      return false;\n    }\n\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n\n    var i = visibleNamespaces.length;\n\n    while (i--) {\n      var ns = visibleNamespaces[i]; // get namespace prefix\n\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml/#NT-AttValue\n   */\n\n\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g, _xmlEncoder), '\"');\n  }\n\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n\n    if (nodeFilter) {\n      node = nodeFilter(node);\n\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      } //buf.sort.apply(attrs, attributeSorter);\n\n    }\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS; // lookup current default ns from `xmlns` attribute\n\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n\n                break;\n              }\n            }\n          }\n        }\n\n        buf.push('<', prefixedNodeName);\n\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        } // add namespace for current node\n\n\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>'); //if is cdata child node\n\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        } // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n\n\n        return;\n\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n\n        return;\n\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         */\n        return buf.push(node.data.replace(/[<&]/g, _xmlEncoder).replace(/]]>/g, ']]&gt;'));\n\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n\n          buf.push(\">\");\n        }\n\n        return;\n\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n\n  function _importNode(doc, node, deep) {\n    var node2;\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  } //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\n\n  function _cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n\n    for (var n in node) {\n      var v = node[n];\n\n      if (typeof v != 'object') {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n\n    node2.ownerDocument = doc;\n\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));\n        }\n\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  }\n\n  function __set__(object, key, value) {\n    object[key] = value;\n  } //do dynamic\n\n\n  try {\n    if (Object.defineProperty) {\n      var getTextContent = function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n\n              node = node.nextSibling;\n            }\n\n            return buf.join('');\n\n          default:\n            return node.nodeValue;\n        }\n      };\n\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function get() {\n          _updateLiveList(this);\n\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function get() {\n          return getTextContent(this);\n        },\n        set: function set(data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n\n              break;\n\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n\n      __set__ = function __set__(object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  } //if(typeof require == 'function'){\n\n\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1$1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer$1; //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1$1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n    var freeze = conventions.freeze;\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n    /**\n     * A map of currently 241 entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n\n    exports.HTML_ENTITIES = freeze({\n      lt: '<',\n      gt: '>',\n      amp: '&',\n      quot: '\"',\n      apos: \"'\",\n      Agrave: \"À\",\n      Aacute: \"Á\",\n      Acirc: \"Â\",\n      Atilde: \"Ã\",\n      Auml: \"Ä\",\n      Aring: \"Å\",\n      AElig: \"Æ\",\n      Ccedil: \"Ç\",\n      Egrave: \"È\",\n      Eacute: \"É\",\n      Ecirc: \"Ê\",\n      Euml: \"Ë\",\n      Igrave: \"Ì\",\n      Iacute: \"Í\",\n      Icirc: \"Î\",\n      Iuml: \"Ï\",\n      ETH: \"Ð\",\n      Ntilde: \"Ñ\",\n      Ograve: \"Ò\",\n      Oacute: \"Ó\",\n      Ocirc: \"Ô\",\n      Otilde: \"Õ\",\n      Ouml: \"Ö\",\n      Oslash: \"Ø\",\n      Ugrave: \"Ù\",\n      Uacute: \"Ú\",\n      Ucirc: \"Û\",\n      Uuml: \"Ü\",\n      Yacute: \"Ý\",\n      THORN: \"Þ\",\n      szlig: \"ß\",\n      agrave: \"à\",\n      aacute: \"á\",\n      acirc: \"â\",\n      atilde: \"ã\",\n      auml: \"ä\",\n      aring: \"å\",\n      aelig: \"æ\",\n      ccedil: \"ç\",\n      egrave: \"è\",\n      eacute: \"é\",\n      ecirc: \"ê\",\n      euml: \"ë\",\n      igrave: \"ì\",\n      iacute: \"í\",\n      icirc: \"î\",\n      iuml: \"ï\",\n      eth: \"ð\",\n      ntilde: \"ñ\",\n      ograve: \"ò\",\n      oacute: \"ó\",\n      ocirc: \"ô\",\n      otilde: \"õ\",\n      ouml: \"ö\",\n      oslash: \"ø\",\n      ugrave: \"ù\",\n      uacute: \"ú\",\n      ucirc: \"û\",\n      uuml: \"ü\",\n      yacute: \"ý\",\n      thorn: \"þ\",\n      yuml: \"ÿ\",\n      nbsp: \"\\xA0\",\n      iexcl: \"¡\",\n      cent: \"¢\",\n      pound: \"£\",\n      curren: \"¤\",\n      yen: \"¥\",\n      brvbar: \"¦\",\n      sect: \"§\",\n      uml: \"¨\",\n      copy: \"©\",\n      ordf: \"ª\",\n      laquo: \"«\",\n      not: \"¬\",\n      shy: \"­­\",\n      reg: \"®\",\n      macr: \"¯\",\n      deg: \"°\",\n      plusmn: \"±\",\n      sup2: \"²\",\n      sup3: \"³\",\n      acute: \"´\",\n      micro: \"µ\",\n      para: \"¶\",\n      middot: \"·\",\n      cedil: \"¸\",\n      sup1: \"¹\",\n      ordm: \"º\",\n      raquo: \"»\",\n      frac14: \"¼\",\n      frac12: \"½\",\n      frac34: \"¾\",\n      iquest: \"¿\",\n      times: \"×\",\n      divide: \"÷\",\n      forall: \"∀\",\n      part: \"∂\",\n      exist: \"∃\",\n      empty: \"∅\",\n      nabla: \"∇\",\n      isin: \"∈\",\n      notin: \"∉\",\n      ni: \"∋\",\n      prod: \"∏\",\n      sum: \"∑\",\n      minus: \"−\",\n      lowast: \"∗\",\n      radic: \"√\",\n      prop: \"∝\",\n      infin: \"∞\",\n      ang: \"∠\",\n      and: \"∧\",\n      or: \"∨\",\n      cap: \"∩\",\n      cup: \"∪\",\n      'int': \"∫\",\n      there4: \"∴\",\n      sim: \"∼\",\n      cong: \"≅\",\n      asymp: \"≈\",\n      ne: \"≠\",\n      equiv: \"≡\",\n      le: \"≤\",\n      ge: \"≥\",\n      sub: \"⊂\",\n      sup: \"⊃\",\n      nsub: \"⊄\",\n      sube: \"⊆\",\n      supe: \"⊇\",\n      oplus: \"⊕\",\n      otimes: \"⊗\",\n      perp: \"⊥\",\n      sdot: \"⋅\",\n      Alpha: \"Α\",\n      Beta: \"Β\",\n      Gamma: \"Γ\",\n      Delta: \"Δ\",\n      Epsilon: \"Ε\",\n      Zeta: \"Ζ\",\n      Eta: \"Η\",\n      Theta: \"Θ\",\n      Iota: \"Ι\",\n      Kappa: \"Κ\",\n      Lambda: \"Λ\",\n      Mu: \"Μ\",\n      Nu: \"Ν\",\n      Xi: \"Ξ\",\n      Omicron: \"Ο\",\n      Pi: \"Π\",\n      Rho: \"Ρ\",\n      Sigma: \"Σ\",\n      Tau: \"Τ\",\n      Upsilon: \"Υ\",\n      Phi: \"Φ\",\n      Chi: \"Χ\",\n      Psi: \"Ψ\",\n      Omega: \"Ω\",\n      alpha: \"α\",\n      beta: \"β\",\n      gamma: \"γ\",\n      delta: \"δ\",\n      epsilon: \"ε\",\n      zeta: \"ζ\",\n      eta: \"η\",\n      theta: \"θ\",\n      iota: \"ι\",\n      kappa: \"κ\",\n      lambda: \"λ\",\n      mu: \"μ\",\n      nu: \"ν\",\n      xi: \"ξ\",\n      omicron: \"ο\",\n      pi: \"π\",\n      rho: \"ρ\",\n      sigmaf: \"ς\",\n      sigma: \"σ\",\n      tau: \"τ\",\n      upsilon: \"υ\",\n      phi: \"φ\",\n      chi: \"χ\",\n      psi: \"ψ\",\n      omega: \"ω\",\n      thetasym: \"ϑ\",\n      upsih: \"ϒ\",\n      piv: \"ϖ\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      Yuml: \"Ÿ\",\n      fnof: \"ƒ\",\n      circ: \"ˆ\",\n      tilde: \"˜\",\n      ensp: \" \",\n      emsp: \" \",\n      thinsp: \" \",\n      zwnj: \"‌\",\n      zwj: \"‍\",\n      lrm: \"‎\",\n      rlm: \"‏\",\n      ndash: \"–\",\n      mdash: \"—\",\n      lsquo: \"‘\",\n      rsquo: \"’\",\n      sbquo: \"‚\",\n      ldquo: \"“\",\n      rdquo: \"”\",\n      bdquo: \"„\",\n      dagger: \"†\",\n      Dagger: \"‡\",\n      bull: \"•\",\n      hellip: \"…\",\n      permil: \"‰\",\n      prime: \"′\",\n      Prime: \"″\",\n      lsaquo: \"‹\",\n      rsaquo: \"›\",\n      oline: \"‾\",\n      euro: \"€\",\n      trade: \"™\",\n      larr: \"←\",\n      uarr: \"↑\",\n      rarr: \"→\",\n      darr: \"↓\",\n      harr: \"↔\",\n      crarr: \"↵\",\n      lceil: \"⌈\",\n      rceil: \"⌉\",\n      lfloor: \"⌊\",\n      rfloor: \"⌋\",\n      loz: \"◊\",\n      spades: \"♠\",\n      clubs: \"♣\",\n      hearts: \"♥\",\n      diams: \"♦\"\n    });\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE; //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$'); //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\n  var S_TAG = 0; //tag name offerring\n\n  var S_ATTR = 1; //attr name offerring\n\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n\n  var S_EQ = 3; //=space?\n\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n\n  function XMLReader$1() {}\n\n  XMLReader$1.prototype = {\n    parse: function parse(source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n\n      _copy(defaultNSMap, defaultNSMap = {});\n\n      _parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n\n      domBuilder.endDocument();\n    }\n  };\n\n  function _parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n            surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n\n      if (k in entityMap) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++; //console.log('line++:',locator,startPos,endPos)\n      }\n\n      locator.columnNumber = p - lineStart + 1;\n    }\n\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n\n          return;\n        }\n\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n\n            end++;\n            break;\n          // end elment\n\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap; //elStartEnd\n\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {}); //try{//attribute position fixed\n\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n\n              domBuilder.locator = locator2;\n\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n\n\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n\n      el.addValue(qname, value, startIndex);\n    }\n\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n\n    while (true) {\n      var c = source.charAt(p);\n\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n\n          break;\n\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n              //equal\n              if (s === S_ATTR) {\n                errorHandler.warning('attribute value must after \"=\"');\n                attrName = source.slice(start, p);\n              }\n\n              start = p + 1;\n              p = source.indexOf(c, start);\n\n              if (p > 0) {\n                value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                addAttribute(attrName, value, start - 1);\n                s = S_ATTR_END;\n              } else {\n                //fatalError: no end quot match\n                throw new Error('attribute value no end \\'' + c + '\\' match');\n              }\n            } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer); //console.log(attrName,value,start,p)\n\n            addAttribute(attrName, value, start); //console.dir(el)\n\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n\n          break;\n\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n            case S_ATTR_SPACE:\n              break;\n            //case S_EQ:\n\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n\n          break;\n\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n\n          return p;\n\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n\n            case S_ATTR:\n              value = source.slice(start, p);\n\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value.replace(/&#?\\w+;/g, entityReplacer), start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n\n                addAttribute(value, value, start);\n              }\n\n              break;\n\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          } //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\n\n          return p;\n\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n\n        case \"\\x80\":\n          c = ' ';\n\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n\n                s = S_TAG_SPACE;\n                break;\n\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n\n      } //end outer switch\n      //console.log('p++',p)\n\n\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n\n\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null; //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\n    var i = el.length;\n\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      } //can not set prefix,because prefix !== ''\n\n\n      a.localName = localName; //prefix == null for no ns prefix attribute\n\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {}; //console.log(currentNSMap,0)\n\n          _copy(currentNSMap, currentNSMap = {}); //console.log(currentNSMap,1)\n\n        }\n\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n\n    var i = el.length;\n\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || '']; //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n\n    var nsp = tagName.indexOf(':');\n\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n\n      localName = el.localName = tagName;\n    } //no prefix element has default namespace\n\n\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el); //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap; //parseStack.push(el);\n\n      return true;\n    }\n  }\n\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length); //lexHandler.endCDATA();\n\n          return elEndStart; //}\n        } //}else{//text area\n\n\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart; //}\n      }\n    }\n\n    return elStartEnd + 1;\n  }\n\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n\n      closeMap[tagName] = pos;\n    }\n\n    return pos < elStartEnd; //}\n  }\n\n  function _copy(source, target) {\n    for (var n in source) {\n      target[n] = source[n];\n    }\n  }\n\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4); //append comment source.substring(4,end)//<!--\n\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        } //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\n\n        var matchs = split(source, start);\n        var len = matchs.length;\n\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n\n    }\n\n    return -1;\n  }\n\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n\n    return -1;\n  }\n\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n\n  ElementAttributes.prototype = {\n    setTagName: function setTagName(tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n\n      this.tagName = tagName;\n    },\n    addValue: function addValue(qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function getLocalName(i) {\n      return this[i].localName;\n    },\n    getLocator: function getLocator(i) {\n      return this[i].locator;\n    },\n    getQName: function getQName(i) {\n      return this[i].qName;\n    },\n    getURI: function getURI(i) {\n      return this[i].uri;\n    },\n    getValue: function getValue(i) {\n      return this[i].value;\n    } //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n\n  };\n\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\n    if (source && typeof source === 'string') {\n      sax.parse(source, defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error(\"invalid doc source\");\n    }\n\n    return domBuilder.doc;\n  };\n\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n\n      errorImpl = domBuilder;\n    }\n\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n\n    function build(key) {\n      var fn = errorImpl[key];\n\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  } //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n\n\n  function DOMHandler() {\n    this.cdata = false;\n  }\n\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n\n\n  DOMHandler.prototype = {\n    startDocument: function startDocument() {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function startElement(namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function endElement(namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function startPrefixMapping(prefix, uri) {},\n    endPrefixMapping: function endPrefixMapping(prefix) {},\n    processingInstruction: function processingInstruction(target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function ignorableWhitespace(ch, start, length) {},\n    characters: function characters(chars, start, length) {\n      chars = _toString.apply(this, arguments); //console.log(chars)\n\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode); //process xml\n        }\n\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function skippedEntity(name) {},\n    endDocument: function endDocument() {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function setDocumentLocator(locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function comment(chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function startCDATA() {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function endCDATA() {\n      this.cdata = false;\n    },\n    startDTD: function startDTD(name, publicId, systemId) {\n      var impl = this.doc.implementation;\n\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function warning(error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function error(_error) {\n      console.error('[xmldom error]\\t' + _error, _locator(this.locator));\n    },\n    fatalError: function fatalError(error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n\n      return chars;\n    }\n  }\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n\n\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n\n  var __DOMHandler = DOMHandler;\n  var DOMParser_1 = DOMParser$1;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var DOMImplementation_1 = dom.DOMImplementation;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var XMLSerializer = dom.XMLSerializer;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    DOMParser: DOMParser_1,\n    DOMImplementation: DOMImplementation_1,\n    XMLSerializer: XMLSerializer\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 0.19.2 @license Apache-2.0 */\n\n  var isObject = function isObject(obj) {\n    return !!obj && typeof obj === 'object';\n  };\n\n  var merge = function merge() {\n    for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n      objects[_key] = arguments[_key];\n    }\n\n    return objects.reduce(function (result, source) {\n      if (typeof source !== 'object') {\n        return result;\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n\n  var values = function values(o) {\n    return Object.keys(o).map(function (k) {\n      return o[k];\n    });\n  };\n\n  var range = function range(start, end) {\n    var result = [];\n\n    for (var i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  var flatten = function flatten(lists) {\n    return lists.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n  };\n\n  var from = function from(list) {\n    if (!list.length) {\n      return [];\n    }\n\n    var result = [];\n\n    for (var i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n\n    return result;\n  };\n\n  var findIndexes = function findIndexes(l, key) {\n    return l.reduce(function (a, e, i) {\n      if (e[key]) {\n        a.push(i);\n      }\n\n      return a;\n    }, []);\n  };\n\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  var urlTypeToSegment = function urlTypeToSegment(_ref) {\n    var _ref$baseUrl = _ref.baseUrl,\n        baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n        _ref$source = _ref.source,\n        source = _ref$source === void 0 ? '' : _ref$source,\n        _ref$range = _ref.range,\n        range = _ref$range === void 0 ? '' : _ref$range,\n        _ref$indexRange = _ref.indexRange,\n        indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n    var segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n\n    if (range || indexRange) {\n      var rangeStr = range ? range : indexRange;\n      var ranges = rangeStr.split('-');\n      var startRange = parseInt(ranges[0], 10);\n      var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n      segment.byterange = {\n        length: endRange - startRange + 1,\n        offset: startRange\n      };\n    }\n\n    return segment;\n  };\n\n  var byteRangeToString = function byteRangeToString(byterange) {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var endRange = byterange.offset + byterange.length - 1;\n    return byterange.offset + \"-\" + endRange;\n  };\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n\n  var parseEndNumber = function parseEndNumber(endNumber) {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n\n    if (isNaN(endNumber)) {\n      return null;\n    }\n\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n\n  var segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    \"static\": function _static(attributes) {\n      var duration = attributes.duration,\n          _attributes$timescale = attributes.timescale,\n          timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n          sourceDuration = attributes.sourceDuration,\n          periodDuration = attributes.periodDuration;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var segmentDuration = duration / timescale;\n\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic: function dynamic(attributes) {\n      var NOW = attributes.NOW,\n          clientOffset = attributes.clientOffset,\n          availabilityStartTime = attributes.availabilityStartTime,\n          _attributes$timescale2 = attributes.timescale,\n          timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n          duration = attributes.duration,\n          _attributes$start = attributes.start,\n          start = _attributes$start === void 0 ? 0 : _attributes$start,\n          _attributes$minimumUp = attributes.minimumUpdatePeriod,\n          minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n          _attributes$timeShift = attributes.timeShiftBufferDepth,\n          timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var now = (NOW + clientOffset) / 1000;\n      var periodStartWC = availabilityStartTime + start;\n      var periodEndWC = now + minimumUpdatePeriod;\n      var periodDuration = periodEndWC - periodStartWC;\n      var segmentCount = Math.ceil(periodDuration * timescale / duration);\n      var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  var toSegments = function toSegments(attributes) {\n    return function (number, index) {\n      var duration = attributes.duration,\n          _attributes$timescale3 = attributes.timescale,\n          timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n          periodIndex = attributes.periodIndex,\n          _attributes$startNumb = attributes.startNumber,\n          startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n      return {\n        number: startNumber + number,\n        duration: duration / timescale,\n        timeline: periodIndex,\n        time: index * duration\n      };\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByDuration = function parseByDuration(attributes) {\n    var type = attributes.type,\n        duration = attributes.duration,\n        _attributes$timescale4 = attributes.timescale,\n        timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n        periodDuration = attributes.periodDuration,\n        sourceDuration = attributes.sourceDuration;\n\n    var _segmentRange$type = segmentRange[type](attributes),\n        start = _segmentRange$type.start,\n        end = _segmentRange$type.end;\n\n    var segments = range(start, end).map(toSegments(attributes));\n\n    if (type === 'static') {\n      var index = segments.length - 1; // section is either a period or the full source\n\n      var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n\n    return segments;\n  };\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromBase = function segmentsFromBase(attributes) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$indexRang = attributes.indexRange,\n        indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n        duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: baseUrl,\n      indexRange: indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      var segmentTimeInfo = parseByDuration(attributes);\n\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = 0;\n    } // This is used for mediaSequence\n\n\n    segment.number = 0;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n\n  var addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n    // Retain init segment information\n    var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    var timeline = playlist.timeline || 0;\n    var sidxByteRange = playlist.sidx.byterange;\n    var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    var mediaReferences = sidx.references.filter(function (r) {\n      return r.referenceType !== 1;\n    });\n    var segments = [];\n    var type = playlist.endList ? 'static' : 'dynamic'; // firstOffset is the offset from the end of the sidx box\n\n    var startIndex = sidxEnd + sidx.firstOffset;\n\n    for (var i = 0; i < mediaReferences.length; i++) {\n      var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      var duration = reference.subsegmentDuration; // should be an inclusive range\n\n      var endIndex = startIndex + size - 1;\n      var indexRange = startIndex + \"-\" + endIndex;\n      var attributes = {\n        baseUrl: baseUrl,\n        timescale: timescale,\n        timeline: timeline,\n        // this is used in parseByDuration\n        periodIndex: timeline,\n        duration: duration,\n        sourceDuration: sourceDuration,\n        indexRange: indexRange,\n        type: type\n      };\n      var segment = segmentsFromBase(attributes)[0];\n\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n\n      segments.push(segment);\n      startIndex += size;\n    }\n\n    playlist.segments = segments;\n    return playlist;\n  };\n\n  var generateSidxKey = function generateSidxKey(sidx) {\n    return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  };\n\n  var mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n    var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n      if (acc[name]) {\n        var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      } else {\n        // first Period\n        acc[name] = playlist;\n      }\n\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(function (playlist) {\n      playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n      return playlist;\n    });\n  };\n\n  var addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist$1(playlist, sidxMapping) {\n    var sidxKey = generateSidxKey(playlist.sidx);\n    var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n\n    return playlist;\n  };\n\n  var addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n\n    for (var i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist$1(playlists[i], sidxMapping);\n    }\n\n    return playlists;\n  };\n\n  var formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n    var _attributes;\n\n    var attributes = _ref.attributes,\n        segments = _ref.segments,\n        sidx = _ref.sidx;\n    var playlist = {\n      attributes: (_attributes = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs\n      }, _attributes['PROGRAM-ID'] = 1, _attributes),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n\n    return playlist;\n  };\n\n  var formatVttPlaylist = function formatVttPlaylist(_ref2) {\n    var _m3u8Attributes;\n\n    var attributes = _ref2.attributes,\n        segments = _ref2.segments;\n\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodIndex,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n\n    var m3u8Attributes = (_m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n\n    return {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n  };\n\n  var organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (isAudioOnly === void 0) {\n      isAudioOnly = false;\n    }\n\n    var mainPlaylist;\n    var formattedPlaylists = playlists.reduce(function (a, playlist) {\n      var role = playlist.attributes.role && playlist.attributes.role.value || '';\n      var language = playlist.attributes.lang || '';\n      var label = playlist.attributes.label || 'main';\n\n      if (language && !playlist.attributes.label) {\n        var roleLabel = role ? \" (\" + role + \")\" : '';\n        label = \"\" + playlist.attributes.lang + roleLabel;\n      }\n\n      if (!a[label]) {\n        a[label] = {\n          language: language,\n          autoselect: true,\n          \"default\": role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      var formatted = addSidxSegmentsToPlaylist$1(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist[\"default\"] = true;\n      }\n\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      var firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel][\"default\"] = true;\n    }\n\n    return formattedPlaylists;\n  };\n\n  var organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    return playlists.reduce(function (a, playlist) {\n      var label = playlist.attributes.lang || 'text';\n\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          \"default\": false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      a[label].playlists.push(addSidxSegmentsToPlaylist$1(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n\n  var organizeCaptionServices = function organizeCaptionServices(captionServices) {\n    return captionServices.reduce(function (svcObj, svc) {\n      if (!svc) {\n        return svcObj;\n      }\n\n      svc.forEach(function (service) {\n        var channel = service.channel,\n            language = service.language;\n        svcObj[language] = {\n          autoselect: false,\n          \"default\": false,\n          instreamId: channel,\n          language: language\n        };\n\n        if (service.hasOwnProperty('aspectRatio')) {\n          svcObj[language].aspectRatio = service.aspectRatio;\n        }\n\n        if (service.hasOwnProperty('easyReader')) {\n          svcObj[language].easyReader = service.easyReader;\n        }\n\n        if (service.hasOwnProperty('3D')) {\n          svcObj[language]['3D'] = service['3D'];\n        }\n      });\n      return svcObj;\n    }, {});\n  };\n\n  var formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n    var _attributes2;\n\n    var attributes = _ref3.attributes,\n        segments = _ref3.segments,\n        sidx = _ref3.sidx;\n    var playlist = {\n      attributes: (_attributes2 = {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodIndex,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      segments: segments,\n      mediaSequence: segments.length ? segments[0].number : 1\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    return playlist;\n  };\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var toM3u8 = function toM3u8(dashPlaylists, locations, sidxMapping) {\n    var _mediaGroups;\n\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n\n    var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n        duration = _dashPlaylists$0$attr.sourceDuration,\n        type = _dashPlaylists$0$attr.type,\n        suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n        minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n    var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    var vttPlaylists = dashPlaylists.filter(vttOnly);\n    var captions = dashPlaylists.map(function (playlist) {\n      return playlist.attributes.captionServices;\n    }).filter(Boolean);\n    var manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: (_mediaGroups = {\n        AUDIO: {},\n        VIDEO: {}\n      }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n      uri: '',\n      duration: duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n\n    if (locations) {\n      manifest.locations = locations;\n    }\n\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n\n    var isAudioOnly = manifest.playlists.length === 0;\n\n    if (audioPlaylists.length) {\n      manifest.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly);\n    }\n\n    if (vttPlaylists.length) {\n      manifest.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n    }\n\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n\n    return manifest;\n  };\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n\n\n  var getLiveRValue = function getLiveRValue(attributes, time, duration) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n    var type = attributes.type,\n        _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n        _attributes$media = attributes.media,\n        media = _attributes$media === void 0 ? '' : _attributes$media,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n        timeline = attributes.periodIndex;\n    var segments = [];\n    var time = -1;\n\n    for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      var S = segmentTimeline[sIndex];\n      var duration = S.d;\n      var repeat = S.r || 0;\n      var segmentTime = S.t || 0;\n\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n\n      var count = void 0;\n\n      if (repeat < 0) {\n        var nextS = sIndex + 1;\n\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n\n      var end = startNumber + segments.length + count;\n      var number = startNumber + segments.length;\n\n      while (number < end) {\n        segments.push({\n          number: number,\n          duration: duration / timescale,\n          time: time,\n          timeline: timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n\n    return segments;\n  };\n\n  var identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  var identifierReplacement = function identifierReplacement(values) {\n    return function (match, identifier, format, width) {\n      if (match === '$$') {\n        // escape sequence\n        return '$';\n      }\n\n      if (typeof values[identifier] === 'undefined') {\n        return match;\n      }\n\n      var value = '' + values[identifier];\n\n      if (identifier === 'RepresentationID') {\n        // Format tag shall not be present with RepresentationID\n        return value;\n      }\n\n      if (!format) {\n        width = 1;\n      } else {\n        width = parseInt(width, 10);\n      }\n\n      if (value.length >= width) {\n        return value;\n      }\n\n      return \"\" + new Array(width - value.length + 1).join('0') + value;\n    };\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n\n  var constructTemplateUrl = function constructTemplateUrl(url, values) {\n    return url.replace(identifierPattern, identifierReplacement(values));\n  };\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodIndex\n      }];\n    }\n\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n\n  var segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n    var templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    var _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {\n      sourceURL: '',\n      range: ''\n    } : _attributes$initializ;\n    var mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    var segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(function (segment) {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      var map = {\n        uri: uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime: presentationTime\n      };\n      return map;\n    });\n  };\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n\n  var SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n    var duration = attributes.duration,\n        _attributes$segmentUr = attributes.segmentUrls,\n        segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n        periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n\n    var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n      return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n    });\n    var segmentTimeInfo;\n\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n\n    var segments = segmentTimeInfo.map(function (segmentTime, index) {\n      if (segmentUrlMap[index]) {\n        var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n\n    }).filter(function (segment) {\n      return segment;\n    });\n    return segments;\n  };\n\n  var generateSegments = function generateSegments(_ref) {\n    var attributes = _ref.attributes,\n        segmentInfo = _ref.segmentInfo;\n    var segmentAttributes;\n    var segmentsFn;\n\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge(attributes, segmentInfo.list);\n    }\n\n    var segmentsInfo = {\n      attributes: attributes\n    };\n\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n\n    var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      var _segmentAttributes = segmentAttributes,\n          duration = _segmentAttributes.duration,\n          _segmentAttributes$ti = _segmentAttributes.timescale,\n          timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce(function (max, segment) {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n\n    return segmentsInfo;\n  };\n\n  var toPlaylists = function toPlaylists(representations) {\n    return representations.map(generateSegments);\n  };\n\n  var findChildren = function findChildren(element, name) {\n    return from(element.childNodes).filter(function (_ref) {\n      var tagName = _ref.tagName;\n      return tagName === name;\n    });\n  };\n\n  var getContent = function getContent(element) {\n    return element.textContent.trim();\n  };\n\n  var parseDuration = function parseDuration(str) {\n    var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    var SECONDS_IN_DAY = 24 * 60 * 60;\n    var SECONDS_IN_HOUR = 60 * 60;\n    var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    var match = durationRegex.exec(str);\n\n    if (!match) {\n      return 0;\n    }\n\n    var _match$slice = match.slice(1),\n        year = _match$slice[0],\n        month = _match$slice[1],\n        day = _match$slice[2],\n        hour = _match$slice[3],\n        minute = _match$slice[4],\n        second = _match$slice[5];\n\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n\n  var parseDate = function parseDate(str) {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n\n    return Date.parse(str);\n  };\n\n  var parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration: function mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime: function availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type: function type(value) {\n      return value;\n    },\n\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start: function start(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width: function width(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height: function height(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth: function bandwidth(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber: function startNumber(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale: function timescale(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset: function presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration: function duration(value) {\n      var parsedValue = parseInt(value, 10);\n\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n\n      return parsedValue;\n    },\n\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d: function d(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t: function t(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r: function r(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT: function DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  var parseAttributes = function parseAttributes(el) {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n\n    return from(el.attributes).reduce(function (a, e) {\n      var parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n\n  var keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  var buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl$1(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n\n  var getSegmentInformation = function getSegmentInformation(adaptationSet) {\n    var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n      return merge({\n        tag: 'SegmentURL'\n      }, parseAttributes(s));\n    });\n    var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    var segmentTimelineParentNode = segmentList || segmentTemplate;\n    var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n\n    var segmentInfo = {\n      template: template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n        return parseAttributes(s);\n      }),\n      list: segmentList && merge(parseAttributes(segmentList), {\n        segmentUrls: segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(function (key) {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n\n  var inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n    return function (representation) {\n      var repBaseUrlElements = findChildren(representation, 'BaseURL');\n      var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n      var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n      var representationSegmentInfo = getSegmentInformation(representation);\n      return repBaseUrls.map(function (baseUrl) {\n        return {\n          segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n          attributes: merge(attributes, {\n            baseUrl: baseUrl\n          })\n        };\n      });\n    };\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n\n  var generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n    return contentProtectionNodes.reduce(function (acc, node) {\n      var attributes = parseAttributes(node);\n      var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes: attributes\n        };\n        var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n        if (psshNode) {\n          var pssh = getContent(psshNode);\n          var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n          acc[keySystem].pssh = psshBuffer;\n        }\n      }\n\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n\n  var parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(function (value) {\n        var channel;\n        var language; // default language to value\n\n        language = value;\n\n        if (/^CC\\d=/.test(value)) {\n          var _value$split = value.split('=');\n\n          channel = _value$split[0];\n          language = _value$split[1];\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n\n        return {\n          channel: channel,\n          language: language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n      return _values.map(function (value) {\n        var flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n\n        if (/=/.test(value)) {\n          var _value$split2 = value.split('='),\n              channel = _value$split2[0],\n              _value$split2$ = _value$split2[1],\n              opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(function (opt) {\n            var _opt$split = opt.split(':'),\n                name = _opt$split[0],\n                val = _opt$split[1];\n\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n\n        return flags;\n      });\n    }\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n\n  var toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n    return function (adaptationSet) {\n      var adaptationSetAttributes = parseAttributes(adaptationSet);\n      var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n      var role = findChildren(adaptationSet, 'Role')[0];\n      var roleAttributes = {\n        role: parseAttributes(role)\n      };\n      var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n      var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n      var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n      if (captionServices) {\n        attrs = merge(attrs, {\n          captionServices: captionServices\n        });\n      }\n\n      var label = findChildren(adaptationSet, 'Label')[0];\n\n      if (label && label.childNodes.length) {\n        var labelVal = label.childNodes[0].nodeValue.trim();\n        attrs = merge(attrs, {\n          label: labelVal\n        });\n      }\n\n      var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n      if (Object.keys(contentProtection).length) {\n        attrs = merge(attrs, {\n          contentProtection: contentProtection\n        });\n      }\n\n      var segmentInfo = getSegmentInformation(adaptationSet);\n      var representations = findChildren(adaptationSet, 'Representation');\n      var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n      return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n    };\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodIndex\n   *        Index of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n\n  var toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n    return function (period, index) {\n      var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n      var parsedPeriodId = parseInt(period.attributes.id, 10); // fallback to mapping index if Period@id is not a number\n\n      var periodIndex = window.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n      var periodAttributes = merge(mpdAttributes, {\n        periodIndex: periodIndex,\n        periodStart: period.attributes.start\n      });\n\n      if (typeof period.attributes.duration === 'number') {\n        periodAttributes.periodDuration = period.attributes.duration;\n      }\n\n      var adaptationSets = findChildren(period.node, 'AdaptationSet');\n      var periodSegmentInfo = getSegmentInformation(period.node);\n      return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n    };\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n\n  var getPeriodStart = function getPeriodStart(_ref) {\n    var attributes = _ref.attributes,\n        priorPeriodAttributes = _ref.priorPeriodAttributes,\n        mpdType = _ref.mpdType; // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n\n  var inheritAttributes = function inheritAttributes(mpd, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$manifestUri = _options.manifestUri,\n        manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n        _options$NOW = _options.NOW,\n        NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n        _options$clientOffset = _options.clientOffset,\n        clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n    var periodNodes = findChildren(mpd, 'Period');\n\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n\n    var locations = findChildren(mpd, 'Location');\n    var mpdAttributes = parseAttributes(mpd);\n    var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n\n    var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach(function (node, index) {\n      var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      var priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes: attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node: node,\n        attributes: attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n    };\n  };\n\n  var stringToMpdXml = function stringToMpdXml(manifestString) {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n\n    var parser = new DOMParser();\n    var xml;\n    var mpd;\n\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throwsw on invalid xml\n    }\n\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n\n    return mpd;\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n    var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n    if (!UTCTimingNode) {\n      return null;\n    }\n\n    var attributes = parseAttributes(UTCTimingNode);\n\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n\n    return attributes;\n  };\n\n  var parse = function parse(manifestString, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8(playlists, parsedManifestInfo.locations, options.sidxMapping);\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTiming = function parseUTCTiming(manifestString) {\n    return parseUTCTimingScheme(stringToMpdXml(manifestString));\n  };\n\n  var MAX_UINT32 = Math.pow(2, 32);\n\n  var parseSidx = function parseSidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8)\n    },\n        i = 12;\n\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = view.getUint32(i) * MAX_UINT32 + view.getUint32(i + 4);\n      result.firstOffset = view.getUint32(i + 8) * MAX_UINT32 + view.getUint32(i + 12);\n      i += 16;\n    }\n\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  };\n\n  var parseSidx_1 = parseSidx;\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return ArrayBuffer.isView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$signed = _ref.signed,\n        signed = _ref$signed === void 0 ? false : _ref$signed,\n        _ref$le = _ref.le,\n        le = _ref$le === void 0 ? false : _ref$le;\n\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, _byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(_byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$le = _ref2.le,\n        le = _ref2$le === void 0 ? false : _ref2$le; // eslint-disable-next-line\n\n\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n\n    var view = new Uint8Array(string.length);\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        _ref3$offset = _ref3.offset,\n        offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n        _ref3$mask = _ref3.mask,\n        mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n\n    if (typeof path === 'number') {\n      return path;\n    }\n\n    return path;\n  };\n\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n\n      var end = i + size;\n\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n\n        end = bytes.length;\n      }\n\n      var data = bytes.subarray(i + 8, end);\n\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of bytes\n\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\n  var getLength = function getLength(_byte) {\n    var len = 1;\n\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (_byte & LENGTH_TABLE[i]) {\n        break;\n      }\n\n      len++;\n    }\n\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n\n    if (signed === void 0) {\n      signed = false;\n    }\n\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n\n    return path;\n  };\n\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n\n    var innerid = getvint(bytes, offset, false);\n\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n\n      newData[i] = bytes[sourceIndex];\n    }\n\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n\n      nalsFound++;\n\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n\n      var nalType = void 0;\n\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 2.12.0 @license Apache-2.0 */\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n\n  var resolveUrl = resolveUrl$2;\n  /**\n   * Checks whether xhr request was redirected and returns correct url depending\n   * on `handleManifestRedirects` option\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  var resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n\n    return url;\n  };\n\n  var logger = function logger(source) {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n    }\n\n    return function () {};\n  };\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n\n  var TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  var SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n  var filterRanges = function filterRanges(timeRanges, predicate) {\n    var results = [];\n    var i;\n\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n\n    return videojs.createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n\n  var findRange = function findRange(buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n\n  var findNextRange = function findNextRange(timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n\n  var findGaps = function findGaps(buffered) {\n    if (buffered.length < 2) {\n      return videojs.createTimeRanges();\n    }\n\n    var ranges = [];\n\n    for (var i = 1; i < buffered.length; i++) {\n      var start = buffered.end(i - 1);\n      var end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n\n  var bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n    var start = null;\n    var end = null;\n    var arity = 0;\n    var extents = [];\n    var ranges = [];\n\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return videojs.createTimeRange();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n\n    var count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n\n    count = bufferB.length;\n\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n\n  var printableRange = function printableRange(range) {\n    var strArr = [];\n\n    if (!range || !range.length) {\n      return '';\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n\n  var timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n    if (playbackRate === void 0) {\n      playbackRate = 1;\n    }\n\n    var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n\n  var timeRangesToArray = function timeRangesToArray(timeRanges) {\n    var timeRangesList = [];\n\n    for (var i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n\n  var isRangeDifferent = function isRangeDifferent(a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n\n    for (var i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n\n    return false;\n  };\n\n  var lastBufferedEnd = function lastBufferedEnd(a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n\n  var timeAheadOf = function timeAheadOf(range, startTime) {\n    var time = 0;\n\n    if (!range || !range.length) {\n      return time;\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      var start = range.start(i);\n      var end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n\n      time += end - start;\n    }\n\n    return time;\n  };\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n\n\n  var createTimeRange = videojs.createTimeRange;\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  var segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n\n    var result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n\n  var getPartsAndSegments = function getPartsAndSegments(playlist) {\n    return (playlist.segments || []).reduce(function (acc, segment, si) {\n      if (segment.parts) {\n        segment.parts.forEach(function (part, pi) {\n          acc.push({\n            duration: part.duration,\n            segmentIndex: si,\n            partIndex: pi,\n            part: part,\n            segment: segment\n          });\n        });\n      } else {\n        acc.push({\n          duration: segment.duration,\n          segmentIndex: si,\n          partIndex: null,\n          segment: segment,\n          part: null\n        });\n      }\n\n      return acc;\n    }, []);\n  };\n\n  var getLastParts = function getLastParts(media) {\n    var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n\n  var getKnownPartCount = function getKnownPartCount(_ref) {\n    var preloadSegment = _ref.preloadSegment;\n\n    if (!preloadSegment) {\n      return;\n    }\n\n    var parts = preloadSegment.parts,\n        preloadHints = preloadSegment.preloadHints;\n    var partCount = (preloadHints || []).reduce(function (count, hint) {\n      return count + (hint.type === 'PART' ? 1 : 0);\n    }, 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} master the master playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n\n  var liveEdgeDelay = function liveEdgeDelay(master, media) {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n\n    if (master && master.suggestedPresentationDelay) {\n      return master.suggestedPresentationDelay;\n    }\n\n    var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var backwardDuration = function backwardDuration(playlist, endSequence) {\n    var result = 0;\n    var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n\n    while (i--) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n\n    return {\n      result: result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var forwardDuration = function forwardDuration(playlist, endSequence) {\n    var result = 0;\n    var segment;\n    var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n\n  var intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n\n    var backward = backwardDuration(playlist, endSequence);\n\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n\n    var forward = forwardDuration(playlist, endSequence);\n\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n\n  var duration = function duration(playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n\n  var sumDurations = function sumDurations(_ref2) {\n    var defaultDuration = _ref2.defaultDuration,\n        durationList = _ref2.durationList,\n        startIndex = _ref2.startIndex,\n        endIndex = _ref2.endIndex;\n    var durations = 0;\n\n    if (startIndex > endIndex) {\n      var _ref3 = [endIndex, startIndex];\n      startIndex = _ref3[0];\n      endIndex = _ref3[1];\n    }\n\n    if (startIndex < 0) {\n      for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n\n      startIndex = 0;\n    }\n\n    for (var _i = startIndex; _i < endIndex; _i++) {\n      durations += durationList[_i].duration;\n    }\n\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n\n  var playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n\n    if (expired === null) {\n      return null;\n    }\n\n    expired = expired || 0;\n    var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n\n  var seekable = function seekable(playlist, expired, liveEdgePadding) {\n    var useSafeLiveEnd = true;\n    var seekableStart = expired || 0;\n    var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n    if (seekableEnd === null) {\n      return createTimeRange();\n    }\n\n    return createTimeRange(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n\n  var getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n    var playlist = _ref4.playlist,\n        currentTime = _ref4.currentTime,\n        startingSegmentIndex = _ref4.startingSegmentIndex,\n        startingPartIndex = _ref4.startingPartIndex,\n        startTime = _ref4.startTime,\n        experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n    var time = currentTime - startTime;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    var startIndex = 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      var partAndSegment = partsAndSegments[i];\n\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n\n      startIndex = i;\n      break;\n    }\n\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n          var _partAndSegment = partsAndSegments[_i2];\n          time += _partAndSegment.duration;\n\n          if (experimentalExactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n\n          return {\n            partIndex: _partAndSegment.partIndex,\n            segmentIndex: _partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex: startIndex,\n              endIndex: _i2\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n\n    if (startIndex < 0) {\n      for (var _i3 = startIndex; _i3 < 0; _i3++) {\n        time -= playlist.targetDuration;\n\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n\n    for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n      var _partAndSegment2 = partsAndSegments[_i4];\n      time -= _partAndSegment2.duration;\n\n      if (experimentalExactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n\n      return {\n        partIndex: _partAndSegment2.partIndex,\n        segmentIndex: _partAndSegment2.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex: startIndex,\n          endIndex: _i4\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is blacklisted or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is blacklisted or not\n   * @function isBlacklisted\n   */\n\n\n  var isBlacklisted = function isBlacklisted(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been blacklisted permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n\n  var isIncompatible = function isIncompatible(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n\n  var isEnabled = function isEnabled(playlist) {\n    var blacklisted = isBlacklisted(playlist);\n    return !playlist.disabled && !blacklisted;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n\n  var isDisabled = function isDisabled(playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n\n  var isAes = function isAes(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n\n  var hasAttribute = function hasAttribute(attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n\n  var estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n    if (bytesReceived === void 0) {\n      bytesReceived = 0;\n    }\n\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n\n    var size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n\n  var isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n    if (master.playlists.length === 1) {\n      return true;\n    }\n\n    var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return master.playlists.filter(function (playlist) {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n\n  var playlistMatch = function playlistMatch(a, b) {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var someAudioVariant = function someAudioVariant(master, callback) {\n    var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n    var found = false;\n\n    for (var groupName in AUDIO) {\n      for (var label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n\n        if (found) {\n          break;\n        }\n      }\n\n      if (found) {\n        break;\n      }\n    }\n\n    return !!found;\n  };\n\n  var isAudioOnly = function isAudioOnly(master) {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!master || !master.playlists || !master.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only master.\n      var found = someAudioVariant(master, function (variant) {\n        return variant.playlists && variant.playlists.length || variant.uri;\n      });\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n\n    var _loop = function _loop(i) {\n      var playlist = master.playlists[i];\n      var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(function (c) {\n        return isAudioCodec(c);\n      })) {\n        return \"continue\";\n      } // playlist is in an audio group it is audio only\n\n\n      var found = someAudioVariant(master, function (variant) {\n        return playlistMatch(playlist, variant);\n      });\n\n      if (found) {\n        return \"continue\";\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n\n      return {\n        v: false\n      };\n    };\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n\n    return true;\n  }; // exports\n\n\n  var Playlist = {\n    liveEdgeDelay: liveEdgeDelay,\n    duration: duration,\n    seekable: seekable,\n    getMediaInfoForTime: getMediaInfoForTime,\n    isEnabled: isEnabled,\n    isDisabled: isDisabled,\n    isBlacklisted: isBlacklisted,\n    isIncompatible: isIncompatible,\n    playlistEnd: playlistEnd,\n    isAes: isAes,\n    hasAttribute: hasAttribute,\n    estimateSegmentRequestTime: estimateSegmentRequestTime,\n    isLowestEnabledRendition: isLowestEnabledRendition,\n    isAudioOnly: isAudioOnly,\n    playlistMatch: playlistMatch,\n    segmentDurationWithParts: segmentDurationWithParts\n  };\n  var log = videojs.log;\n\n  var createPlaylistID = function createPlaylistID(index, uri) {\n    return index + \"-\" + uri;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [experimentalLLHLS=false]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n\n  var parseManifest = function parseManifest(_ref) {\n    var onwarn = _ref.onwarn,\n        oninfo = _ref.oninfo,\n        manifestString = _ref.manifestString,\n        _ref$customTagParsers = _ref.customTagParsers,\n        customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n        _ref$customTagMappers = _ref.customTagMappers,\n        customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n        experimentalLLHLS = _ref.experimentalLLHLS;\n    var parser = new Parser();\n\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n\n    customTagParsers.forEach(function (customParser) {\n      return parser.addParser(customParser);\n    });\n    customTagMappers.forEach(function (mapper) {\n      return parser.addTagMapper(mapper);\n    });\n    parser.push(manifestString);\n    parser.end();\n    var manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!experimentalLLHLS) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n\n    if (!manifest.targetDuration) {\n      var targetDuration = 10;\n\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce(function (acc, s) {\n          return Math.max(acc, s.duration);\n        }, 0);\n      }\n\n      if (onwarn) {\n        onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n      }\n\n      manifest.targetDuration = targetDuration;\n    }\n\n    var parts = getLastParts(manifest);\n\n    if (parts.length && !manifest.partTargetDuration) {\n      var partTargetDuration = parts.reduce(function (acc, p) {\n        return Math.max(acc, p.duration);\n      }, 0);\n\n      if (onwarn) {\n        onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n\n      manifest.partTargetDuration = partTargetDuration;\n    }\n\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n\n  var forEachMediaGroup = function forEachMediaGroup(master, callback) {\n    if (!master.mediaGroups) {\n      return;\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n      if (!master.mediaGroups[mediaType]) {\n        return;\n      }\n\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a master\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n\n  var setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        uri = _ref2.uri,\n        id = _ref2.id;\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS master playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var setupMediaPlaylists = function setupMediaPlaylists(master) {\n    var i = master.playlists.length;\n\n    while (i--) {\n      var playlist = master.playlists[i];\n      setupMediaPlaylist({\n        playlist: playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n      master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n    forEachMediaGroup(master, function (properties) {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a master playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         Master playlist\n   */\n\n\n  var masterForMedia = function masterForMedia(media, uri) {\n    var id = createPlaylistID(0, uri);\n    var master = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri: uri,\n        id: id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n    master.playlists[uri] = master.playlists[0];\n    return master;\n  };\n  /**\n   * Does an in-place update of the master manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} master\n   *        Master manifest object\n   * @param {string} uri\n   *        The source URI\n   */\n\n\n  var addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n    master.uri = uri;\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      if (!master.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        var phonyUri = \"placeholder-uri-\" + i;\n        master.playlists[i].uri = phonyUri;\n      }\n    }\n\n    var audioOnlyMaster = isAudioOnly(master);\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n          for (var _i = 0; _i < master.playlists.length; _i++) {\n            var p = master.playlists[_i];\n\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n\n        properties.playlists = [_extends_1({}, properties)];\n      }\n\n      properties.playlists.forEach(function (p, i) {\n        var id = createPlaylistID(i, groupId);\n\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        master.playlists[p.id] = p;\n        master.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n  };\n\n  var mergeOptions$2 = videojs.mergeOptions,\n      EventTarget$1 = videojs.EventTarget;\n\n  var addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n\n    var parameters = {};\n\n    if (media.serverControl.canBlockReload) {\n      var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n      var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n\n      parameters._HLS_msn = nextMSN;\n    }\n\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n\n    if (Object.keys(parameters).length) {\n      var parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n\n  var updateSegment = function updateSegment(a, b) {\n    if (!a) {\n      return b;\n    }\n\n    var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (var i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n\n  var updateSegments = function updateSegments(original, update, offset) {\n    var oldSegments = original.slice();\n    var newSegments = update.slice();\n    offset = offset || 0;\n    var result = [];\n    var currentMap;\n\n    for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      var oldSegment = oldSegments[newIndex + offset];\n      var newSegment = newSegments[newIndex];\n\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n\n        result.push(newSegment);\n      }\n    }\n\n    return result;\n  };\n\n  var resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n\n  var getAllSegments = function getAllSegments(media) {\n    var segments = media.segments || [];\n    var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n\n  var isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n    return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  };\n  /**\n    * Returns a new master playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original master playlist, null is returned.\n    *\n    * @param {Object} master a parsed master M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * master playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n\n  var updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n    if (unchangedCheck === void 0) {\n      unchangedCheck = isPlaylistUnchanged;\n    }\n\n    var result = mergeOptions$2(master, {});\n    var oldMedia = result.playlists[newMedia.id];\n\n    if (!oldMedia) {\n      return null;\n    }\n\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n\n    newMedia.segments = getAllSegments(newMedia);\n    var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n\n    mergedPlaylist.segments.forEach(function (segment) {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (var _i = 0; _i < result.playlists.length; _i++) {\n      if (result.playlists[_i].id === newMedia.id) {\n        result.playlists[_i] = mergedPlaylist;\n      }\n    }\n\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (!properties.playlists) {\n        return;\n      }\n\n      for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n        if (newMedia.id === properties.playlists[_i2].id) {\n          properties.playlists[_i2] = newMedia;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n\n  var refreshDelay = function refreshDelay(media, update) {\n    var segments = media.segments || [];\n    var lastSegment = segments[segments.length - 1];\n    var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n\n  var PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(PlaylistLoader, _EventTarget);\n\n    function PlaylistLoader(src, vhs, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n\n      _this.logger_ = logger('PlaylistLoader');\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.src = src;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n      var vhsOptions = vhs.options_;\n      _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n      if (videojs.browser.IE_VERSION) {\n        _this.experimentalLLHLS = false;\n      } // initialize the loader state\n\n\n      _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(assertThisInitialized(_this));\n\n      _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n      return _this;\n    }\n\n    var _proto = PlaylistLoader.prototype;\n\n    _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n      var _this2 = this;\n\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      var media = this.media();\n      var uri = resolveUrl(this.master.uri, media.uri);\n\n      if (this.experimentalLLHLS) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri: uri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata({\n          playlistString: _this2.request.responseText,\n          url: _this2.media().uri,\n          id: _this2.media().id\n        });\n      });\n    };\n\n    _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: \"HLS playlist request error at URL: \" + uri + \".\",\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    };\n\n    _proto.parseManifest_ = function parseManifest_(_ref) {\n      var _this3 = this;\n\n      var url = _ref.url,\n          manifestString = _ref.manifestString;\n      return parseManifest({\n        onwarn: function onwarn(_ref2) {\n          var message = _ref2.message;\n          return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n        },\n        oninfo: function oninfo(_ref3) {\n          var message = _ref3.message;\n          return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n        },\n        manifestString: manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        experimentalLLHLS: this.experimentalLLHLS\n      });\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n    ;\n\n    _proto.haveMetadata = function haveMetadata(_ref4) {\n      var playlistString = _ref4.playlistString,\n          playlistObject = _ref4.playlistObject,\n          url = _ref4.url,\n          id = _ref4.id; // any in-flight request is now finished\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var playlist = playlistObject || this.parseManifest_({\n        url: url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist: playlist,\n        uri: url,\n        id: id\n      }); // merge this playlist into the master\n\n      var update = updateMaster$1(this.master, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n    ;\n\n    _proto.media = function media(playlist, shouldDelay) {\n      var _this4 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window.clearTimeout(this.finalRenditionTimeout);\n\n      if (shouldDelay) {\n        var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n\n          if (startingState === 'HAVE_MASTER') {\n            // The initial playlist was a master manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.pendingMedia_ = playlist;\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this4.playlistRequestError(_this4.request, playlist, startingState);\n        }\n\n        _this4.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this4.trigger('loadedmetadata');\n        } else {\n          _this4.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      this.stopRequest();\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.load = function load(shouldDelay) {\n      var _this5 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      var media = this.media();\n\n      if (shouldDelay) {\n        var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          _this5.mediaUpdateTimeout = null;\n\n          _this5.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n      var _this6 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        _this6.mediaUpdateTimeout = null;\n\n        _this6.trigger('mediaupdatetimeout');\n\n        _this6.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.start = function start() {\n      var _this7 = this;\n\n      this.started = true;\n\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a master playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(function () {\n          _this7.setupInitialPlaylist(_this7.src);\n        }, 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this7.request = null;\n\n        if (error) {\n          _this7.error = {\n            status: req.status,\n            message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this7.state === 'HAVE_NOTHING') {\n            _this7.started = false;\n          }\n\n          return _this7.trigger('error');\n        }\n\n        _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n        var manifest = _this7.parseManifest_({\n          manifestString: req.responseText,\n          url: _this7.src\n        });\n\n        _this7.setupInitialPlaylist(manifest);\n      });\n    };\n\n    _proto.srcUri = function srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a master or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a master playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a master playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n    ;\n\n    _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MASTER';\n\n      if (manifest.playlists) {\n        this.master = manifest;\n        addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(function (playlist) {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(function (segment) {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.master.playlists[0]);\n        }\n\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n\n      var uri = this.srcUri() || window.location.href;\n      this.master = masterForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.master.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    };\n\n    return PlaylistLoader;\n  }(EventTarget$1);\n  /**\n   * @file xhr.js\n   */\n\n\n  var videojsXHR = videojs.xhr,\n      mergeOptions$1 = videojs.mergeOptions;\n\n  var callbackWrapper = function callbackWrapper(request, error, response, callback) {\n    var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n\n    callback(error, request);\n  };\n\n  var xhrFactory = function xhrFactory() {\n    var xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = mergeOptions$1({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        var newOptions = beforeRequest(options);\n\n        if (newOptions) {\n          options = newOptions;\n        }\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n      var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n      var request = xhrMethod(options, function (error, response) {\n        return callbackWrapper(request, error, response, callback);\n      });\n      var originalAbort = request.abort;\n\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n\n  var byterangeStr = function byterangeStr(byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var byterangeEnd = byterange.offset + byterange.length - 1;\n    var byterangeStart = byterange.offset;\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n\n  var segmentXhrHeaders = function segmentXhrHeaders(segment) {\n    var headers = {};\n\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n\n    return headers;\n  };\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n\n  var textRange = function textRange(range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n\n  var formatHexString = function formatHexString(e, i) {\n    var value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n\n  var formatAsciiString = function formatAsciiString(e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (ArrayBuffer.isView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n\n  var initSegmentId = function initSegmentId(initSegment) {\n    var byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n\n  var segmentKeyId = function segmentKeyId(key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n\n  var hexDump = function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex;\n    var ascii;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n\n    return result;\n  };\n\n  var tagDump = function tagDump(_ref) {\n    var bytes = _ref.bytes;\n    return hexDump(bytes);\n  };\n\n  var textRanges = function textRanges(ranges) {\n    var result = '';\n    var i;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n\n    return result;\n  };\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  }); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  var SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  var playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n\n    var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    var offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n\n  var originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    var dateTimeObject;\n\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segment = playlist.segments[0];\n\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n\n    for (var i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n    var lastSegmentStart = lastSegment.dateTimeObject;\n    var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segmentEnd = 0;\n    var segment;\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n\n  var getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n    var segmentDateTime;\n    var programDateTime;\n\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n\n    var segmentTimeEpoch = segmentDateTime.getTime();\n    var programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n\n  var verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      var segment = playlist.segments[i];\n\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n\n  var getProgramTime = function getProgramTime(_ref) {\n    var playlist = _ref.playlist,\n        _ref$time = _ref.time,\n        time = _ref$time === void 0 ? undefined : _ref$time,\n        callback = _ref.callback;\n\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n\n    var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n\n    var programTimeObject = {\n      mediaSeconds: time\n    };\n    var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n\n  var seekToProgramTime = function seekToProgramTime(_ref2) {\n    var programTime = _ref2.programTime,\n        playlist = _ref2.playlist,\n        _ref2$retryCount = _ref2.retryCount,\n        retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n        seekTo = _ref2.seekTo,\n        _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n        pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n        tech = _ref2.tech,\n        callback = _ref2.callback;\n\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n\n    var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: programTime + \" was not found in the stream\"\n      });\n    }\n\n    var segment = matchedSegment.segment;\n    var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: programTime + \" is not buffered yet. Try again\"\n        });\n      }\n\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', function () {\n        seekToProgramTime({\n          programTime: programTime,\n          playlist: playlist,\n          retryCount: retryCount - 1,\n          seekTo: seekTo,\n          pauseAfterSeek: pauseAfterSeek,\n          tech: tech,\n          callback: callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n\n    var seekToTime = segment.start + mediaOffset;\n\n    var seekedCallback = function seekedCallback() {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n\n    seekTo(seekToTime);\n  }; // which will only happen if the request is complete.\n\n\n  var callbackOnCompleted = function callbackOnCompleted(request, cb) {\n    if (request.readyState === 4) {\n      return cb();\n    }\n\n    return;\n  };\n\n  var containerRequest = function containerRequest(uri, xhr, cb) {\n    var bytes = [];\n    var id3Offset;\n    var finished = false;\n\n    var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n\n    var progressListener = function progressListener(error, request) {\n      if (finished) {\n        return;\n      }\n\n      if (error) {\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n\n      var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n\n    var options = {\n      uri: uri,\n      beforeSend: function beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function (_ref) {\n          _ref.total;\n          _ref.loaded;\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    var request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n\n  var EventTarget = videojs.EventTarget,\n      mergeOptions = videojs.mergeOptions;\n\n  var dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n\n    for (var i = 0; i < a.segments.length; i++) {\n      var aSegment = a.segments[i];\n      var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n\n      var aByterange = aSegment.byterange;\n      var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n\n    return true;\n  };\n  /**\n   * Parses the master XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.masterXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  var parseMasterXml = function parseMasterXml(_ref) {\n    var masterXml = _ref.masterXml,\n        srcUrl = _ref.srcUrl,\n        clientOffset = _ref.clientOffset,\n        sidxMapping = _ref.sidxMapping;\n    var master = parse(masterXml, {\n      manifestUri: srcUrl,\n      clientOffset: clientOffset,\n      sidxMapping: sidxMapping\n    });\n    addPropertiesToMaster(master, srcUrl);\n    return master;\n  };\n  /**\n   * Returns a new master manifest that is the result of merging an updated master manifest\n   * into the original version.\n   *\n   * @param {Object} oldMaster\n   *        The old parsed mpd object\n   * @param {Object} newMaster\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original master manifest with the updated media\n   *         playlists merged in\n   */\n\n\n  var updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n    var noChanges = true;\n    var update = mergeOptions(oldMaster, {\n      // These are top level properties that can be updated\n      duration: newMaster.duration,\n      minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n    }); // First update the playlists in playlist list\n\n    for (var i = 0; i < newMaster.playlists.length; i++) {\n      var playlist = newMaster.playlists[i];\n\n      if (playlist.sidx) {\n        var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n\n      var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n\n    forEachMediaGroup(newMaster, function (properties, type, group, label) {\n      if (properties.playlists && properties.playlists.length) {\n        var id = properties.playlists[0].id;\n\n        var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n        if (_playlistUpdate) {\n          update = _playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    });\n\n    if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n\n    if (noChanges) {\n      return null;\n    }\n\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n\n  var equivalentSidx = function equivalentSidx(a, b) {\n    var neitherMap = Boolean(!a.map && !b.map);\n    var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n\n  var compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n    var newSidxMapping = {};\n\n    for (var id in playlists) {\n      var playlist = playlists[id];\n      var currentSidxInfo = playlist.sidx;\n\n      if (currentSidxInfo) {\n        var key = generateSidxKey(currentSidxInfo);\n\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n\n        var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} master the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n\n  var filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n    var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n    var mediaGroupSidx = videoSidx;\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var playlists = properties.playlists;\n        mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n\n  var DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n\n\n    function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.masterPlaylistLoader_ = masterPlaylistLoader || assertThisInitialized(_this);\n\n      if (!masterPlaylistLoader) {\n        _this.isMaster_ = true;\n      }\n\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n\n      _this.on('minimumUpdatePeriod', function () {\n        _this.refreshXml_();\n      }); // live playlist staleness timeout\n\n\n      _this.on('mediaupdatetimeout', function () {\n        _this.refreshMedia_(_this.media().id);\n      });\n\n      _this.state = 'HAVE_NOTHING';\n      _this.loadedPlaylists_ = {};\n      _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The masterPlaylistLoader will be created with a string\n\n      if (_this.isMaster_) {\n        _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        _this.masterPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        _this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n\n      return _this;\n    }\n\n    var _proto = DashPlaylistLoader.prototype;\n\n    _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n\n      this.request = null;\n\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (startingState) {\n          this.state = startingState;\n        }\n\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n    ;\n\n    _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n      var _this2 = this;\n\n      var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(function () {\n          return cb(false);\n        }, 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n\n      var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n      var fin = function fin(err, request) {\n        if (_this2.requestErrored_(err, request, startingState)) {\n          return;\n        }\n\n        var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n        var sidx;\n\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          // sidx parsing failed.\n          _this2.requestErrored_(e, request, startingState);\n\n          return;\n        }\n\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx: sidx\n        };\n        addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n\n      this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n        if (err) {\n          return fin(err, request);\n        }\n\n        if (!container || container !== 'mp4') {\n          return fin({\n            status: request.status,\n            message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist: playlist,\n            internal: true,\n            blacklistDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n\n        var _playlist$sidx$bytera = playlist.sidx.byterange,\n            offset = _playlist$sidx$bytera.offset,\n            length = _playlist$sidx$bytera.length;\n\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n\n        _this2.request = _this2.vhs_.xhr({\n          uri: uri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.off();\n    };\n\n    _proto.hasPendingRequest = function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    };\n\n    _proto.media = function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n        // everything is ready just continue to haveMetadata\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: playlist\n        });\n      });\n    };\n\n    _proto.haveMetadata = function haveMetadata(_ref2) {\n      var startingState = _ref2.startingState,\n          playlist = _ref2.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    };\n\n    _proto.pause = function pause() {\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n\n      if (this.isMaster_) {\n        window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    };\n\n    _proto.load = function load(isFinalRendition) {\n      var _this4 = this;\n\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        // Check to see if this is the master loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the master manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.start = function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMaster_) {\n        this.mediaRequest_ = window.setTimeout(function () {\n          return _this5.haveMaster_();\n        }, 0);\n        return;\n      }\n\n      this.requestMaster_(function (req, masterChanged) {\n        _this5.haveMaster_();\n\n        if (!_this5.hasPendingRequest() && !_this5.media_) {\n          _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n        }\n      });\n    };\n\n    _proto.requestMaster_ = function requestMaster_(cb) {\n      var _this6 = this;\n\n      this.request = this.vhs_.xhr({\n        uri: this.masterPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        if (_this6.requestErrored_(error, req)) {\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return;\n        }\n\n        var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n        _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this6.masterLoaded_ = Date.now();\n        }\n\n        _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n        if (masterChanged) {\n          _this6.handleMaster_();\n\n          _this6.syncClientServerClock_(function () {\n            return cb(req, masterChanged);\n          });\n\n          return;\n        }\n\n        return cb(req, masterChanged);\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n    ;\n\n    _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n      var _this7 = this;\n\n      var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this7.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    };\n\n    _proto.haveMaster_ = function haveMaster_() {\n      this.state = 'HAVE_MASTER';\n\n      if (this.isMaster_) {\n        // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    };\n\n    _proto.handleMaster_ = function handleMaster_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      var newMaster = parseMasterXml({\n        masterXml: this.masterPlaylistLoader_.masterXml_,\n        srcUrl: this.masterPlaylistLoader_.srcUrl,\n        clientOffset: this.masterPlaylistLoader_.clientOffset_,\n        sidxMapping: this.masterPlaylistLoader_.sidxMapping_\n      });\n      var oldMaster = this.masterPlaylistLoader_.master; // if we have an old master to compare the new master against\n\n      if (oldMaster) {\n        newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n      } // only update master if we have a new master\n\n\n      this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n      var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n      if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n        this.masterPlaylistLoader_.srcUrl = location;\n      }\n\n      if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      return Boolean(newMaster);\n    };\n\n    _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n      var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n        }\n\n        return;\n      }\n\n      this.createMUPTimeout_(mup);\n    };\n\n    _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n      var mpl = this.masterPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(function () {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     */\n    ;\n\n    _proto.refreshXml_ = function refreshXml_() {\n      var _this8 = this;\n\n      this.requestMaster_(function (req, masterChanged) {\n        if (!masterChanged) {\n          return;\n        }\n\n        if (_this8.media_) {\n          _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n\n        _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n        _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n          // TODO: do we need to reload the current playlist?\n          _this8.refreshMedia_(_this8.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n    ;\n\n    _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for master we have to reparse the master xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating master\n      // if this is the first time this.media_ is being set.\n      // as master was just parsed in that case.\n\n\n      if (this.media_ && this.isMaster_) {\n        this.handleMaster_();\n      }\n\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.mediaUpdateTimeout) {\n        var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n          if (_this9.media().endList) {\n            return;\n          }\n\n          _this9.mediaUpdateTimeout = window.setTimeout(function () {\n            _this9.trigger('mediaupdatetimeout');\n\n            createMediaUpdateTimeout();\n          }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n        };\n\n        createMediaUpdateTimeout();\n      }\n\n      this.trigger('loadedplaylist');\n    };\n\n    return DashPlaylistLoader;\n  }(EventTarget);\n\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n\n  var stringToArrayBuffer = function stringToArrayBuffer(string) {\n    var view = new Uint8Array(new ArrayBuffer(string.length));\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view.buffer;\n  };\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n\n\n  var browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n\n  var createObjectURL = function createObjectURL(str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      var blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n\n  var factory = function factory(code) {\n    return function () {\n      var objectUrl = createObjectURL(code);\n      var worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      var terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n\n      return worker;\n    };\n  };\n\n  var transform = function transform(code) {\n    return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n\n  var getWorkerString = function getWorkerString(fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n  /* rollup-plugin-worker-factory start for worker!/Users/gkatsevman/p/http-streaming-release/src/transmuxer-worker.js */\n\n\n  var workerCode$1 = transform(getWorkerString(function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun$1 = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // Link To Transport\n    // -----------------\n\n    var CaptionStream$1 = function CaptionStream(options) {\n      options = options || {};\n      CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n\n    CaptionStream$1.prototype = new stream();\n\n    CaptionStream$1.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream$1.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream$1.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream$1.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream$1.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n\n    CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n\n    };\n\n    var get708CharFromCode = function get708CharFromCode(code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n\n      return String.fromCharCode(newCode);\n    };\n\n    var within708TextBlock = function within708TextBlock(b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n\n    var Cea708Window = function Cea708Window(windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n\n      return false;\n    };\n\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n\n    var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n\n    var Cea708Stream = function Cea708Stream(options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(function (serviceName) {\n        serviceProps = captionServices[serviceName];\n\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n\n          self.add708Bytes(packet);\n        }\n      };\n    };\n\n    Cea708Stream.prototype = new stream();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n\n        this.pushServiceBlock(serviceNum, i, blockSize);\n\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n\n      var _char;\n\n      var charCodeArray; // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        if (isMultiByte) {\n          charCodeArray = [currentByte, nextByte];\n          i++;\n        } else {\n          charCodeArray = [currentByte];\n        }\n\n        _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        _char = get708CharFromCode(extended | currentByte);\n      }\n\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n\n      win.pendingNewLine = false;\n      win.addText(_char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row, index) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping a malformed 608 caption at index ' + index + '.'\n          });\n          return '';\n        }\n      }, this) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char2) {\n      return _char2 >= 0x20 && _char2 <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream$1,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover$1 = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream$1.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    };\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591$1(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n            });\n            return;\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n        // bytes\n    SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH$1,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          segmentHadPmt = false,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n        var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          self.trigger('data', pmt);\n        }\n\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      Cea708Stream: captionStream.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n        });\n      };\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n\n            i++;\n            continue;\n          }\n\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n\n        buffer = buffer.subarray(i);\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio = [1, 1],\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var getId3Offset = function getId3Offset(data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n\n    var isLikelyAacData$1 = function isLikelyAacData(data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n\n    var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$2 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$2,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    var retriggerForStream = function retriggerForStream(key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n\n    var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream(options);\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var toHexString$1 = function toHexString(value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n\n    var parseType$1 = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    var parseType_1 = parseType$1;\n    var toUnsigned$2 = bin.toUnsigned;\n\n    var findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType_1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n\n    var findBox_1 = findBox;\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var tfdt = function tfdt(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7])\n      };\n\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += toUnsigned$1(data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11]);\n      }\n\n      return result;\n    };\n\n    var parseTfdt = tfdt;\n\n    var parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n\n    var parseSampleFlags_1 = parseSampleFlags;\n\n    var trun = function trun(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n          // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n          // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n          // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n          // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n          // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n          // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n          offset = 8,\n          sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n      }\n\n      return result;\n    };\n\n    var parseTrun = trun;\n\n    var tfhd = function tfhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n          baseDataOffsetPresent = result.flags[2] & 0x01,\n          sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n          defaultSampleDurationPresent = result.flags[2] & 0x08,\n          defaultSampleSizePresent = result.flags[2] & 0x10,\n          defaultSampleFlagsPresent = result.flags[2] & 0x20,\n          durationIsEmpty = result.flags[0] & 0x010000,\n          defaultBaseIsMoof = result.flags[0] & 0x020000,\n          i;\n      i = 8;\n\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n\n      return result;\n    };\n\n    var parseTfhd = tfhd;\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = {\n        logs: [],\n        seiNals: []\n      },\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox_1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox_1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser = function CaptionParser() {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser;\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox_1(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return findBox_1(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = findBox_1(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = typeof baseTime === 'number' && !isNaN(baseTime) ? baseTime : Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n\n    compositionStartTime = function compositionStartTime(timescales, fragment) {\n      var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox_1(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType_1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n\n    getTracks = function getTracks(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox_1(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n\n        var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType_1(hdlr.subarray(8, 12));\n\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n\n        var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n\n        var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n\n        tracks.push(track);\n      });\n      return tracks;\n    };\n\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox_1,\n      parseType: parseType_1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n    };\n\n    var parsePid = function parsePid(packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n\n    var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n      return !!(packet[1] & 0x40);\n    };\n\n    var parseAdaptionField = function parseAdaptionField(packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n\n      return offset;\n    };\n\n    var parseType = function parseType(packet, pmtPid) {\n      var pid = parsePid(packet);\n\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n\n      return null;\n    };\n\n    var parsePat = function parsePat(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n\n    var parsePmt = function parsePmt(packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n\n      return programMapTable;\n    };\n\n    var parsePesType = function parsePesType(packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n\n      switch (type) {\n        case streamTypes.H264_STREAM_TYPE:\n          return 'video';\n\n        case streamTypes.ADTS_STREAM_TYPE:\n          return 'audio';\n\n        case streamTypes.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n\n        default:\n          return null;\n      }\n    };\n\n    var parsePesTime = function parsePesTime(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n\n      if (!pusi) {\n        return null;\n      }\n\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n\n      return pes;\n    };\n\n    var parseNalUnitType = function parseNalUnitType(type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n\n        case 0x06:\n          return 'sei_rbsp';\n\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n\n        default:\n          return null;\n      }\n    };\n\n    var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      return foundKeyFrame;\n    };\n\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function parsePsi_(bytes, pmt) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type;\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n\n    var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n\n    var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed,\n          frame,\n          i,\n          pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n\n                      currentFrame.size = 0;\n                    }\n                  }\n\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n\n    var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n\n    var inspectAac_ = function inspectAac_(bytes) {\n      var endLoop = false,\n          audioCount = 0,\n          sampleRate = null,\n          timestamp = null,\n          frameSize = 0,\n          byteIndex = 0,\n          packet;\n\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n\n            byteIndex += frameSize;\n            break;\n\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n\n          default:\n            byteIndex++;\n            break;\n        }\n\n        if (endLoop) {\n          return null;\n        }\n      }\n\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n\n    var inspectTs_ = function inspectTs_(bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n\n          switch (type) {\n            case streamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n\n              break;\n          }\n        }\n      }\n\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n\n    var inspect = function inspect(bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        var videoSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        var audioSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo: audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame: id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption: caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo: trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock.videoTsToSeconds(audioTimingInfo.start),\n            end: clock.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock.videoTsToSeconds(videoTimingInfo.start),\n            end: clock.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log: log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = /*#__PURE__*/function () {\n      function MessageHandlers(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      var _proto = MessageHandlers.prototype;\n\n      _proto.init = function init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      };\n\n      _proto.pushMp4Captions = function pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      };\n\n      _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n        var timescales = _ref.timescales,\n            data = _ref.data;\n        var startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime: startTime,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n        var data = _ref2.data;\n        var tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks: tracks,\n          data: data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n      ;\n\n      _proto.probeTs = function probeTs(_ref3) {\n        var data = _ref3.data,\n            baseStartTime = _ref3.baseStartTime;\n        var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n        var timeInfo = tsInspector.inspect(data, tsStartTime);\n        var result = null;\n\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n\n        this.self.postMessage({\n          action: 'probeTs',\n          result: result,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      };\n\n      _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n      ;\n\n      _proto.push = function push(data) {\n        // Cast array buffer to correct type for transmuxer\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n      ;\n\n      _proto.reset = function reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n      ;\n\n      _proto.setTimestampOffset = function setTimestampOffset(data) {\n        var timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n      };\n\n      _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n      };\n\n      _proto.setRemux = function setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n      ;\n\n      _proto.flush = function flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.endTimeline = function endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.alignGopsWith = function alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      };\n\n      return MessageHandlers;\n    }();\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/Users/gkatsevman/p/http-streaming-release/src/transmuxer-worker.js */\n\n  var handleData_ = function handleData_(event, transmuxedData, callback) {\n    var _event$data$segment = event.data.segment,\n        type = _event$data$segment.type,\n        initSegment = _event$data$segment.initSegment,\n        captions = _event$data$segment.captions,\n        captionStreams = _event$data$segment.captionStreams,\n        metadata = _event$data$segment.metadata,\n        videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n        videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n    transmuxedData.buffer.push({\n      captions: captions,\n      captionStreams: captionStreams,\n      metadata: metadata\n    });\n    var boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    var result = {\n      type: type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n\n    callback(result);\n  };\n\n  var handleDone_ = function handleDone_(_ref) {\n    var transmuxedData = _ref.transmuxedData,\n        callback = _ref.callback; // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n\n  var handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n\n  var processTransmux = function processTransmux(options) {\n    var transmuxer = options.transmuxer,\n        bytes = options.bytes,\n        audioAppendStart = options.audioAppendStart,\n        gopsToAlignWith = options.gopsToAlignWith,\n        remux = options.remux,\n        onData = options.onData,\n        onTrackInfo = options.onTrackInfo,\n        onAudioTimingInfo = options.onAudioTimingInfo,\n        onVideoTimingInfo = options.onVideoTimingInfo,\n        onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n        onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n        onId3 = options.onId3,\n        onCaptions = options.onCaptions,\n        onDone = options.onDone,\n        onEndedTimeline = options.onEndedTimeline,\n        onTransmuxerLog = options.onTransmuxerLog,\n        isEndOfTimeline = options.isEndOfTimeline;\n    var transmuxedData = {\n      buffer: []\n    };\n    var waitForEndedTimelineEvent = isEndOfTimeline;\n\n    var handleMessage = function handleMessage(event) {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData: transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n\n    transmuxer.onmessage = handleMessage;\n\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsToAlignWith\n      });\n    }\n\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux: remux\n      });\n    }\n\n    if (bytes.byteLength) {\n      var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n\n  var dequeue = function dequeue(transmuxer) {\n    transmuxer.currentTransmux = null;\n\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n\n  var processAction = function processAction(transmuxer, action) {\n    transmuxer.postMessage({\n      action: action\n    });\n    dequeue(transmuxer);\n  };\n\n  var enqueueAction = function enqueueAction(action, transmuxer) {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n\n  var reset = function reset(transmuxer) {\n    enqueueAction('reset', transmuxer);\n  };\n\n  var endTimeline = function endTimeline(transmuxer) {\n    enqueueAction('endTimeline', transmuxer);\n  };\n\n  var transmux = function transmux(options) {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n\n    options.transmuxer.transmuxQueue.push(options);\n  };\n\n  var createTransmuxer = function createTransmuxer(options) {\n    var transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    var term = transmuxer.terminate;\n\n    transmuxer.terminate = function () {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n\n    transmuxer.postMessage({\n      action: 'init',\n      options: options\n    });\n    return transmuxer;\n  };\n\n  var segmentTransmuxer = {\n    reset: reset,\n    endTimeline: endTimeline,\n    transmux: transmux,\n    createTransmuxer: createTransmuxer\n  };\n\n  var workerCallback = function workerCallback(options) {\n    var transmuxer = options.transmuxer;\n    var endAction = options.endAction || options.action;\n    var callback = options.callback;\n\n    var message = _extends_1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n\n    var listenForEndEvent = function listenForEndEvent(event) {\n      if (event.data.action !== endAction) {\n        return;\n      }\n\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n\n      callback(event.data);\n    };\n\n    transmuxer.addEventListener('message', listenForEndEvent);\n\n    if (options.data) {\n      var isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n\n  var REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  var abortAll = function abortAll(activeXhrs) {\n    activeXhrs.forEach(function (xhr) {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n\n  var getRequestStats = function getRequestStats(request) {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n\n  var getProgressStats = function getProgressStats(progressEvent) {\n    var request = progressEvent.target;\n    var roundTripTime = Date.now() - request.requestTime;\n    var stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n\n  var handleErrors = function handleErrors(error, request) {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      if (response.byteLength !== 16) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Invalid HLS key at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      var view = new DataView(response);\n      var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n      for (var i = 0; i < objects.length; i++) {\n        objects[i].bytes = bytes;\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var parseInitSegment = function parseInitSegment(segment, _callback) {\n    var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      var uri = segment.map.resolvedUri || segment.map.uri;\n      return _callback({\n        internal: true,\n        message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n        code: REQUEST_ERRORS.FAILURE\n      });\n    }\n\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref) {\n        var tracks = _ref.tracks,\n            data = _ref.data; // transfer bytes back to us\n\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n\n          segment.map.tracks[track.type] = track;\n\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return _callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n    var segment = _ref2.segment,\n        finishProcessingFn = _ref2.finishProcessingFn;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n      // until the key request is done to decrypt.\n\n      if (segment.map.key) {\n        segment.map.encryptedBytes = bytes;\n        return finishProcessingFn(null, segment);\n      }\n\n      segment.map.bytes = bytes;\n      parseInitSegment(segment, function (parseError) {\n        if (parseError) {\n          parseError.xhr = request;\n          parseError.status = request.status;\n          return finishProcessingFn(parseError, segment);\n        }\n\n        finishProcessingFn(null, segment);\n      });\n    };\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleSegmentResponse = function handleSegmentResponse(_ref3) {\n    var segment = _ref3.segment,\n        finishProcessingFn = _ref3.finishProcessingFn,\n        responseType = _ref3.responseType;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n      // thrown for two primary cases:\n      // 1. the mime type override stops working, or is not implemented for a specific\n      //    browser\n      // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n      responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n      segment.stats = getRequestStats(request);\n\n      if (segment.key) {\n        segment.encryptedBytes = new Uint8Array(newBytes);\n      } else {\n        segment.bytes = new Uint8Array(newBytes);\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var transmuxAndNotify = function transmuxAndNotify(_ref4) {\n    var segment = _ref4.segment,\n        bytes = _ref4.bytes,\n        trackInfoFn = _ref4.trackInfoFn,\n        timingInfoFn = _ref4.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n        id3Fn = _ref4.id3Fn,\n        captionsFn = _ref4.captionsFn,\n        isEndOfTimeline = _ref4.isEndOfTimeline,\n        endedTimelineFn = _ref4.endedTimelineFn,\n        dataFn = _ref4.dataFn,\n        doneFn = _ref4.doneFn,\n        onTransmuxerLog = _ref4.onTransmuxerLog;\n    var fmp4Tracks = segment.map && segment.map.tracks || {};\n    var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n    var finish = function finish() {\n      return transmux({\n        bytes: bytes,\n        transmuxer: segment.transmuxer,\n        audioAppendStart: segment.audioAppendStart,\n        gopsToAlignWith: segment.gopsToAlignWith,\n        remux: isMuxed,\n        onData: function onData(result) {\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          dataFn(segment, result);\n        },\n        onTrackInfo: function onTrackInfo(trackInfo) {\n          if (trackInfoFn) {\n            if (isMuxed) {\n              trackInfo.isMuxed = true;\n            }\n\n            trackInfoFn(segment, trackInfo);\n          }\n        },\n        onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n          // we only want the first start value we encounter\n          if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n            audioStartFn(audioTimingInfo.start);\n            audioStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n            audioEndFn(audioTimingInfo.end);\n          }\n        },\n        onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n          // we only want the first start value we encounter\n          if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n            videoStartFn(videoTimingInfo.start);\n            videoStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n            videoEndFn(videoTimingInfo.end);\n          }\n        },\n        onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n          videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n        },\n        onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n          audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n        },\n        onId3: function onId3(id3Frames, dispatchType) {\n          id3Fn(segment, id3Frames, dispatchType);\n        },\n        onCaptions: function onCaptions(captions) {\n          captionsFn(segment, [captions]);\n        },\n        isEndOfTimeline: isEndOfTimeline,\n        onEndedTimeline: function onEndedTimeline() {\n          endedTimelineFn();\n        },\n        onTransmuxerLog: onTransmuxerLog,\n        onDone: function onDone(result) {\n          if (!doneFn) {\n            return;\n          }\n\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          doneFn(null, segment, result);\n        }\n      });\n    }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: function callback(data) {\n        segment.bytes = bytes = data.data;\n        var probeResult = data.result;\n\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed: isMuxed\n          });\n          trackInfoFn = null;\n\n          if (probeResult.hasAudio && !isMuxed) {\n            audioStartFn(probeResult.audioStart);\n          }\n\n          if (probeResult.hasVideo) {\n            videoStartFn(probeResult.videoStart);\n          }\n\n          audioStartFn = null;\n          videoStartFn = null;\n        }\n\n        finish();\n      }\n    });\n  };\n\n  var handleSegmentBytes = function handleSegmentBytes(_ref5) {\n    var segment = _ref5.segment,\n        bytes = _ref5.bytes,\n        trackInfoFn = _ref5.trackInfoFn,\n        timingInfoFn = _ref5.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n        id3Fn = _ref5.id3Fn,\n        captionsFn = _ref5.captionsFn,\n        isEndOfTimeline = _ref5.isEndOfTimeline,\n        endedTimelineFn = _ref5.endedTimelineFn,\n        dataFn = _ref5.dataFn,\n        doneFn = _ref5.doneFn,\n        onTransmuxerLog = _ref5.onTransmuxerLog;\n    var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only blacklist a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      var tracks = segment.map.tracks;\n      var trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      var finishLoading = function finishLoading(captions) {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n\n        doneFn(null, segment, {});\n      };\n\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: function callback(_ref6) {\n          var data = _ref6.data,\n              startTime = _ref6.startTime; // transfer bytes back to us\n\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          } // Run through the CaptionParser in case there are captions.\n          // Initialize CaptionParser if it hasn't been yet\n\n\n          if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n            finishLoading();\n            return;\n          }\n\n          workerCallback({\n            action: 'pushMp4Captions',\n            endAction: 'mp4Captions',\n            transmuxer: segment.transmuxer,\n            data: bytesAsUint8Array,\n            timescales: segment.map.timescales,\n            trackIds: [tracks.video.id],\n            callback: function callback(message) {\n              // transfer bytes back to us\n              bytes = message.data.buffer;\n              segment.bytes = bytesAsUint8Array = message.data;\n              message.logs.forEach(function (log) {\n                onTransmuxerLog(videojs.mergeOptions(log, {\n                  stream: 'mp4CaptionParser'\n                }));\n              });\n              finishLoading(message.captions);\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n\n    transmuxAndNotify({\n      segment: segment,\n      bytes: bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  };\n\n  var decrypt = function decrypt(_ref7, callback) {\n    var id = _ref7.id,\n        key = _ref7.key,\n        encryptedBytes = _ref7.encryptedBytes,\n        decryptionWorker = _ref7.decryptionWorker;\n\n    var decryptionHandler = function decryptionHandler(event) {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        var decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    var keyBytes;\n\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n\n  var decryptSegment = function decryptSegment(_ref8) {\n    var decryptionWorker = _ref8.decryptionWorker,\n        segment = _ref8.segment,\n        trackInfoFn = _ref8.trackInfoFn,\n        timingInfoFn = _ref8.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n        id3Fn = _ref8.id3Fn,\n        captionsFn = _ref8.captionsFn,\n        isEndOfTimeline = _ref8.isEndOfTimeline,\n        endedTimelineFn = _ref8.endedTimelineFn,\n        dataFn = _ref8.dataFn,\n        doneFn = _ref8.doneFn,\n        onTransmuxerLog = _ref8.onTransmuxerLog;\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker: decryptionWorker\n    }, function (decryptedBytes) {\n      segment.bytes = decryptedBytes;\n      handleSegmentBytes({\n        segment: segment,\n        bytes: segment.bytes,\n        trackInfoFn: trackInfoFn,\n        timingInfoFn: timingInfoFn,\n        videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n        id3Fn: id3Fn,\n        captionsFn: captionsFn,\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: endedTimelineFn,\n        dataFn: dataFn,\n        doneFn: doneFn,\n        onTransmuxerLog: onTransmuxerLog\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n\n  var waitForCompletion = function waitForCompletion(_ref9) {\n    var activeXhrs = _ref9.activeXhrs,\n        decryptionWorker = _ref9.decryptionWorker,\n        trackInfoFn = _ref9.trackInfoFn,\n        timingInfoFn = _ref9.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n        id3Fn = _ref9.id3Fn,\n        captionsFn = _ref9.captionsFn,\n        isEndOfTimeline = _ref9.isEndOfTimeline,\n        endedTimelineFn = _ref9.endedTimelineFn,\n        dataFn = _ref9.dataFn,\n        doneFn = _ref9.doneFn,\n        onTransmuxerLog = _ref9.onTransmuxerLog;\n    var count = 0;\n    var didError = false;\n    return function (error, segment) {\n      if (didError) {\n        return;\n      }\n\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n\n      count += 1;\n\n      if (count === activeXhrs.length) {\n        var segmentFinish = function segmentFinish() {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker: decryptionWorker,\n              segment: segment,\n              trackInfoFn: trackInfoFn,\n              timingInfoFn: timingInfoFn,\n              videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n              id3Fn: id3Fn,\n              captionsFn: captionsFn,\n              isEndOfTimeline: isEndOfTimeline,\n              endedTimelineFn: endedTimelineFn,\n              dataFn: dataFn,\n              doneFn: doneFn,\n              onTransmuxerLog: onTransmuxerLog\n            });\n          } // Otherwise, everything is ready just continue\n\n\n          handleSegmentBytes({\n            segment: segment,\n            bytes: segment.bytes,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n\n        segment.endOfAllRequests = Date.now();\n\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          return decrypt({\n            decryptionWorker: decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key\n          }, function (decryptedBytes) {\n            segment.map.bytes = decryptedBytes;\n            parseInitSegment(segment, function (parseError) {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n\n              segmentFinish();\n            });\n          });\n        }\n\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n\n  var handleLoadEnd = function handleLoadEnd(_ref10) {\n    var loadendState = _ref10.loadendState,\n        abortFn = _ref10.abortFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n        abortFn();\n        loadendState.calledAbortFn = true;\n      }\n    };\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n\n  var handleProgress = function handleProgress(_ref11) {\n    var segment = _ref11.segment,\n        progressFn = _ref11.progressFn;\n    _ref11.trackInfoFn;\n    _ref11.timingInfoFn;\n    _ref11.videoSegmentTimingInfoFn;\n    _ref11.audioSegmentTimingInfoFn;\n    _ref11.id3Fn;\n    _ref11.captionsFn;\n    _ref11.isEndOfTimeline;\n    _ref11.endedTimelineFn;\n    _ref11.dataFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted) {\n        return;\n      }\n\n      segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n      if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n        segment.stats.firstBytesReceivedAt = Date.now();\n      }\n\n      return progressFn(event, segment);\n    };\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n\n  var mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n    var xhr = _ref12.xhr,\n        xhrOptions = _ref12.xhrOptions,\n        decryptionWorker = _ref12.decryptionWorker,\n        segment = _ref12.segment,\n        abortFn = _ref12.abortFn,\n        progressFn = _ref12.progressFn,\n        trackInfoFn = _ref12.trackInfoFn,\n        timingInfoFn = _ref12.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n        id3Fn = _ref12.id3Fn,\n        captionsFn = _ref12.captionsFn,\n        isEndOfTimeline = _ref12.isEndOfTimeline,\n        endedTimelineFn = _ref12.endedTimelineFn,\n        dataFn = _ref12.dataFn,\n        doneFn = _ref12.doneFn,\n        onTransmuxerLog = _ref12.onTransmuxerLog;\n    var activeXhrs = [];\n    var finishProcessingFn = waitForCompletion({\n      activeXhrs: activeXhrs,\n      decryptionWorker: decryptionWorker,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      var objects = [segment.key];\n\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n\n      var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n      var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n\n    if (segment.map && !segment.map.bytes) {\n      var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n      if (differentMapKey) {\n        var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n        var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n        var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n\n      var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      var initSegmentRequestCallback = handleInitSegmentResponse({\n        segment: segment,\n        finishProcessingFn: finishProcessingFn\n      });\n      var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n\n    var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    var segmentRequestCallback = handleSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn,\n      responseType: segmentRequestOptions.responseType\n    });\n    var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment: segment,\n      progressFn: progressFn,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    var loadendState = {};\n    activeXhrs.forEach(function (activeXhr) {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState: loadendState,\n        abortFn: abortFn\n      }));\n    });\n    return function () {\n      return abortAll(activeXhrs);\n    };\n  };\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n\n\n  var logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  var getCodecs = function getCodecs(media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    var mediaAttributes = media.attributes || {};\n\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n\n  var isMaat = function isMaat(master, media) {\n    var mediaAttributes = media.attributes || {};\n    return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n\n  var isMuxed = function isMuxed(master, media) {\n    if (!isMaat(master, media)) {\n      return true;\n    }\n\n    var mediaAttributes = media.attributes || {};\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    for (var groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var unwrapCodecList = function unwrapCodecList(codecList) {\n    var codecs = {};\n    codecList.forEach(function (_ref) {\n      var mediaType = _ref.mediaType,\n          type = _ref.type,\n          details = _ref.details;\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n        codecs[mediaType] = null;\n        return;\n      }\n\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n\n  var codecCount = function codecCount(codecObj) {\n    var count = 0;\n\n    if (codecObj.audio) {\n      count++;\n    }\n\n    if (codecObj.video) {\n      count++;\n    }\n\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a master playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param master {Object} the m3u8 object for the master playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n\n  var codecsForPlaylist = function codecsForPlaylist(master, media) {\n    var mediaAttributes = media.attributes || {};\n    var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(master, media) && !codecInfo.audio) {\n      if (!isMuxed(master, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n\n    return codecInfo;\n  };\n\n  var logFn = logger('PlaylistSelector');\n\n  var representationToString = function representationToString(representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n\n    var playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n\n  var safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n    if (!el) {\n      return '';\n    }\n\n    var result = window.getComputedStyle(el);\n\n    if (!result) {\n      return '';\n    }\n\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n\n  var stableSort = function stableSort(array, sortFn) {\n    var newArray = array.slice();\n    array.sort(function (left, right) {\n      var cmp = sortFn(left, right);\n\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n    var leftBandwidth;\n    var rightBandwidth;\n\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n    var leftWidth;\n    var rightWidth;\n\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} master\n   *        Object representation of the master manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} masterPlaylistController\n   *        the current masterPlaylistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n    // If we end up getting called before `master` is available, exit early\n    if (!master) {\n      return;\n    }\n\n    var options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n    };\n    var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(master)) {\n      playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n    var sortedPlaylistReps = playlists.map(function (playlist) {\n      var bandwidth;\n      var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth: bandwidth,\n        width: width,\n        height: height,\n        playlist: playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, function (left, right) {\n      return left.bandwidth - right.bandwidth;\n    }); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isIncompatible(rep.playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return Playlist.isEnabled(rep.playlist);\n    });\n\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n        return !Playlist.isDisabled(rep.playlist);\n      });\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n\n    var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n      return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n    });\n    var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n      if (_chosenRep && _chosenRep.playlist) {\n        var type = 'sortedPlaylistReps';\n\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n\n        logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n        return _chosenRep.playlist;\n      }\n\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n\n    var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.width && rep.height;\n    }); // sort variants by resolution\n\n    stableSort(haveResolution, function (left, right) {\n      return left.width - right.width;\n    }); // if we have the exact resolution as the player use it\n\n    var resolutionBestRepList = haveResolution.filter(function (rep) {\n      return rep.width === playerWidth && rep.height === playerHeight;\n    });\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n    var resolutionPlusOneList;\n    var resolutionPlusOneSmallest;\n    var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(function (rep) {\n        return rep.width > playerWidth || rep.height > playerHeight;\n      }); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n        return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n      }); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n        return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n      })[0];\n    }\n\n    var leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      var leastPixelDiffList = haveResolution.map(function (rep) {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, function (left, right) {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n\n    var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (chosenRep && chosenRep.playlist) {\n      var _type = 'sortedPlaylistReps';\n\n      if (leastPixelDiffRep) {\n        _type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        _type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        _type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        _type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        _type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n      return chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var lastBandwidthSelector = function lastBandwidthSelector() {\n    var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n\n  var movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n    var average = -1;\n    var lastSystemBandwidth = -1;\n\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n\n    return function () {\n      var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n\n      return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.master\n   *        Object representation of the master manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n\n  var minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n    var master = settings.master,\n        currentTime = settings.currentTime,\n        bandwidth = settings.bandwidth,\n        duration = settings.duration,\n        segmentDuration = settings.segmentDuration,\n        timeUntilRebuffer = settings.timeUntilRebuffer,\n        currentTimeline = settings.currentTimeline,\n        syncController = settings.syncController; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    var compatiblePlaylists = master.playlists.filter(function (playlist) {\n      return !Playlist.isIncompatible(playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n        return !Playlist.isDisabled(playlist);\n      });\n    }\n\n    var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n      var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      var numRequests = syncPoint ? 1 : 2;\n      var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist: playlist,\n        rebufferingImpact: rebufferingImpact\n      };\n    });\n    var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n      return estimate.rebufferingImpact <= 0;\n    }); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, function (a, b) {\n      return comparePlaylistBandwidth(b.playlist, a.playlist);\n    });\n\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n\n    stableSort(rebufferingEstimates, function (a, b) {\n      return a.rebufferingImpact - b.rebufferingImpact;\n    });\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n\n  var lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n    var _this = this; // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n\n\n    var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, function (a, b) {\n      return comparePlaylistBandwidth(a, b);\n    }); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    var playlistsWithVideo = playlists.filter(function (playlist) {\n      return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n    });\n    return playlistsWithVideo[0] || null;\n  };\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n\n\n  var concatSegments = function concatSegments(segmentObj) {\n    var offset = 0;\n    var tempBuffer;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n\n    return tempBuffer;\n  };\n  /**\n   * @file text-tracks.js\n   */\n\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n\n  var createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n\n      var track = tech.textTracks().getTrackById(instreamId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var label = captionStream;\n        var language = captionStream;\n        var def = false;\n        var captionService = captionServices[instreamId];\n\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService[\"default\"];\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          \"default\": def,\n          label: label,\n          language: language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n\n  var addCaptionData = function addCaptionData(_ref) {\n    var inbandTextTracks = _ref.inbandTextTracks,\n        captionArray = _ref.captionArray,\n        timestampOffset = _ref.timestampOffset;\n\n    if (!captionArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n\n  var deprecateOldCue = function deprecateOldCue(cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get: function get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get: function get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get: function get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n\n  var addMetadata = function addMetadata(_ref2) {\n    var inbandTextTracks = _ref2.inbandTextTracks,\n        metadataArray = _ref2.metadataArray,\n        timestampOffset = _ref2.timestampOffset,\n        videoDuration = _ref2.videoDuration;\n\n    if (!metadataArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    var metadataTrack = inbandTextTracks.metadataTrack_;\n\n    if (!metadataTrack) {\n      return;\n    }\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n\n    var cues = metadataTrack.cues;\n    var cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n\n    var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n      var timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach(function (startTime, idx) {\n      var cueGroup = cuesGroupedByStartTime[startTime];\n      var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(function (cue) {\n        cue.endTime = nextTime;\n      });\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n\n  var createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n\n  var removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n    var i;\n    var cue;\n\n    if (!track) {\n      return;\n    }\n\n    if (!track.cues) {\n      return;\n    }\n\n    i = track.cues.length;\n\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n\n  var removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n    var cues = track.cues;\n\n    if (!cues) {\n      return;\n    }\n\n    for (var i = 0; i < cues.length; i++) {\n      var duplicates = [];\n      var occurrences = 0;\n\n      for (var j = 0; j < cues.length; j++) {\n        if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n          occurrences++;\n\n          if (occurrences > 1) {\n            duplicates.push(cues[j]);\n          }\n        }\n      }\n\n      if (duplicates.length) {\n        duplicates.forEach(function (dupe) {\n          return track.removeCue(dupe);\n        });\n      }\n    }\n  };\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n\n  var gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n    var currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    var i;\n\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n\n  var updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n    if (!gops.length) {\n      return buffer;\n    }\n\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n\n    var start = gops[0].pts;\n    var i = 0;\n\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n\n  var removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n    var startPts = Math.ceil((start - mapping) * clock_1);\n    var endPts = Math.ceil((end - mapping) * clock_1);\n    var updatedBuffer = buffer.slice();\n    var i = buffer.length;\n\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n\n    var j = i + 1;\n\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n\n  var shallowEqual = function shallowEqual(a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n\n    var akeys = Object.keys(a).sort();\n    var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n\n    for (var i = 0; i < akeys.length; i++) {\n      var key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\n  var QUOTA_EXCEEDED_ERR = 22;\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  var getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    var timelineSegments = [];\n    var time = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n\n  var MIN_BACK_BUFFER = 1; // in ms\n\n  var CHECK_BUFFER_DELAY = 500;\n\n  var finite = function finite(num) {\n    return typeof num === 'number' && isFinite(num);\n  }; // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n\n  var MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\n  var illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n\n  var safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n    var maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n\n  var segmentInfoString = function segmentInfoString(segmentInfo) {\n    var startOfSegment = segmentInfo.startOfSegment,\n        duration = segmentInfo.duration,\n        segment = segmentInfo.segment,\n        part = segmentInfo.part,\n        _segmentInfo$playlist = segmentInfo.playlist,\n        seq = _segmentInfo$playlist.mediaSequence,\n        id = _segmentInfo$playlist.id,\n        _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n        segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n        index = segmentInfo.mediaIndex,\n        partIndex = segmentInfo.partIndex,\n        timeline = segmentInfo.timeline;\n    var segmentLen = segments.length - 1;\n    var selection = 'mediaIndex/partIndex increment';\n\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n\n    if (segmentInfo.independent) {\n      selection += \" with independent \" + segmentInfo.independent;\n    }\n\n    var hasPartIndex = typeof partIndex === 'number';\n    var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n  };\n\n  var timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n    return mediaType + \"TimingInfo\";\n  };\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n\n  var timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n    var segmentTimeline = _ref.segmentTimeline,\n        currentTimeline = _ref.currentTimeline,\n        startOfSegment = _ref.startOfSegment,\n        buffered = _ref.buffered,\n        overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n\n  var shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n    var timelineChangeController = _ref2.timelineChangeController,\n        currentTimeline = _ref2.currentTimeline,\n        segmentTimeline = _ref2.segmentTimeline,\n        loaderType = _ref2.loaderType,\n        audioDisabled = _ref2.audioDisabled;\n\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n\n    if (loaderType === 'audio') {\n      var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n\n    if (loaderType === 'main' && audioDisabled) {\n      var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var mediaDuration = function mediaDuration(audioTimingInfo, videoTimingInfo) {\n    var audioDuration = audioTimingInfo && typeof audioTimingInfo.start === 'number' && typeof audioTimingInfo.end === 'number' ? audioTimingInfo.end - audioTimingInfo.start : 0;\n    var videoDuration = videoTimingInfo && typeof videoTimingInfo.start === 'number' && typeof videoTimingInfo.end === 'number' ? videoTimingInfo.end - videoTimingInfo.start : 0;\n    return Math.max(audioDuration, videoDuration);\n  };\n\n  var segmentTooLong = function segmentTooLong(_ref3) {\n    var segmentDuration = _ref3.segmentDuration,\n        maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n\n  var getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n\n    var segmentDuration = mediaDuration(segmentInfo.audioTimingInfo, segmentInfo.videoTimingInfo); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n\n    var targetDuration = segmentInfo.playlist.targetDuration;\n    var isSegmentWayTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    var isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration\n    });\n    var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n\n    return null;\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n\n  var SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n    function SegmentLoader(settings, options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n\n      _this.bandwidth = settings.bandwidth;\n      _this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      _this.roundTrip = NaN;\n\n      _this.resetStats_();\n\n      _this.mediaIndex = null;\n      _this.partIndex = null; // private settings\n\n      _this.hasPlayed_ = settings.hasPlayed;\n      _this.currentTime_ = settings.currentTime;\n      _this.seekable_ = settings.seekable;\n      _this.seeking_ = settings.seeking;\n      _this.duration_ = settings.duration;\n      _this.mediaSource_ = settings.mediaSource;\n      _this.vhs_ = settings.vhs;\n      _this.loaderType_ = settings.loaderType;\n      _this.currentMediaInfo_ = void 0;\n      _this.startingMediaInfo_ = void 0;\n      _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      _this.goalBufferLength_ = settings.goalBufferLength;\n      _this.sourceType_ = settings.sourceType;\n      _this.sourceUpdater_ = settings.sourceUpdater;\n      _this.inbandTextTracks_ = settings.inbandTextTracks;\n      _this.state_ = 'INIT';\n      _this.timelineChangeController_ = settings.timelineChangeController;\n      _this.shouldSaveSegmentTimingInfo_ = true;\n      _this.parse708captions_ = settings.parse708captions;\n      _this.captionServices_ = settings.captionServices;\n      _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n      _this.checkBufferTimeout_ = null;\n      _this.error_ = void 0;\n      _this.currentTimeline_ = -1;\n      _this.pendingSegment_ = null;\n      _this.xhrOptions_ = null;\n      _this.pendingSegments_ = [];\n      _this.audioDisabled_ = false;\n      _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      _this.gopBuffer_ = [];\n      _this.timeMapping_ = 0;\n      _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n      _this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      _this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      _this.loadQueue_ = [];\n      _this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      _this.waitingOnRemove_ = false;\n      _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      _this.activeInitSegmentId_ = null;\n      _this.initSegments_ = {}; // HLSe playback\n\n      _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      _this.keyCache_ = {};\n      _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      _this.syncController_ = settings.syncController;\n      _this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      _this.transmuxer_ = _this.createTransmuxer_();\n\n      _this.triggerSyncInfoUpdate_ = function () {\n        return _this.trigger('syncinfoupdate');\n      };\n\n      _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n      _this.mediaSource_.addEventListener('sourceopen', function () {\n        if (!_this.isEndOfStream_()) {\n          _this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n\n      _this.fetchAtBuffer_ = false;\n      _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n      Object.defineProperty(assertThisInitialized(_this), 'state', {\n        get: function get() {\n          return this.state_;\n        },\n        set: function set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(this.state_ + \" -> \" + newState);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n\n      _this.sourceUpdater_.on('ready', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'main') {\n        _this.timelineChangeController_.on('pendingtimelinechange', function () {\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'audio') {\n        _this.timelineChangeController_.on('timelinechange', function () {\n          if (_this.hasEnoughInfoToLoad_()) {\n            _this.processLoadQueue_();\n          }\n\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      }\n\n      return _this;\n    }\n\n    var _proto = SegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetStats_ = function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.resetStats_();\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    };\n\n    _proto.setAudio = function setAudio(enable) {\n      this.audioDisabled_ = !enable;\n\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n    ;\n\n    _proto.abort = function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n    ;\n\n    _proto.abort_ = function abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    };\n\n    _proto.checkForAbort_ = function checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n    ;\n\n    _proto.error = function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.logger_('error occurred:', _error);\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    };\n\n    _proto.endOfStream = function endOfStream() {\n      this.ended_ = true;\n\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      var trackInfo = this.getMediaInfo_();\n\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return videojs.createTimeRanges();\n      }\n\n      if (this.loaderType_ === 'main') {\n        var hasAudio = trackInfo.hasAudio,\n            hasVideo = trackInfo.hasVideo,\n            isMuxed = trackInfo.isMuxed;\n\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n    ;\n\n    _proto.segmentKey = function segmentKey(key, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n    ;\n\n    _proto.load = function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n    ;\n\n    _proto.playlist = function playlist(newPlaylist, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // on playlist changes we want it to be possible to fetch\n          // at the buffer for vod but not for live. So we use resetLoader\n          // for live and resyncLoader for vod. We want this because\n          // if a playlist uses independent and non-independent segments/parts the\n          // buffer may not accurately reflect the next segment that we should try\n          // downloading.\n          if (!newPlaylist.endList) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            var mediaIndex = this.mediaIndex;\n            this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n    ;\n\n    _proto.paused = function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n    ;\n\n    _proto.resetEverything = function resetEverything(done) {\n      this.ended_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n    ;\n\n    _proto.resetLoader = function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n    ;\n\n    _proto.resyncLoader = function resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n    ;\n\n    _proto.remove = function remove(start, end, done, force) {\n      if (done === void 0) {\n        done = function done() {};\n      }\n\n      if (force === void 0) {\n        force = false;\n      } // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n\n\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n\n      var removesRemaining = 1;\n\n      var removeFinished = function removeFinished() {\n        removesRemaining--;\n\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBuffer_ = function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBufferTick_ = function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n    ;\n\n    _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n      if (mediaIndex === void 0) {\n        mediaIndex = this.mediaIndex;\n      }\n\n      if (playlist === void 0) {\n        playlist = this.playlist_;\n      }\n\n      if (partIndex === void 0) {\n        partIndex = this.partIndex;\n      }\n\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n\n      var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n    ;\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      var buffered = this.buffered_();\n      var bufferedEnd = lastBufferedEnd(buffered) || 0;\n      var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      var segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      var next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      } else if (this.mediaIndex !== null) {\n        var segment = segments[this.mediaIndex];\n        var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        // Find the segment containing the end of the buffer or current time.\n        var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n          experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        }),\n            segmentIndex = _Playlist$getMediaInf.segmentIndex,\n            startTime = _Playlist$getMediaInf.startTime,\n            _partIndex = _Playlist$getMediaInf.partIndex;\n\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = _partIndex;\n      }\n\n      var nextSegment = segments[next.mediaIndex];\n      var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n\n      if (!bufferedTime && nextPart && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          var lastSegment = segments[next.mediaIndex - 1];\n          var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n\n      var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n\n      return this.generateSegmentInfo_(next);\n    };\n\n    _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n      var independent = options.independent,\n          playlist = options.playlist,\n          mediaIndex = options.mediaIndex,\n          startOfSegment = options.startOfSegment,\n          isSyncRequest = options.isSyncRequest,\n          partIndex = options.partIndex,\n          forceTimestampOffset = options.forceTimestampOffset,\n          getMediaInfoForTime = options.getMediaInfoForTime;\n      var segment = playlist.segments[mediaIndex];\n      var part = typeof partIndex === 'number' && segment.parts[partIndex];\n      var segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment,\n        part: part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime: getMediaInfoForTime,\n        independent: independent\n      };\n      var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment: startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck: overrideCheck\n      });\n      var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n    ;\n\n    _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.vhs_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    };\n\n    _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n      this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n    ;\n\n    _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      this.trigger('progress');\n    };\n\n    _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n      var _this2 = this;\n\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      var captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(function (caption) {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        var captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(function (trackName) {\n        var _captionTracks$trackN = captionTracks[trackName],\n            startTime = _captionTracks$trackN.startTime,\n            endTime = _captionTracks$trackN.endTime,\n            captions = _captionTracks$trackN.captions;\n        var inbandTextTracks = _this2.inbandTextTracks_;\n\n        _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n        createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks: inbandTextTracks,\n          timestampOffset: timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    };\n\n    _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray: id3Frames,\n        timestampOffset: timestampOffset,\n        videoDuration: this.duration_()\n      });\n    };\n\n    _proto.processMetadataQueue_ = function processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.caption.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    };\n\n    _proto.processCallQueue_ = function processCallQueue_() {\n      var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(function (fun) {\n        return fun();\n      });\n    };\n\n    _proto.processLoadQueue_ = function processLoadQueue_() {\n      var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(function (fun) {\n        return fun();\n      });\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n    ;\n\n    _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n\n      var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n\n      if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    };\n\n    _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    };\n\n    _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      }\n\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.handleData_ = function handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        var trackInfo = this.getCurrentMediaInfo_();\n        var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        var firstVideoFrameTimeForData;\n\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo: useVideoTimingInfo,\n          firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    };\n\n    _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    };\n\n    _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n      var type = _ref4.type,\n          initSegment = _ref4.initSegment,\n          map = _ref4.map,\n          playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n      if (map) {\n        var id = initSegmentId(map);\n\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n\n      return null;\n    };\n\n    _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n      var _this3 = this;\n\n      var segmentInfo = _ref5.segmentInfo,\n          type = _ref5.type,\n          bytes = _ref5.bytes;\n      var audioBuffered = this.sourceUpdater_.audioBuffered();\n      var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n\n      var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n      var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n      this.remove(0, timeToRemoveUntil, function () {\n        _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n        _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        _this3.quotaExceededErrorRetryTimeout_ = window.setTimeout(function () {\n          _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n          _this3.quotaExceededErrorRetryTimeout_ = null;\n\n          _this3.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    };\n\n    _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n      var segmentInfo = _ref6.segmentInfo,\n          type = _ref6.type,\n          bytes = _ref6.bytes; // if there's no error, nothing to do\n\n      if (!error) {\n        return;\n      }\n\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo: segmentInfo,\n          type: type,\n          bytes: bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n      this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.trigger('appenderror');\n    };\n\n    _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n      var segmentInfo = _ref7.segmentInfo,\n          type = _ref7.type,\n          initSegment = _ref7.initSegment,\n          data = _ref7.data,\n          bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n      if (!bytes) {\n        var segments = [data];\n        var byteLength = data.byteLength;\n\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments: segments\n        });\n      }\n\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n    };\n\n    _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n      var timingInfoProperty = type + \"TimingInfo\";\n\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    };\n\n    _proto.appendData_ = function appendData_(segmentInfo, result) {\n      var type = result.type,\n          data = result.data;\n\n      if (!data || !data.byteLength) {\n        return;\n      }\n\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n\n      var initSegment = this.getInitSegmentAndUpdateState_({\n        type: type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo: segmentInfo,\n        type: type,\n        initSegment: initSegment,\n        data: data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n      var _this4 = this;\n\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(function () {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          var options = _extends_1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n\n          _extends_1(segmentInfo, _this4.generateSegmentInfo_(options));\n\n          _this4.isPendingTimestampOffset_ = false;\n\n          _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    };\n\n    _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n      var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n\n      var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      var isWalkingForward = this.mediaIndex !== null;\n      var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: function endedTimelineFn() {\n          _this5.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: function onTransmuxerLog(_ref8) {\n          var message = _ref8.message,\n              level = _ref8.level,\n              stream = _ref8.stream;\n\n          _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n    ;\n\n    _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n    ;\n\n    _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part\n      };\n      var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n\n      return simpleSegment;\n    };\n\n    _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    };\n\n    _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    };\n\n    _proto.handleTimeout_ = function handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    };\n\n    _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n      var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    };\n\n    _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    };\n\n    _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n      var currentStart = _ref9.currentStart,\n          playlist = _ref9.playlist,\n          mediaIndex = _ref9.mediaIndex,\n          firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n          currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n          useVideoTimingInfo = _ref9.useVideoTimingInfo,\n          videoTimingInfo = _ref9.videoTimingInfo,\n          audioTimingInfo = _ref9.audioTimingInfo;\n\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n\n      var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n\n      return videoTimingInfo.start;\n    };\n\n    _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n      var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n      var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    };\n\n    _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n\n      segmentInfo.waitingOnAppends--;\n\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    };\n\n    _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n\n      var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= segmentInfo.timingInfo.start; // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      var trackInfo = this.getMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleAppendsDone_ = function handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        this.trigger('appendsdone');\n      }\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n\n      var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n          return;\n        }\n      }\n\n      this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n        this.resetEverything();\n        return;\n      }\n\n      var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n\n      this.trigger('appended');\n\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n    ;\n\n    _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n    ;\n\n    _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window.WebKitDataCue || window.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    };\n\n    return SegmentLoader;\n  }(videojs.EventTarget);\n\n  function noop() {}\n\n  var toTitleCase = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n\n  var bufferTypes = ['video', 'audio'];\n\n  var _updating = function updating(type, sourceUpdater) {\n    var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n\n  var nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n    for (var i = 0; i < queue.length; i++) {\n      var queueEntry = queue[i];\n\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  var shiftQueue = function shiftQueue(type, sourceUpdater) {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n\n    var queueIndex = 0;\n    var queueEntry = sourceUpdater.queue[queueIndex];\n\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n\n      return;\n    }\n\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n      return;\n    }\n\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n\n  var cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n    var buffer = sourceUpdater[type + \"Buffer\"];\n    var titleType = toTitleCase(type);\n\n    if (!buffer) {\n      return;\n    }\n\n    buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n    buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[type + \"Buffer\"] = null;\n  };\n\n  var inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n    return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  };\n\n  var actions = {\n    appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.appendBuffer(bytes);\n        } catch (e) {\n          sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n          sourceUpdater.queuePending[type] = null;\n          onError(e);\n        }\n      };\n    },\n    remove: function remove(start, end) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.remove(start, end);\n        } catch (e) {\n          sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n        }\n      };\n    },\n    timestampOffset: function timestampOffset(offset) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n        sourceBuffer.timestampOffset = offset;\n      };\n    },\n    callback: function callback(_callback) {\n      return function (type, sourceUpdater) {\n        _callback();\n      };\n    },\n    endOfStream: function endOfStream(error) {\n      return function (sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n        try {\n          sourceUpdater.mediaSource.endOfStream(error);\n        } catch (e) {\n          videojs.log.warn('Failed to call media source endOfStream', e);\n        }\n      };\n    },\n    duration: function duration(_duration) {\n      return function (sourceUpdater) {\n        sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n        try {\n          sourceUpdater.mediaSource.duration = _duration;\n        } catch (e) {\n          videojs.log.warn('Failed to set media source duration', e);\n        }\n      };\n    },\n    abort: function abort() {\n      return function (type, sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.abort();\n        } catch (e) {\n          videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    addSourceBuffer: function addSourceBuffer(type, codec) {\n      return function (sourceUpdater) {\n        var titleType = toTitleCase(type);\n        var mime = getMimeForCodec(codec);\n        sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n        var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n        sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n        sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n        sourceUpdater.codecs[type] = codec;\n        sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n      };\n    },\n    removeSourceBuffer: function removeSourceBuffer(type) {\n      return function (sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n        try {\n          sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n        } catch (e) {\n          videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    changeType: function changeType(codec) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        } // do not update codec if we don't need to.\n\n\n        if (sourceUpdater.codecs[type] === codec) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n        sourceBuffer.changeType(mime);\n        sourceUpdater.codecs[type] = codec;\n      };\n    }\n  };\n\n  var pushQueue = function pushQueue(_ref) {\n    var type = _ref.type,\n        sourceUpdater = _ref.sourceUpdater,\n        action = _ref.action,\n        doneFn = _ref.doneFn,\n        name = _ref.name;\n    sourceUpdater.queue.push({\n      type: type,\n      action: action,\n      doneFn: doneFn,\n      name: name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n\n  var onUpdateend = function onUpdateend(type, sourceUpdater) {\n    return function (e) {\n      // Although there should, in theory, be a pending action for any updateend receieved,\n      // there are some actions that may trigger updateend events without set definitions in\n      // the w3c spec. For instance, setting the duration on the media source may trigger\n      // updateend events on source buffers. This does not appear to be in the spec. As such,\n      // if we encounter an updateend without a corresponding pending action from our queue\n      // for that source buffer type, process the next action.\n      if (sourceUpdater.queuePending[type]) {\n        var doneFn = sourceUpdater.queuePending[type].doneFn;\n        sourceUpdater.queuePending[type] = null;\n\n        if (doneFn) {\n          // if there's an error, report it\n          doneFn(sourceUpdater[type + \"Error_\"]);\n        }\n      }\n\n      shiftQueue(type, sourceUpdater);\n    };\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n\n  var SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n    function SourceUpdater(mediaSource) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.mediaSource = mediaSource;\n\n      _this.sourceopenListener_ = function () {\n        return shiftQueue('mediaSource', assertThisInitialized(_this));\n      };\n\n      _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n      _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      _this.audioTimestampOffset_ = 0;\n      _this.videoTimestampOffset_ = 0;\n      _this.queue = [];\n      _this.queuePending = {\n        audio: null,\n        video: null\n      };\n      _this.delayedAudioAppendQueue_ = [];\n      _this.videoAppendQueued_ = false;\n      _this.codecs = {};\n      _this.onVideoUpdateEnd_ = onUpdateend('video', assertThisInitialized(_this));\n      _this.onAudioUpdateEnd_ = onUpdateend('audio', assertThisInitialized(_this));\n\n      _this.onVideoError_ = function (e) {\n        // used for debugging\n        _this.videoError_ = e;\n      };\n\n      _this.onAudioError_ = function (e) {\n        // used for debugging\n        _this.audioError_ = e;\n      };\n\n      _this.createdSourceBuffers_ = false;\n      _this.initializedEme_ = false;\n      _this.triggeredReady_ = false;\n      return _this;\n    }\n\n    var _proto = SourceUpdater.prototype;\n\n    _proto.initializedEme = function initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    };\n\n    _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    };\n\n    _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n      return this.initializedEme_;\n    };\n\n    _proto.ready = function ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    };\n\n    _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    };\n\n    _proto.triggerReady = function triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n    ;\n\n    _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n    ;\n\n    _proto.abort = function abort(type) {\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n    ;\n\n    _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n    ;\n\n    _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n      // IE reports that it supports removeSourceBuffer, but often throws\n      // errors when attempting to use the function. So we report that it\n      // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this as well.\n      return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    SourceUpdater.canChangeType = function canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    _proto.canChangeType = function canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n    ;\n\n    _proto.changeType = function changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n    ;\n\n    _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n      var _this2 = this;\n\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n\n      Object.keys(codecs).forEach(function (type) {\n        var codec = codecs[type];\n\n        if (!_this2.hasCreatedSourceBuffers()) {\n          return _this2.addSourceBuffer(type, codec);\n        }\n\n        if (_this2.canChangeType()) {\n          _this2.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n    ;\n\n    _proto.appendBuffer = function appendBuffer(options, doneFn) {\n      var _this3 = this;\n\n      var segmentInfo = options.segmentInfo,\n          type = options.type,\n          bytes = options.bytes;\n      this.processedAppend_ = true;\n\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n\n      var onError = doneFn;\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn: doneFn,\n        name: 'appendBuffer'\n      });\n\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n\n        var queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(function (que) {\n          _this3.appendBuffer.apply(_this3, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n    ;\n\n    _proto.audioBuffered = function audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n    ;\n\n    _proto.videoBuffered = function videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n    ;\n\n    _proto.setDuration = function setDuration(duration, doneFn) {\n      if (doneFn === void 0) {\n        doneFn = noop;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n    ;\n\n    _proto.endOfStream = function endOfStream(error, doneFn) {\n      if (error === void 0) {\n        error = null;\n      }\n\n      if (doneFn === void 0) {\n        doneFn = noop;\n      }\n\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeAudio = function removeAudio(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeVideo = function removeVideo(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n    ;\n\n    _proto.updating = function updating() {\n      // the audio/video source buffer is updating\n      if (_updating('audio', this) || _updating('video', this)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n      this.videoTimestampOffset !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.audioQueueCallback = function audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.videoQueueCallback = function videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this4 = this;\n\n      this.trigger('dispose');\n      bufferTypes.forEach(function (type) {\n        _this4.abort(type);\n\n        if (_this4.canRemoveSourceBuffer()) {\n          _this4.removeSourceBuffer(type);\n        } else {\n          _this4[type + \"QueueCallback\"](function () {\n            return cleanupBuffer(type, _this4);\n          });\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n\n      this.off();\n    };\n\n    return SourceUpdater;\n  }(videojs.EventTarget);\n\n  var uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  };\n\n  var VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n    return _char3.charCodeAt(0);\n  }));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  var VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n    inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n    function VTTSegmentLoader(settings, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      _this.mediaSource_ = null;\n      _this.subtitlesTrack_ = null;\n      _this.loaderType_ = 'subtitle';\n      _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      _this.shouldSaveSegmentTimingInfo_ = false;\n      return _this;\n    }\n\n    var _proto = VTTSegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return videojs.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n    ;\n\n    _proto.track = function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n    ;\n\n    _proto.remove = function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      var _this2 = this; // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n      return null;\n    };\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n    ;\n\n    _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n\n      return segmentInfo;\n    };\n\n    _proto.stopForError = function stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      var _this3 = this;\n\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n\n        this.stopForError(error);\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      var segment = segmentInfo.segment;\n\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.stopForError({\n            message: 'Error loading vtt.js'\n          });\n\n          return;\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.segmentRequestFinished_(error, simpleSegment, result);\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message\n        });\n        return;\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    };\n\n    _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n    ;\n\n    _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n      var decoder;\n      var decodeBytesToString = false;\n\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n    ;\n\n    _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / clock_1 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    };\n\n    return VTTSegmentLoader;\n  }(SegmentLoader);\n  /**\n   * @file ad-cue-tags.js\n   */\n\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n\n  var findAdCue = function findAdCue(track, mediaTime) {\n    var cues = track.cues;\n\n    for (var i = 0; i < cues.length; i++) {\n      var cue = cues[i];\n\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n\n    return null;\n  };\n\n  var updateAdCues = function updateAdCues(media, track, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    if (!media.segments) {\n      return;\n    }\n\n    var mediaTime = offset;\n    var cue;\n\n    for (var i = 0; i < media.segments.length; i++) {\n      var segment = media.segments[i];\n\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n              adOffset = _segment$cueOutCont$s[0],\n              adTotal = _segment$cueOutCont$s[1];\n\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n\n      mediaTime += segment.duration;\n    }\n  }; // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n\n  var MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  var syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (duration !== Infinity) {\n        var syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n\n      var syncPoint = null;\n      var lastDistance = null;\n      var partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (var z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n      var partsAndSegments = getPartsAndSegments(playlist);\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      currentTime = currentTime || 0;\n\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        var lastDistance = null;\n\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var discontinuitySync = syncController.discontinuities[discontinuity];\n\n          if (discontinuitySync) {\n            var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex: segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (playlist.syncInfo) {\n        var syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }];\n\n  var SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SyncController, _videojs$EventTarget);\n\n    function SyncController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n      _this.timelines = [];\n      _this.discontinuities = [];\n      _this.timelineToDatetimeMappings = {};\n      _this.logger_ = logger('SyncController');\n      return _this;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Object}\n     *          A sync-point object\n     */\n\n\n    var _proto = SyncController.prototype;\n\n    _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n    ;\n\n    _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n    ;\n\n    _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n    ;\n\n    _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n    ;\n\n    _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n    ;\n\n    _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var firstSegment = playlist.segments[0];\n        var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n    ;\n\n    _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n      var segmentInfo = _ref.segmentInfo,\n          shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n      var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      var segment = segmentInfo.segment;\n\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n\n      var dateTime = segment.dateTimeObject;\n\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    };\n\n    _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    };\n\n    _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n    ;\n\n    _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n      var start;\n      var end;\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n        }\n\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n    ;\n\n    _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.off();\n    };\n\n    return SyncController;\n  }(videojs.EventTarget);\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n\n  var TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n    function TimelineChangeController() {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.pendingTimelineChanges_ = {};\n      _this.lastTimelineChanges_ = {};\n      return _this;\n    }\n\n    var _proto = TimelineChangeController.prototype;\n\n    _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    };\n\n    _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n      var type = _ref.type,\n          from = _ref.from,\n          to = _ref.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n\n      return this.pendingTimelineChanges_[type];\n    };\n\n    _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n      var type = _ref2.type,\n          from = _ref2.from,\n          to = _ref2.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        delete this.pendingTimelineChanges_[type];\n        this.trigger('timelinechange');\n      }\n\n      return this.lastTimelineChanges_[type];\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    };\n\n    return TimelineChangeController;\n  }(videojs.EventTarget);\n  /* rollup-plugin-worker-factory start for worker!/Users/gkatsevman/p/http-streaming-release/src/decrypter-worker.js */\n\n\n  var workerCode = transform(getWorkerString(function () {\n    function createCommonjsModule(fn, basedir, module) {\n      return module = {\n        path: basedir,\n        exports: {},\n        require: function require(path, base) {\n          return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n        }\n      }, fn(module, module.exports), module.exports;\n    }\n\n    function commonjsRequire() {\n      throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n    }\n\n    var createClass = createCommonjsModule(function (module) {\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      module.exports = _createClass;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var setPrototypeOf = createCommonjsModule(function (module) {\n      function _setPrototypeOf(o, p) {\n        module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n        return _setPrototypeOf(o, p);\n      }\n\n      module.exports = _setPrototypeOf;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var inheritsLoose = createCommonjsModule(function (module) {\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        setPrototypeOf(subClass, superClass);\n      }\n\n      module.exports = _inheritsLoose;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      var _proto = Stream.prototype;\n\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */\n      ;\n\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */\n      ;\n\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */\n      ;\n\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n      ;\n\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 3.1.2 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i;\n      var x;\n      var xInv;\n      var d = [];\n      var th = [];\n      var x2;\n      var x4;\n      var x8;\n      var s;\n      var tEnc;\n      var tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = /*#__PURE__*/function () {\n      function AES(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i;\n        var j;\n        var tmp;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        var encKey = key.slice(0);\n        var decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      var _proto = AES.prototype;\n\n      _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2;\n        var b2;\n        var c2; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream = /*#__PURE__*/function (_Stream) {\n      inheritsLoose(AsyncStream, _Stream);\n\n      function AsyncStream() {\n        var _this;\n\n        _this = _Stream.call(this, Stream) || this;\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      var _proto = AsyncStream.prototype;\n\n      _proto.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n      ;\n\n      _proto.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream;\n    }(Stream);\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt = function decrypt(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0;\n      var init1;\n      var init2;\n      var init3;\n      var encrypted0;\n      var encrypted1;\n      var encrypted2;\n      var encrypted3; // iteration variable\n\n      var wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter = /*#__PURE__*/function () {\n      function Decrypter(encrypted, key, initVector, done) {\n        var step = Decrypter.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n\n      var _proto = Decrypter.prototype;\n      /**\n       * @private\n       */\n\n      _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter, null, [{\n        key: \"STEP\",\n        get: function get() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n\n    self.onmessage = function (event) {\n      var data = event.data;\n      var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/Users/gkatsevman/p/http-streaming-release/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  var audioTrackKind_ = function audioTrackKind_(properties) {\n    var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n\n  var stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n    segmentLoader.abort();\n    segmentLoader.pause();\n\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n\n  var startLoaders = function startLoaders(playlistLoader, mediaType) {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n\n  var onGroupChanged = function onGroupChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad[type],\n          mainSegmentLoader = _settings$segmentLoad.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n      if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup || activeGroup.isMasterPlaylist) {\n        // there is no group active or active group is a main playlist and won't change\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        if (previousActiveLoader) {\n          // The previous group had a playlist loader but the new active group does not\n          // this means we are switching from demuxed to muxed audio. In this case we want to\n          // do a destructive reset of the main segment loader and not restart the audio\n          // loaders.\n          mainSegmentLoader.resetEverything();\n        }\n\n        return;\n      } // Non-destructive resync\n\n\n      segmentLoader.resyncLoader();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onGroupChanging = function onGroupChanging(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      mediaType.lastGroup_ = null;\n      segmentLoader.abort();\n      segmentLoader.pause();\n    };\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n\n  var onTrackChanged = function onTrackChanged(type, settings) {\n    return function () {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          _settings$segmentLoad2 = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad2[type],\n          mainSegmentLoader = _settings$segmentLoad2.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n      if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active so we do not want to restart loaders\n        return;\n      }\n\n      if (activeGroup.isMasterPlaylist) {\n        // track did not change, do nothing\n        if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n          return;\n        }\n\n        var mpc = settings.vhs.masterPlaylistController_;\n        var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n        if (mpc.media() === newPlaylist) {\n          return;\n        }\n\n        mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n        masterPlaylistLoader.pause();\n        mainSegmentLoader.resetEverything();\n        mpc.fastQualityChange_(newPlaylist);\n        return;\n      }\n\n      if (type === 'AUDIO') {\n        if (!activeGroup.playlistLoader) {\n          // when switching from demuxed audio/video to muxed audio/video (noted by no\n          // playlist loader for the audio group), we want to do a destructive reset of the\n          // main segment loader and not restart the audio loaders\n          mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n          // it should be stopped\n\n          mainSegmentLoader.resetEverything();\n          return;\n        } // although the segment loader is an audio segment loader, call the setAudio\n        // function to ensure it is prepared to re-append the init segment (or handle other\n        // config changes)\n\n\n        segmentLoader.setAudio(true);\n        mainSegmentLoader.setAudio(false);\n      }\n\n      if (previousActiveLoader === activeGroup.playlistLoader) {\n        // Nothing has actually changed. This can happen because track change events can fire\n        // multiple times for a \"single\" change. One for enabling the new active track, and\n        // one for disabling the track that was active\n        startLoaders(activeGroup.playlistLoader, mediaType);\n        return;\n      }\n\n      if (segmentLoader.track) {\n        // For WebVTT, set the new text track in the segmentloader\n        segmentLoader.track(activeTrack);\n      } // destructive reset\n\n\n      segmentLoader.resetEverything();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type],\n            blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n        stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n        var activeTrack = mediaType.activeTrack();\n        var activeGroup = mediaType.activeGroup();\n        var id = (activeGroup.filter(function (group) {\n          return group[\"default\"];\n        })[0] || activeGroup[0]).id;\n        var defaultTrack = mediaType.tracks[id];\n\n        if (activeTrack === defaultTrack) {\n          // Default track encountered an error. All we can do now is blacklist the current\n          // rendition and hope another will switch audio groups\n          blacklistCurrentPlaylist({\n            message: 'Problem encountered loading the default audio track.'\n          });\n          return;\n        }\n\n        videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n        for (var trackId in mediaType.tracks) {\n          mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n        }\n\n        mediaType.onTrackChanged();\n      };\n    },\n\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type];\n        videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n        stopLoaders(segmentLoader, mediaType);\n        var track = mediaType.activeTrack();\n\n        if (track) {\n          track.mode = 'disabled';\n        }\n\n        mediaType.onTrackChanged();\n      };\n    }\n  };\n  var setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: function AUDIO(type, playlistLoader, settings) {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  var initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': function AUDIO(type, settings) {\n      var vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$ = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$.groups,\n          tracks = _settings$mediaTypes$.tracks,\n          logger_ = _settings$mediaTypes$.logger_,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n      var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            \"default\": {\n              \"default\": true\n            }\n          }\n        };\n\n        if (audioOnlyMaster) {\n          mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n        }\n      }\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (audioOnlyMaster) {\n            logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n            properties.isMasterPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              \"default\": properties[\"default\"],\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': function SUBTITLES(type, settings) {\n      var tech = settings.tech,\n          vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$2 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$2.groups,\n          tracks = _settings$mediaTypes$2.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            var playlists = properties.playlists.filter(function (p) {\n              return p.excludeUntil !== Infinity;\n            });\n\n            if (!playlists.length) {\n              return;\n            }\n\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              \"default\": properties[\"default\"] && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n      var tech = settings.tech,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$3 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$3.groups,\n          tracks = _settings$mediaTypes$3.tracks;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n\n          var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          var newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            \"default\": properties[\"default\"] && properties.autoselect\n          };\n\n          if (captionServices[newProps.instreamId]) {\n            newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n          }\n\n          if (newProps[\"default\"] === undefined) {\n            delete newProps[\"default\"];\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n\n          groups[groupId].push(videojs.mergeOptions({\n            id: variantLabel\n          }, properties));\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              \"default\": newProps[\"default\"],\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n\n  var groupMatch = function groupMatch(list, media) {\n    for (var i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n\n  var activeGroup = function activeGroup(type, settings) {\n    return function (track) {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          groups = settings.mediaTypes[type].groups;\n      var media = masterPlaylistLoader.media();\n\n      if (!media) {\n        return null;\n      }\n\n      var variants = null; // set to variants to main media active group\n\n      if (media.attributes[type]) {\n        variants = groups[media.attributes[type]];\n      }\n\n      var groupKeys = Object.keys(groups);\n\n      if (!variants) {\n        // find the masterPlaylistLoader media\n        // that is in a media group if we are dealing\n        // with audio only\n        if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n          for (var i = 0; i < groupKeys.length; i++) {\n            var groupPropertyList = groups[groupKeys[i]];\n\n            if (groupMatch(groupPropertyList, media)) {\n              variants = groupPropertyList;\n              break;\n            }\n          } // use the main group if it exists\n\n        } else if (groups.main) {\n          variants = groups.main; // only one group, use that one\n        } else if (groupKeys.length === 1) {\n          variants = groups[groupKeys[0]];\n        }\n      }\n\n      if (typeof track === 'undefined') {\n        return variants;\n      }\n\n      if (track === null || !variants) {\n        // An active track was specified so a corresponding group is expected. track === null\n        // means no track is currently active so there is no corresponding group\n        return null;\n      }\n\n      return variants.filter(function (props) {\n        return props.id === track.id;\n      })[0] || null;\n    };\n  };\n\n  var activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].enabled) {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    },\n\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    }\n  };\n\n  var getActiveGroup = function getActiveGroup(type, _ref) {\n    var mediaTypes = _ref.mediaTypes;\n    return function () {\n      var activeTrack_ = mediaTypes[type].activeTrack();\n\n      if (!activeTrack_) {\n        return null;\n      }\n\n      return mediaTypes[type].activeGroup(activeTrack_);\n    };\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the master manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.masterPlaylistLoader\n   *        PlaylistLoader for the master source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.master\n   *        The parsed master manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.blacklistCurrentPlaylist\n   *        Blacklists the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n\n  var setupMediaGroups = function setupMediaGroups(settings) {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      initialize[type](type, settings);\n    });\n    var mediaTypes = settings.mediaTypes,\n        masterPlaylistLoader = settings.masterPlaylistLoader,\n        tech = settings.tech,\n        vhs = settings.vhs,\n        _settings$segmentLoad3 = settings.segmentLoaders,\n        audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n        mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n    if (audioGroup) {\n      var groupId = (audioGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n\n    masterPlaylistLoader.on('mediachange', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanged();\n      });\n    });\n    masterPlaylistLoader.on('mediachanging', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanging();\n      });\n    }); // custom audio track change event handler for usage event\n\n    var onAudioTrackChanged = function onAudioTrackChanged() {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-audio-change'\n      });\n    };\n\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', function () {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n\n    for (var id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n\n  var createMediaTypes = function createMediaTypes() {\n    var mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(\"MediaGroups[\" + type + \"]\")\n      };\n    });\n    return mediaTypes;\n  };\n\n  var ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n  var Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  var loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\n  var sumLoaderStat = function sumLoaderStat(stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n\n  var shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n    var currentPlaylist = _ref.currentPlaylist,\n        buffered = _ref.buffered,\n        currentTime = _ref.currentTime,\n        nextPlaylist = _ref.nextPlaylist,\n        bufferLowWaterLine = _ref.bufferLowWaterLine,\n        bufferHighWaterLine = _ref.bufferHighWaterLine,\n        duration = _ref.duration,\n        experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n        log = _ref.log; // we have no other playlist to switch to\n\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n\n    var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n    if (!currentPlaylist) {\n      log(sharedLogLine + \" as current playlist is not set\");\n      return true;\n    } // no need to switch if playlist is the same\n\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n\n    var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n        return false;\n      }\n\n      log(sharedLogLine + \" as current playlist is live\");\n      return true;\n    }\n\n    var forwardBuffer = timeAheadOf(buffered, currentTime);\n    var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n      return true;\n    }\n\n    var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n      if (experimentalBufferBasedABR) {\n        logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n      }\n\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n\n    if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n      if (experimentalBufferBasedABR) {\n        _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n      }\n\n      log(_logLine);\n      return true;\n    }\n\n    log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n    return false;\n  };\n  /**\n   * the master playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a master playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class MasterPlaylistController\n   * @extends videojs.EventTarget\n   */\n\n\n  var MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n    function MasterPlaylistController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      var src = options.src,\n          handleManifestRedirects = options.handleManifestRedirects,\n          withCredentials = options.withCredentials,\n          tech = options.tech,\n          bandwidth = options.bandwidth,\n          externVhs = options.externVhs,\n          useCueTags = options.useCueTags,\n          blacklistDuration = options.blacklistDuration,\n          enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n          sourceType = options.sourceType,\n          cacheEncryptionKeys = options.cacheEncryptionKeys,\n          experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n          experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n          captionServices = options.captionServices;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n\n      var maxPlaylistRetries = options.maxPlaylistRetries;\n\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n\n      Vhs$1 = externVhs;\n      _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n      _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n      _this.withCredentials = withCredentials;\n      _this.tech_ = tech;\n      _this.vhs_ = tech.vhs;\n      _this.sourceType_ = sourceType;\n      _this.useCueTags_ = useCueTags;\n      _this.blacklistDuration = blacklistDuration;\n      _this.maxPlaylistRetries = maxPlaylistRetries;\n      _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n      if (_this.useCueTags_) {\n        _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n        _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n\n      _this.requestOptions_ = {\n        withCredentials: withCredentials,\n        handleManifestRedirects: handleManifestRedirects,\n        maxPlaylistRetries: maxPlaylistRetries,\n        timeout: null\n      };\n\n      _this.on('error', _this.pauseLoading);\n\n      _this.mediaTypes_ = createMediaTypes();\n      _this.mediaSource = new window.MediaSource();\n      _this.handleDurationChange_ = _this.handleDurationChange_.bind(assertThisInitialized(_this));\n      _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(assertThisInitialized(_this));\n      _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(assertThisInitialized(_this));\n\n      _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n      _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n      _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n\n      _this.seekable_ = videojs.createTimeRanges();\n      _this.hasPlayed_ = false;\n      _this.syncController_ = new SyncController(options);\n      _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      _this.decrypter_ = new Decrypter();\n      _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n      _this.inbandTextTracks_ = {};\n      _this.timelineChangeController_ = new TimelineChangeController();\n      var segmentLoaderSettings = {\n        vhs: _this.vhs_,\n        parse708captions: options.parse708captions,\n        captionServices: captionServices,\n        mediaSource: _this.mediaSource,\n        currentTime: _this.tech_.currentTime.bind(_this.tech_),\n        seekable: function seekable() {\n          return _this.seekable();\n        },\n        seeking: function seeking() {\n          return _this.tech_.seeking();\n        },\n        duration: function duration() {\n          return _this.duration();\n        },\n        hasPlayed: function hasPlayed() {\n          return _this.hasPlayed_;\n        },\n        goalBufferLength: function goalBufferLength() {\n          return _this.goalBufferLength();\n        },\n        bandwidth: bandwidth,\n        syncController: _this.syncController_,\n        decrypter: _this.decrypter_,\n        sourceType: _this.sourceType_,\n        inbandTextTracks: _this.inbandTextTracks_,\n        cacheEncryptionKeys: cacheEncryptionKeys,\n        sourceUpdater: _this.sourceUpdater_,\n        timelineChangeController: _this.timelineChangeController_,\n        experimentalExactManifestTimings: options.experimentalExactManifestTimings\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n      _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n\n      _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        segmentMetadataTrack: _this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n      }), options);\n\n      _this.setupSegmentLoaderListeners_();\n\n      if (_this.experimentalBufferBasedABR) {\n        _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n          return _this.startABRTimer_();\n        });\n\n        _this.tech_.on('pause', function () {\n          return _this.stopABRTimer_();\n        });\n\n        _this.tech_.on('play', function () {\n          return _this.startABRTimer_();\n        });\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n\n      loaderStats.forEach(function (stat) {\n        _this[stat + '_'] = sumLoaderStat.bind(assertThisInitialized(_this), stat);\n      });\n      _this.logger_ = logger('MPC');\n      _this.triggeredFmp4Usage = false;\n\n      if (_this.tech_.preload() === 'none') {\n        _this.loadOnPlay_ = function () {\n          _this.loadOnPlay_ = null;\n\n          _this.masterPlaylistLoader_.load();\n        };\n\n        _this.tech_.one('play', _this.loadOnPlay_);\n      } else {\n        _this.masterPlaylistLoader_.load();\n      }\n\n      _this.timeToLoadedData__ = -1;\n      _this.mainAppendsToLoadedData__ = -1;\n      _this.audioAppendsToLoadedData__ = -1;\n      var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      _this.tech_.one(event, function () {\n        var timeToLoadedDataStart = Date.now();\n\n        _this.tech_.one('loadeddata', function () {\n          _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n          _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n\n      return _this;\n    }\n\n    var _proto = MasterPlaylistController.prototype;\n\n    _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    };\n\n    _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    };\n\n    _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n      var main = this.mainAppendsToLoadedData_();\n      var audio = this.audioAppendsToLoadedData_();\n\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n\n      return main + audio;\n    };\n\n    _proto.timeToLoadedData_ = function timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @private\n     *\n     */\n    ;\n\n    _proto.checkABR_ = function checkABR_() {\n      var nextPlaylist = this.selectPlaylist();\n\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, 'abr');\n      }\n    };\n\n    _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n      var oldMedia = this.media();\n      var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      var newId = playlist.id || playlist.uri;\n\n      if (oldId && oldId !== newId) {\n        this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n        this.tech_.trigger({\n          type: 'usage',\n          name: \"vhs-rendition-change-\" + cause\n        });\n      }\n\n      this.masterPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.startABRTimer_ = function startABRTimer_() {\n      var _this2 = this;\n\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(function () {\n        return _this2.checkABR_();\n      }, 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.stopABRTimer_ = function stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n    ;\n\n    _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n      var master = this.master();\n      var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in masters\n      // playlist array, use that or an empty array.\n\n      if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n\n      var AUDIO = master.mediaGroups.AUDIO;\n      var groupKeys = Object.keys(AUDIO);\n      var track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n        for (var label in defaultGroup) {\n          if (defaultGroup[label][\"default\"]) {\n            track = {\n              label: label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n\n      var playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (var group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          var properties = AUDIO[group][track.label];\n\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (master.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (var i = 0; i < master.playlists.length; i++) {\n              var playlist = master.playlists[i];\n\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n\n      return playlists;\n    }\n    /**\n     * Register event handlers on the master playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n      var _this3 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this3.tech_.preload() !== 'none') {\n          _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n          _this3.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this3.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this3.audioSegmentLoader_,\n            SUBTITLES: _this3.subtitleSegmentLoader_,\n            main: _this3.mainSegmentLoader_\n          },\n          tech: _this3.tech_,\n          requestOptions: _this3.requestOptions_,\n          masterPlaylistLoader: _this3.masterPlaylistLoader_,\n          vhs: _this3.vhs_,\n          master: _this3.master(),\n          mediaTypes: _this3.mediaTypes_,\n          blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n        });\n\n        _this3.triggerPresenceUsage_(_this3.master(), media);\n\n        _this3.setupFirstPlay();\n\n        if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this3.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this3.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        if (_this3.loadOnPlay_) {\n          _this3.tech_.off('play', _this3.loadOnPlay_);\n        }\n\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this3.excludeUnsupportedVariants_();\n\n          var selectedMedia;\n\n          if (_this3.enableLowInitialPlaylist) {\n            selectedMedia = _this3.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this3.selectPlaylist();\n          }\n\n          if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n\n          _this3.initialMedia_ = selectedMedia;\n\n          _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n\n          var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n          if (!haveJsonSource) {\n            return;\n          }\n\n          updatedPlaylist = _this3.initialMedia_;\n        }\n\n        _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this3.mainSegmentLoader_.abort();\n\n        _this3.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n\n        _this3.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n\n        var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this3.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }); // useful for monitoring QoS\n\n\n          _this3.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n    ;\n\n    _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    };\n\n    _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n      var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n      var currentTime = this.tech_.currentTime();\n      var bufferLowWaterLine = this.bufferLowWaterLine();\n      var bufferHighWaterLine = this.bufferHighWaterLine();\n      var buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered: buffered,\n        currentTime: currentTime,\n        currentPlaylist: currentPlaylist,\n        nextPlaylist: nextPlaylist,\n        bufferLowWaterLine: bufferLowWaterLine,\n        bufferHighWaterLine: bufferHighWaterLine,\n        duration: this.duration(),\n        experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n      var _this4 = this;\n\n      if (!this.experimentalBufferBasedABR) {\n        this.mainSegmentLoader_.on('bandwidthupdate', function () {\n          var nextPlaylist = _this4.selectPlaylist();\n\n          if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n            _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n          }\n\n          _this4.tech_.trigger('bandwidthupdate');\n        });\n        this.mainSegmentLoader_.on('progress', function () {\n          _this4.trigger('progress');\n        });\n      }\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.mainSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.audioSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this4.logger_('main segment loader ended');\n\n        _this4.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function (event) {\n        // never try to early abort with the new ABR algorithm\n        if (_this4.experimentalBufferBasedABR) {\n          return;\n        }\n\n        _this4.delegateLoaders_('all', ['abort']);\n\n        _this4.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      var updateCodecs = function updateCodecs() {\n        if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return _this4.tryToCreateSourceBuffers_();\n        }\n\n        var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n        if (!codecs) {\n          return;\n        }\n\n        _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this4.logger_('audioSegmentLoader ended');\n\n        _this4.onEndOfStream();\n      });\n    };\n\n    _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n    ;\n\n    _proto.load = function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     * @deprecated\n     */\n    ;\n\n    _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      this.fastQualityChange_(media);\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n    ;\n\n    _proto.fastQualityChange_ = function fastQualityChange_(media) {\n      var _this5 = this;\n\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n\n      this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n        } else {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n    ;\n\n    _proto.play = function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n    ;\n\n    _proto.setupFirstPlay = function setupFirstPlay() {\n      var _this6 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this6.trigger('firstplay');\n\n            _this6.tech_.setCurrentTime(seekable.end(0));\n\n            _this6.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceOpen_ = function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceEnded_ = function handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n\n      var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n      if (!cues || !cues.length) {\n        return;\n      }\n\n      var duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleDurationChange_ = function handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n    ;\n\n    _proto.onEndOfStream = function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n    ;\n\n    _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n    ;\n\n    _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n      if (error === void 0) {\n        error = {};\n      } // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n\n      var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n\n        return;\n      }\n\n      currentPlaylist.playlistErrors_++;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var enabledPlaylists = playlists.filter(isEnabled);\n      var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n      // forever\n\n      if (playlists.length === 1 && blacklistDuration !== Infinity) {\n        videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        var reincluded = false;\n        playlists.forEach(function (playlist) {\n          // skip current playlist which is about to be blacklisted\n          if (playlist === currentPlaylist) {\n            return;\n          }\n\n          var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Blacklist this playlist\n\n\n      var excludeUntil;\n\n      if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + blacklistDuration * 1000;\n      }\n\n      currentPlaylist.excludeUntil = excludeUntil;\n\n      if (error.reason) {\n        currentPlaylist.lastExcludeReason_ = error.reason;\n      }\n\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-blacklisted'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n      // Would be something like media().id !=== currentPlaylist.id and we  would need something\n      // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n      // from loading a new playlist on any blacklist.\n      // Select a new playlist\n\n      var nextPlaylist = this.selectPlaylist();\n\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n\n      var logFn = error.internal ? this.logger_ : videojs.log.warn;\n      var errorMessage = error.message ? ' ' + error.message : '';\n      logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n\n      if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n    ;\n\n    _proto.pauseLoading = function pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main/master loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n    ;\n\n    _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n      var _this7 = this;\n\n      var loaders = [];\n      var dontFilterPlaylist = filter === 'all';\n\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.masterPlaylistLoader_);\n      }\n\n      var mediaTypes = [];\n\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n\n      mediaTypes.forEach(function (mediaType) {\n        var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(function (name) {\n        var loader = _this7[name + \"SegmentLoader_\"];\n\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(function (loader) {\n        return fnNames.forEach(function (fnName) {\n          if (typeof loader[fnName] === 'function') {\n            loader[fnName]();\n          }\n        });\n      });\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n    ;\n\n    _proto.duration = function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.seekable_;\n    };\n\n    _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n      var audioSeekable; // If we have two source buffers and only one is created then the seekable range will be incorrect.\n      // We should wait until all source buffers are created.\n\n      if (!this.masterPlaylistLoader_ || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var master = this.masterPlaylistLoader_.master;\n      var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd;\n      var oldStart;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n    ;\n\n    _proto.updateDuration = function updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n\n      if (isLive) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n\n        return;\n      }\n\n      var buffered = this.tech_.buffered();\n      var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this8 = this;\n\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this8.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n    ;\n\n    _proto.master = function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n    ;\n\n    _proto.media = function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    };\n\n    _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n      var _this9 = this;\n\n      var media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      }; // set \"main\" media equal to video\n\n      media.video = media.main;\n      var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n      var codecs = {};\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n\n      if (media.main.isMuxed) {\n        codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n      }\n\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n\n      if (!codecs.audio && !codecs.video) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: 'Could not determine codecs for playlist.',\n          blacklistDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n      var supportFunction = function supportFunction(isFmp4, codec) {\n        return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      };\n\n      var unsupportedCodecs = {};\n      var unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n\n      if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n        var audioGroup = this.media().attributes.AUDIO;\n        this.master().playlists.forEach(function (variant) {\n          var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n          if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n      } // if we have any unsupported codecs blacklist this playlist.\n\n\n      if (Object.keys(unsupportedCodecs).length) {\n        var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n          if (acc) {\n            acc += ', ';\n          }\n\n          acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n          return acc;\n        }, '') + '.';\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          internal: true,\n          message: message,\n          blacklistDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        var switchMessages = [];\n        ['video', 'audio'].forEach(function (type) {\n          var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n          }\n        });\n\n        if (switchMessages.length) {\n          this.blacklistCurrentPlaylist({\n            playlist: this.media(),\n            message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n            blacklistDuration: Infinity,\n            internal: true\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n    ;\n\n    _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n\n      var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n    ;\n\n    _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n      var _this10 = this;\n\n      var playlists = this.master().playlists;\n      var ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var codecs = codecsForPlaylist(_this10.master, variant);\n        var unsupported = [];\n\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(\"audio codec \" + codecs.audio);\n        }\n\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(\"video codec \" + codecs.video);\n        }\n\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(\"text codec \" + codecs.text);\n        }\n\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n\n          _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n    ;\n\n    _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n      var _this11 = this;\n\n      var ids = [];\n      var playlists = this.master().playlists;\n      var codecs = unwrapCodecList(parseCodecs(codecString));\n      var codecCount_ = codecCount(codecs);\n      var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var blacklistReasons = []; // get codecs from the playlist for this variant\n\n        var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n        var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n\n        if (variantCodecCount !== codecCount_) {\n          blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n\n        if (!_this11.sourceUpdater_.canChangeType()) {\n          var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n          } // the audio codec cannot change\n\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n          }\n        }\n\n        if (blacklistReasons.length) {\n          variant.excludeUntil = Infinity;\n\n          _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n        }\n      });\n    };\n\n    _proto.updateAdCues_ = function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n    ;\n\n    _proto.goalBufferLength = function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n    ;\n\n    _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n    };\n\n    _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    };\n\n    return MasterPlaylistController;\n  }(videojs.EventTarget);\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The master playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n\n  var enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n    return function (enable) {\n      var playlist = loader.master.playlists[playlistID];\n      var incompatible = isIncompatible(playlist);\n      var currentlyEnabled = isEnabled(playlist);\n\n      if (typeof enable === 'undefined') {\n        return currentlyEnabled;\n      }\n\n      if (enable) {\n        delete playlist.disabled;\n      } else {\n        playlist.disabled = true;\n      }\n\n      if (enable !== currentlyEnabled && !incompatible) {\n        // Ensure the outside world knows about our changes\n        changePlaylistFn();\n\n        if (enable) {\n          loader.trigger('renditionenabled');\n        } else {\n          loader.trigger('renditiondisabled');\n        }\n      }\n\n      return enable;\n    };\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n\n  var Representation = function Representation(vhsHandler, playlist, id) {\n    var mpc = vhsHandler.masterPlaylistController_,\n        smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n    var changeType = smoothQualityChange ? 'smooth' : 'fast';\n    var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      var resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n    }\n\n    this.codecs = codecsForPlaylist(mpc.master(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the master playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  };\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n\n  var renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = function () {\n      var master = vhsHandler.masterPlaylistController_.master();\n      var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n      if (!playlists) {\n        return [];\n      }\n\n      return playlists.filter(function (media) {\n        return !isIncompatible(media);\n      }).map(function (e, i) {\n        return new Representation(vhsHandler, e, e.id);\n      });\n    };\n  };\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n\n  var timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  var PlaybackWatcher = /*#__PURE__*/function () {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    function PlaybackWatcher(options) {\n      var _this = this;\n\n      this.masterPlaylistController_ = options.masterPlaylistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.timer_ = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n\n      var playHandler = function playHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var canPlayHandler = function canPlayHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var waitingHandler = function waitingHandler() {\n        return _this.techWaiting_();\n      };\n\n      var cancelTimerHandler = function cancelTimerHandler() {\n        return _this.cancelTimer_();\n      };\n\n      var mpc = this.masterPlaylistController_;\n      var loaderTypes = ['main', 'subtitle', 'audio'];\n      var loaderChecks = {};\n      loaderTypes.forEach(function (type) {\n        loaderChecks[type] = {\n          reset: function reset() {\n            return _this.resetSegmentDownloads_(type);\n          },\n          updateend: function updateend() {\n            return _this.checkSegmentDownloads_(type);\n          }\n        };\n        mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      var setSeekingHandlers = function setSeekingHandlers(fn) {\n        ['main', 'audio'].forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n        });\n      };\n\n      this.seekingAppendCheck_ = function () {\n        if (_this.fixesBadSeeks_()) {\n          _this.consecutiveUpdates = 0;\n          _this.lastRecordedTime = _this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n\n      this.clearSeekingAppendCheck_ = function () {\n        return setSeekingHandlers('off');\n      };\n\n      this.watchForBadSeeking_ = function () {\n        _this.clearSeekingAppendCheck_();\n\n        setSeekingHandlers('on');\n      };\n\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = function () {\n        _this.clearSeekingAppendCheck_();\n\n        _this.logger_('dispose');\n\n        _this.tech_.off('waiting', waitingHandler);\n\n        _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n        _this.tech_.off('canplay', canPlayHandler);\n\n        _this.tech_.off('play', playHandler);\n\n        _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n        _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n        loaderTypes.forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n          mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n          _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n\n        if (_this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(_this.checkCurrentTimeTimeout_);\n        }\n\n        _this.cancelTimer_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n\n    var _proto = PlaybackWatcher.prototype;\n\n    _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n    ;\n\n    _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n      var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n      if (this[type + \"StalledDownloads_\"] > 0) {\n        this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n      }\n\n      this[type + \"StalledDownloads_\"] = 0;\n      this[type + \"Buffered_\"] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We blacklist the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n    ;\n\n    _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n      var mpc = this.masterPlaylistController_;\n      var loader = mpc[type + \"SegmentLoader_\"];\n      var buffered = loader.buffered_();\n      var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n      this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n\n      this[type + \"StalledDownloads_\"]++;\n      this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[type + \"StalledDownloads_\"] < 10) {\n        return;\n      }\n\n      this.logger_(type + \" loader stalled download exclusion\");\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-\" + type + \"-download-exclusion\"\n      });\n\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n\n      mpc.blacklistCurrentPlaylist({\n        message: \"Excessive \" + type + \" segment downloading detected.\"\n      }, Infinity);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n    ;\n\n    _proto.checkCurrentTime_ = function checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n    ;\n\n    _proto.cancelTimer_ = function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n    ;\n\n    _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      var media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      var bufferedToCheck = [audioBuffered, videoBuffered];\n\n      for (var i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n\n        var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n    ;\n\n    _proto.waiting_ = function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n    ;\n\n    _proto.techWaiting_ = function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime: currentTime\n      });\n\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n        this.cancelTimer_();\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    };\n\n    _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n      if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n        allowSeeksWithinUnsafeLiveWindow = false;\n      }\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n      var videoBuffered = _ref.videoBuffered,\n          audioBuffered = _ref.audioBuffered,\n          currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n      if (!videoBuffered) {\n        return;\n      }\n\n      var gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        var videoRange = findRange(videoBuffered, currentTime);\n        var audioRange = findRange(audioBuffered, currentTime);\n\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n\n      } else {\n        var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n\n      if (gap) {\n        this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n    ;\n\n    _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    };\n\n    _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    };\n\n    return PlaybackWatcher;\n  }();\n\n  var defaultOptions = {\n    errorInterval: 30,\n    getSource: function getSource(next) {\n      var tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      var sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  var initPlugin = function initPlugin(player, options) {\n    var lastCalled = 0;\n    var seekTo = 0;\n    var localOptions = videojs.mergeOptions(defaultOptions, options);\n    player.ready(function () {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    var loadedMetadataHandler = function loadedMetadataHandler() {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n\n    var setSource = function setSource(sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n\n    var errorHandler = function errorHandler() {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        player.trigger({\n          type: 'usage',\n          name: 'hls-error-reload-canceled'\n        });\n        return;\n      }\n\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n\n    var cleanupEvents = function cleanupEvents() {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n\n    var reinitPlugin = function reinitPlugin(newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n\n  var reloadSourceOnError = function reloadSourceOnError(options) {\n    initPlugin(this, options);\n  };\n\n  var version$4 = \"2.12.0\";\n  var version$3 = \"5.14.1\";\n  var version$2 = \"0.19.2\";\n  var version$1 = \"4.7.0\";\n  var version = \"3.1.2\";\n  var Vhs = {\n    PlaylistLoader: PlaylistLoader,\n    Playlist: Playlist,\n    utils: utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector: lastBandwidthSelector,\n    movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n    comparePlaylistBandwidth: comparePlaylistBandwidth,\n    comparePlaylistResolution: comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(function (prop) {\n    Object.defineProperty(Vhs, prop, {\n      get: function get() {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n        return Config[prop];\n      },\n      set: function set(value) {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n          return;\n        }\n\n        Config[prop] = value;\n      }\n    });\n  });\n  var LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  var handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n    var newPlaylist = playlistLoader.media();\n    var selectedIndex = -1;\n\n    for (var i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex: selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n\n  var handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n    vhs.representations().forEach(function (rep) {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // HLS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n\n    var codecs = {};\n\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n\n    var videoContentType = getMimeForCodec(codecs.video);\n    var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    var keySystemContentTypes = {};\n\n    for (var keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n\n    return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n\n  var getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n    return playlists.reduce(function (keySystemsArr, playlist) {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n\n      var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n        var keySystemOptions = playlist.contentProtection[keySystem];\n\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n\n        return keySystemsObj;\n      }, {});\n\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the master playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n\n  var waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n    var player = _ref.player,\n        sourceKeySystems = _ref.sourceKeySystems,\n        audioMedia = _ref.audioMedia,\n        mainPlaylists = _ref.mainPlaylists;\n\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n\n    var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    var initializationFinishedPromises = [];\n    var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but the early\n    // return for IE11 above, and the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n      keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, function (err) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([// If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n\n  var setupEmeOptions = function setupEmeOptions(_ref2) {\n    var player = _ref2.player,\n        sourceKeySystems = _ref2.sourceKeySystems,\n        media = _ref2.media,\n        audioMedia = _ref2.audioMedia;\n    var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n    if (!sourceOptions) {\n      return false;\n    }\n\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n\n    return true;\n  };\n\n  var getVhsLocalStorage = function getVhsLocalStorage() {\n    if (!window.localStorage) {\n      return null;\n    }\n\n    var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (!storedObject) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n\n  var updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n    if (!window.localStorage) {\n      return false;\n    }\n\n    var objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n\n  var expandDataUri = function expandDataUri(dataUri) {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n\n    return dataUri;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n\n    var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n\n    var canPlay = [// Apple santioned\n    'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n    'audio/mpegurl', // Very common\n    'audio/x-mpegurl', // Very common\n    'application/x-mpegurl', // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n\n  Vhs.supportsTypeNatively = function (type) {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n\n    return false;\n  };\n  /**\n   * HLS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of HLS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  var VhsHandler = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VhsHandler, _Component);\n\n    function VhsHandler(source, tech, options) {\n      var _this;\n\n      _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n      if (options.hls && Object.keys(options.hls).length) {\n        videojs.log.warn('Using hls options is deprecated. Use vhs instead.');\n      } // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n\n      if (typeof options.initialBandwidth === 'number') {\n        _this.options_.bandwidth = options.initialBandwidth;\n      }\n\n      _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n      // backwards-compatibility\n\n      if (tech.options_ && tech.options_.playerId) {\n        var _player = videojs(tech.options_.playerId);\n\n        if (!_player.hasOwnProperty('hls')) {\n          Object.defineProperty(_player, 'hls', {\n            get: function get() {\n              videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'hls-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('vhs')) {\n          Object.defineProperty(_player, 'vhs', {\n            get: function get() {\n              videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'vhs-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('dash')) {\n          Object.defineProperty(_player, 'dash', {\n            get: function get() {\n              videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        _this.player_ = _player;\n      }\n\n      _this.tech_ = tech;\n      _this.source_ = source;\n      _this.stats = {};\n      _this.ignoreNextSeekingEvent_ = false;\n\n      _this.setOptions_();\n\n      if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native HLS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n\n      _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n        var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n        if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n          _this.masterPlaylistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          _this.masterPlaylistController_.checkABR_();\n        }\n      });\n\n      _this.on(_this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n\n      _this.on(_this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have mpc loaded.\n        if (this.tech_.error() && this.masterPlaylistController_) {\n          this.masterPlaylistController_.pauseLoading();\n        }\n      });\n\n      _this.on(_this.tech_, 'play', _this.play);\n\n      return _this;\n    }\n\n    var _proto = VhsHandler.prototype;\n\n    _proto.setOptions_ = function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n    ;\n\n    _proto.src = function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      if (this.options_.smoothQualityChange) {\n        videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n      }\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      var playbackWatcherOptions = videojs.mergeOptions({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        },\n        masterPlaylistController: this.masterPlaylistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs.players[_this3.tech_.options_.playerId];\n        var error = _this3.masterPlaylistController_.error;\n\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n\n        player.error(error);\n      });\n      var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n            var networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            var tenMbpsAsBitsPerSecond = 10e6;\n\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n\n            return playerBandwidthEst;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        mediaAppends: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaAppends_() || 0;\n          },\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(_this3);\n      });\n      this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n        _this3.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n    ;\n\n    _proto.setupEme_ = function setupEme_() {\n      var _this4 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      var didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', function (e) {\n        if (e.status === 'output-restricted') {\n          _this4.masterPlaylistController_.blacklistCurrentPlaylist({\n            playlist: _this4.masterPlaylistController_.media(),\n            message: \"DRM keystatus changed to \" + e.status + \". Playlist will fail to play. Check for HDCP content.\",\n            blacklistDuration: Infinity\n          });\n        }\n      }); // In IE11 this is too early to initialize media keys, and IE11 does not support\n      // promises.\n\n      if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.masterPlaylistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.master.playlists\n      }).then(function () {\n        _this4.logger_('created EME key session');\n\n        _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n      })[\"catch\"](function (err) {\n        _this4.logger_('error while creating EME key session', err);\n\n        _this4.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n    ;\n\n    _proto.setupQualityLevels_ = function setupQualityLevels_() {\n      var _this5 = this;\n\n      var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleVhsLoadedMetadata(_this5.qualityLevels_, _this5);\n      });\n      this.playlists.on('mediachange', function () {\n        handleVhsMediaChange(_this5.qualityLevels_, _this5.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    VhsHandler.version = function version$5() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    _proto.version = function version() {\n      return this.constructor.version();\n    };\n\n    _proto.canChangeType = function canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n    ;\n\n    _proto.play = function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.duration = function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n      if (this.tech_) {\n        delete this.tech_.hls;\n      }\n\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n    ;\n\n    _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n      if (pauseAfterSeek === void 0) {\n        pauseAfterSeek = true;\n      }\n\n      if (retryCount === void 0) {\n        retryCount = 2;\n      }\n\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    };\n\n    return VhsHandler;\n  }(Component);\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n\n  var VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource: function canHandleSource(srcObj, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n\n      if (!videojs.hasOwnProperty('hls')) {\n        Object.defineProperty(tech, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n            return tech.vhs;\n          },\n          configurable: true\n        });\n      }\n\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType: function canPlayType(type, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n          _videojs$mergeOptions2 = _videojs$mergeOptions.vhs.overrideNative,\n          overrideNative = _videojs$mergeOptions2 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions2;\n\n      var supportedType = simpleTypeFromSourceType(type);\n      var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  var supportsNativeMediaSources = function supportsNativeMediaSources() {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n\n  videojs.VhsHandler = VhsHandler;\n  Object.defineProperty(videojs, 'HlsHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n      return VhsHandler;\n    },\n    configurable: true\n  });\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  Object.defineProperty(videojs, 'HlsSourceHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n      return VhsSourceHandler;\n    },\n    configurable: true\n  });\n  videojs.Vhs = Vhs;\n  Object.defineProperty(videojs, 'Hls', {\n    get: function get() {\n      videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n      return Vhs;\n    },\n    configurable: true\n  });\n\n  if (!videojs.use) {\n    videojs.registerComponent('Hls', Vhs);\n    videojs.registerComponent('Vhs', Vhs);\n  }\n\n  videojs.options.vhs = videojs.options.vhs || {};\n  videojs.options.hls = videojs.options.hls || {};\n\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\n    registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n})));\n"],"names":["global","factory","exports","module","define","amd","globalThis","self","videojs","this","browserApi","version$5","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","document","_i","history","LogByTypeFactory","name","log","level","args","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","window","console","info","test","Array","isArray","log$1","createLogger$1","logByType","_len","arguments","_key","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","commonjsGlobal","createCommonjsModule","_extends_1","_extends","Object","assign","target","source","key","prototype","call","apply","toString$1","toString","keys","object","isObject$1","each","forEach","sources","value","isPlain","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","match","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","opts","defineProperty","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","debounce","immediate","timeout","debounced","_later","clearTimeout","cancel","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","supportsRaf_","requestNamedAnimationFrame","_this4","cancelNamedAnimationFrame","cancelAnimationFrame","_this5","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","assertThisInitialized","ReferenceError","inheritsLoose","subClass","superClass","create","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","Symbol","iterator","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","tuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","keycode","searchInput","hasKeyCode","foundNamedKey","search","String","codes","aliases","charCodeAt","isEventKey","nameOrCode","backspace","tab","enter","ctrl","alt","esc","space","home","up","right","down","insert","delete","command","windows","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","MODAL_CLASS_NAME","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","window_1","isFunction_1","alert","confirm","prompt","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","contentType","_contentType$split","getCharset","headers","decode","Uint8Array","createXHR","parseHeaders","row","lib","default_1","initParams","uri","params","_createXHR","called","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","aborted","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","defineProperties","default","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","doccy","topLevel","document_1","_objCreate","F","o","ParsingError","errorData","parseTimeStamp","input","computeSeconds","h","s","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","v","region","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","center","middle","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","current","localName","annotation","rootDiv","tagStack","innerHTML","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","count","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","vtt","autoKeyword","directionSetting","lr","rl","alignSetting","auto","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","enumerable","pauseOnExit","TypeError","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","replaceChild","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","_this8","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this9","resolve","play_","_this10","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this11","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this12","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this13","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","handleSrc_","isRetry","_this14","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this15","sourceTech","_this16","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","_this17","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","toJSON","createModal","_this18","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this19","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","setPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","instance","Function","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","hasPlugin","inherits","normalizeId","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","dom","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","Stream","_length","pipe","destination","atob","Buffer","decodeB64ToUint8Array","b64Text","decodedString","LineStream","_Stream","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","currentMap","uris","currentUri","hasParts","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","resolveUrl$1","baseUrl","relativeUrl","nativeURL","URL","protocolLess","removeLocation","newUrl","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","NAMESPACE","NAMESPACE$2","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","ns","namespaceURI","_nsMap","prefix","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","newFirst","newLast","pre","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer$1","nodeSerializeToString","isHtml","nodeFilter","buf","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","_importNode","deep","node2","_cloneNode","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createElementNS","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","DOMImplementation","XMLSerializer","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError$1","locator","XMLReader$1","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","warning","setTagName","closed","appendElement$1","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","defaultNSMap","startDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","endMatch","locator2","_parse","endDocument","getLocalName","getLocator","getQName","getURI","sax","XMLReader","ParseError","DOMParser$1","DOMHandler","cdata","_locator","_toString","chars","java","appendElement","hander","parseFromString","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","build","msg","buildErrorHandler","xml","documentURI","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","_error","DOMParser","__DOMHandler","isObject","merge","objects","flatten","lists","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","_ref$indexRange","indexRange","resolvedUri","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","generateSidxKey","mergeDiscontiguousPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist$1","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","_ref3","_attributes2","CODECS","bandwidth","videoOnly","_ref4","audioOnly","_ref5","vttOnly","_ref6","toM3u8","dashPlaylists","locations","_mediaGroups","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captionServices","isAudioOnly","mainPlaylist","formattedPlaylists","roleLabel","formatted","_attributes","formatAudioPlaylist","organizeAudioPlaylists","subs","_m3u8Attributes","m3u8Attributes","formatVttPlaylist","organizeVttPlaylists","cc","svcObj","svc","service","channel","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","presentationTime","periodStart","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","_value$split","flags","_value$split2","_value$split2$","opt","_opt$split","labelVal","keySystem","psshNode","psshBuffer","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","parsedPeriodId","adaptationSets","stringToMpdXml","manifestString","mpd","parsedManifestInfo","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","parseSidx_1","view","DataView","byteOffset","byteLength","subarray","referenceId","getUint32","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","toUint8","bytes","ArrayBuffer","isView","BigInt","BYTE_TABLE","bytesToNumber","_temp","_ref$signed","signed","_ref$le","total","_byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","bytesMatch","_temp3","_ref3$offset","_ref3$mask","mask","bByte","ID3","getId3Offset","returnSize","getId3Size","normalizePath$1","findBox","paths","complete","normalizePaths$1","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","normalizePaths","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","matroska","ac3","riff","avi","fmp4","moov","moof","_isLikely","docType","h264","findH264Nal","h265","findH265Nal","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","isLikely","detectContainerForBytes","sampleRate","timestamp","clock_1","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","filterRanges","timeRanges","findRange","TIME_FUDGE_FACTOR","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","master","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","endIndex","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","oldSegment","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","_ref$customTagParsers","_ref$customTagMappers","customParser","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","byterangeEnd","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","masterXml","newMaster","oldMaster","noChanges","playlistUpdate","group","_playlistUpdate","updateMaster","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","emulationPreventionBytesPositions","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","Cea708Service","serviceNum","encoding","currentWindow","createTextDecoder","startPts","win","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","handleRollover$1","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","subresults","toUnsigned$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","baseTimes","scale","baseTime","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","ONE_SECOND_IN_TS","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","_ref7","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","_ref9","didError","segmentFinish","_ref8","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","audioDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","basedir","require","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","precompute","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","audioPlaylistLoader","didSetupEmeOptions","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions2","supportedType"],"mappings":"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"}